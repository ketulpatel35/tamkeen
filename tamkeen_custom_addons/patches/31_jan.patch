diff --git a/custom/auth_ldap_customization/users_ldap_customization.py b/custom/auth_ldap_customization/users_ldap_customization.py
index 1bbfc8d..1223083 100644
--- a/custom/auth_ldap_customization/users_ldap_customization.py
+++ b/custom/auth_ldap_customization/users_ldap_customization.py
@@ -6,7 +6,7 @@
 #
 ##############################################################################
 from odoo import api, models
-from odoo import tools
+# from odoo import tools
 import logging
 _logger = logging.getLogger(__name__)
 
@@ -14,57 +14,93 @@ _logger = logging.getLogger(__name__)
 class CompanyLDAP(models.Model):
     _inherit = 'res.company.ldap'
 
+    # @api.model
+    # def get_or_create_user(self, conf, login, ldap_entry):
+    #     """
+    #     Retrieve an active resource of model res_users with the specified
+    #     login. Create the user if it is not initially found.
+    #
+    #     :param dict conf: LDAP configuration
+    #     :param login: the user's login
+    #     :param tuple ldap_entry: single LDAP result (dn, attrs)
+    #     :return: res_users id
+    #     :rtype: int
+    #     """
+    #
+    #     user_id = False
+    #     login = tools.ustr(login.lower().strip())
+    #     self.env.cr.execute("SELECT id,"
+    #                         " active FROM res_users WHERE"
+    #                         " lower(login)=%s", (login,))
+    #     res = self.env.cr.fetchone()
+    #     if res:
+    #         if res[1]:
+    #             user_id = res[0]
+    #     elif conf['create_user']:
+    #         _logger.debug("Creating new Odoo user \"%s\" from LDAP" % login)
+    #         values = self.map_ldap_attributes(conf, login, ldap_entry)
+    #         SudoUser = self.env['res.users'].sudo()
+    #         if conf['user']:
+    #             values['active'] = True
+    #             user_id = SudoUser.\
+    #                 browse(conf['user'][0]).copy(default=values).id
+    #
+    #         else:
+    #             '''NOTE --> Check if the employee
+    #              exists by searching him using
+    #               his email got from LDAP information
+    #             , If employee exists...Create him a User
+    #              and link this user by updating the employee
+    #               record with the new created user_id and
+    #                the work phone (extension)
+    #             , If not...He can't log in and a message
+    #              will appear to the user
+    #               (Invalid user or password) '''
+    #
+    #             employee_rec = self.pool.get('hr.employee').search([
+    #                 ('work_email', '=', ldap_entry[1]['mail'][0].lower())])
+    #             if employee_rec:
+    #                 values['email'] = ldap_entry[1]['mail'][0].lower()
+    #                 user_id = SudoUser.create(values).id
+    #                 employee_rec.\
+    #                     write({'user_id': user_id,
+    #                            'work_phone': ldap_entry[1]['telephoneNumber']
+    #                            [0] if ldap_entry[1].get('telephoneNumber')
+    #                            else False})
+    #     return user_id
+
     @api.model
     def get_or_create_user(self, conf, login, ldap_entry):
         """
         Retrieve an active resource of model res_users with the specified
         login. Create the user if it is not initially found.
-
         :param dict conf: LDAP configuration
         :param login: the user's login
         :param tuple ldap_entry: single LDAP result (dn, attrs)
         :return: res_users id
         :rtype: int
         """
-
-        user_id = False
-        login = tools.ustr(login.lower().strip())
-        self.env.cr.execute("SELECT id,"
-                            " active FROM res_users WHERE"
-                            " lower(login)=%s", (login,))
-        res = self.env.cr.fetchone()
+        employee_rec = False
+        res = super(CompanyLDAP, self).get_or_create_user(conf, login,
+                                                          ldap_entry)
         if res:
-            if res[1]:
-                user_id = res[0]
-        elif conf['create_user']:
-            _logger.debug("Creating new Odoo user \"%s\" from LDAP" % login)
-            values = self.map_ldap_attributes(conf, login, ldap_entry)
-            SudoUser = self.env['res.users'].sudo()
-            if conf['user']:
-                values['active'] = True
-                user_id = SudoUser.\
-                    browse(conf['user'][0]).copy(default=values).id
-
-            else:
-                '''NOTE --> Check if the employee
-                 exists by searching him using
-                  his email got from LDAP information
-                , If employee exists...Create him a User
-                 and link this user by updating the employee
-                  record with the new created user_id and
-                   the work phone (extension)
-                , If not...He can't log in and a message
-                 will appear to the user
-                  (Invalid user or password) '''
-
-                employee_rec = self.pool.get('hr.employee').search([
-                    ('work_email', '=', ldap_entry[1]['mail'][0].lower())])
+            user_rec = self.env['res.company'].browse(res)
+            if conf['create_user'] and not conf['user']:
+                '''NOTE --> Check if the employee exists by searching him
+                using his email got from LDAP information If employee exists
+                ...Create him a User and link this user by updating the
+                employee record with the new created user_id and the work
+                phone (extension) If not...He can't log in and a message
+                will appear to the user (Invalid user or password) '''
+                if ldap_entry and ldap_entry[1] and ldap_entry[1]['mail']:
+                    employee_rec = self.env['hr.employee'].search([
+                        ('work_email', '=', ldap_entry[1]['mail'][0].lower())])
                 if employee_rec:
-                    values['email'] = ldap_entry[1]['mail'][0].lower()
-                    user_id = SudoUser.create(values).id
-                    employee_rec.\
-                        write({'user_id': user_id,
-                               'work_phone': ldap_entry[1]['telephoneNumber']
-                               [0] if ldap_entry[1].get('telephoneNumber')
+                    user_rec.write({'email': ldap_entry[1]['mail'][0].lower()})
+                    employee_rec. \
+                        write({'user_id': user_rec and user_rec.id,
+                               'work_phone': ldap_entry[1]
+                               ['telephoneNumber'][0] if
+                               ldap_entry[1].get('telephoneNumber')
                                else False})
-        return user_id
+        return res
diff --git a/custom/bank_ir8a_payroll_report/__manifest__.py b/custom/bank_ir8a_payroll_report/__manifest__.py
index 71318c9..e625bf4 100755
--- a/custom/bank_ir8a_payroll_report/__manifest__.py
+++ b/custom/bank_ir8a_payroll_report/__manifest__.py
@@ -18,7 +18,8 @@ Export employees payslip details to a formatted bank IR8A text file.
     'author': 'Bista Solutions',
     'depends': [
         'hr_payroll_period',
-        'hr_security',
+        'hr_admin',
+        'base',
     ],
     'data': [
         # 'report.xml',
diff --git a/custom/bank_ir8a_payroll_report/res_company.py b/custom/bank_ir8a_payroll_report/res_company.py
index e530590..6be565c 100755
--- a/custom/bank_ir8a_payroll_report/res_company.py
+++ b/custom/bank_ir8a_payroll_report/res_company.py
@@ -15,3 +15,7 @@ class res_company(models.Model):
                                             '15!d (99-999999999999999)')
     connect_id = fields.Char(string='Connect ID', default='ABC74849001',
                              help='Connect ID with the bank.')
+    # payroll_bank = fields.Many2one('res.bank', string='Payroll Bank')
+    payroll_partner_bank =\
+        fields.Many2one('res.partner.bank',
+                        string='Payroll Account Number', required=1)
diff --git a/custom/bank_ir8a_payroll_report/res_company_view.xml b/custom/bank_ir8a_payroll_report/res_company_view.xml
index abd22de..c329fd4 100755
--- a/custom/bank_ir8a_payroll_report/res_company_view.xml
+++ b/custom/bank_ir8a_payroll_report/res_company_view.xml
@@ -11,6 +11,7 @@
                        position="after">
                     <field name="mol_establishment_id"/>
                     <field name="connect_id"/>
+                    <field name="payroll_partner_bank"/>
                 </xpath>
             </field>
         </record>
diff --git a/custom/bank_ir8a_payroll_report/security/ir.model.access.csv b/custom/bank_ir8a_payroll_report/security/ir.model.access.csv
index 48255b9..2332440 100755
--- a/custom/bank_ir8a_payroll_report/security/ir.model.access.csv
+++ b/custom/bank_ir8a_payroll_report/security/ir.model.access.csv
@@ -1,5 +1,5 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
-
-access_hr_payroll_manager,access_hr_payroll_ir8a_wizard,model_bank_ir8a_wizard,hr_security.group_payroll_manager,1,1,1,1
+
+access_hr_payroll_manager,access_hr_payroll_ir8a_wizard,model_bank_ir8a_wizard,hr_admin.group_hr_admin,1,1,1,1
 
 
diff --git a/custom/bank_ir8a_payroll_report/wizard/bank_ir8a_waizard.py b/custom/bank_ir8a_payroll_report/wizard/bank_ir8a_waizard.py
index dfca6fa..d0070a6 100755
--- a/custom/bank_ir8a_payroll_report/wizard/bank_ir8a_waizard.py
+++ b/custom/bank_ir8a_payroll_report/wizard/bank_ir8a_waizard.py
@@ -3,6 +3,8 @@ from odoo import fields, models, api
 import base64
 import datetime
 from odoo.exceptions import Warning
+from random import randint
+from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as DF
 
 
 class bank_ir8a_wizard(models.TransientModel):
@@ -10,7 +12,7 @@ class bank_ir8a_wizard(models.TransientModel):
     payroll_period_id = fields.Many2one('hr.payroll.period', string='Payroll'
                                                                     'Period')
     date_start = fields.Datetime(string='Period Start Date')
-    date_end = fields.Datetime(string='Period Start Date')
+    date_end = fields.Datetime(string='Period End Date')
     payment_purpose_code = fields.Selection([('S', 'Salary'), ('B', 'Bonus'),
                                              ('O', 'Other Payments'),
                                              ('N', 'Non ACH Payments')],
@@ -60,10 +62,7 @@ class bank_ir8a_wizard(models.TransientModel):
                                                          'number.')
     connect_id = fields.Char(string='Connect ID',
                              help='Connect ID.')
-    filename = fields.Char(string='File Name',
-                           default='WPS.9883.CY.SAR.' + str(
-                               datetime.datetime.now().strftime("%d%H%M%S%f")[
-                                   :-1]) + ".txt")
+    filename = fields.Char(string='File Name')
     data = fields.Binary(string='Export to File', readonly=True)
     report_destination = fields.Selection(
         [('bank', 'Bank'), ('other', 'Other')],
@@ -80,16 +79,16 @@ class bank_ir8a_wizard(models.TransientModel):
 
     @api.onchange('company_id')
     def onchange_company_id(self):
-        if self.company_id:
-            debit_account_number = ''
-            if self.company_id.bank_ids:
-                for bank in self.company_id.bank_ids:
-                    if bank.bank_bic == 'AAAL':
-                        debit_account_number = bank.acc_number
+        debit_account_number = ''
+        if self.company_id and\
+                self.company_id.payroll_partner_bank and\
+                self.company_id.payroll_partner_bank.acc_number:
+            debit_account_number =\
+                self.company_id.payroll_partner_bank.acc_number
             self.employer_id = self.company_id.company_registry
             self.mol_establishment_id = self.company_id.mol_establishment_id
-            self.debit_account_number = debit_account_number
             self.connect_id = self.company_id.connect_id
+        self.debit_account_number = debit_account_number
 
     @api.one
     def _compute_salary_rules(self, report_destination, payslip_line_ids):
@@ -129,7 +128,7 @@ class bank_ir8a_wizard(models.TransientModel):
     def action_generate_bank_ir8a(self):
 
         for rec in self:
-            current_datetime = datetime.datetime.now().strftime("%Y-%m-%d")
+            current_datetime = datetime.datetime.now().strftime(DF)
             if rec.value_date < current_datetime:
                 raise Warning(
                     "Value date should not be less then the "
@@ -137,23 +136,22 @@ class bank_ir8a_wizard(models.TransientModel):
 
             creation_date = datetime.datetime.now().strftime(
                 "%Y%m%d")  # ("%Y/%m/%d")
-            value_date = datetime.datetime.strptime(rec.value_date, "%Y-%m-%d")
+            value_date = datetime.datetime.strptime(rec.value_date, DF)
             value_date = value_date.strftime('%Y%m%d')
             # employee_id #Beneficiary's Employee ID.
             # This has to be unique within a file.
             # bank id #Bank ID/ SWIFT ID to identify the bank.
             # Payment Amount #Payment amount to the employee. With two decimal
             # places No preceeding zeros allowed
-            file_reference = 'WPS.' + str(rec.connect_id) + '.CY.SAR.' + str(
-                datetime.datetime.now().strftime("%d%H%M%S%f")[
-                    :-1])  # ("%d%H%M%S%f")[:-3] 'CONv' + str(datetime.datetime
+            file_reference = str(datetime.datetime.now().strftime(
+                "%d%H%M%S%f")[:-1]) + str(randint(111, 999))
+            file_name = 'WPS.9883.CY.SAR.' + file_reference + ".txt"
             # .now().strftime("%Y%m%d%H%M%S"))
             # batch_reference = 'W' + str(datetime.datetime.now().
             # strftime("%Y%m%d%H%M%S"))
+
             record_number, total_sum = 0, 0.0
             employee_line, line2 = "", ""
-            space = ' '
-
             payslip_obj = self.env['hr.payslip']
 
             period_payslip_ids = payslip_obj.search([('date_from', '>=',
@@ -190,18 +188,33 @@ class bank_ir8a_wizard(models.TransientModel):
                     formatted_net_salary = (
                         '%.2f' % salary_rules['net_salary']).replace('.', ',')
 
-                    employee_line = \
-                        "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s" \
-                        "\t%s\r\n" % (formatted_net_salary,
-                                      payslip.employee_id.bank_account,
-                                      payslip.employee_id.name,
-                                      payslip.employee_id.bank_id.bic,
-                                      rec.payment_narration, space,
-                                      formatted_beneficiary_basic_salary,
-                                      formatted_housing_allowance,
-                                      formatted_other_earnings,
-                                      formatted_deductions, employee_identity,
-                                      space, space, space)
+                    # employee_line = \
+                    #     "%s\t%s\t%s\t%s\t%s\t%s\t
+                    # %s\t%s\t%s\t%s\t%s\t%s\t%s" \
+                    #     "\t%s\r\n" % (formatted_net_salary,
+                    #                   payslip.employee_id.bank_account,
+                    #                   payslip.employee_id.name,
+                    #                   payslip.employee_id.bank_id.bic,
+                    #                   rec.payment_narration, space,
+                    #                   formatted_beneficiary_basic_salary,
+                    #                   formatted_housing_allowance,
+                    #                   formatted_other_earnings,
+                    #                   formatted_deductions,
+                    #  employee_identity,
+                    #                   space, space, space)
+
+                    employee_line = "%s\t%s\t%s\t%s\t%s\t\t" \
+                                    "%s\t%s\t%s\t%s\t%s\t\t\t\r\n" %\
+                                    (formatted_net_salary,
+                                     payslip.employee_id.bank_account,
+                                     payslip.employee_id.name,
+                                     payslip.employee_id.bank_id.bic,
+                                     rec.payment_narration,
+                                     formatted_beneficiary_basic_salary,
+                                     formatted_housing_allowance,
+                                     formatted_other_earnings,
+                                     formatted_deductions,
+                                     employee_identity)
 
                     line2 += employee_line
                     # else:
@@ -217,13 +230,23 @@ class bank_ir8a_wizard(models.TransientModel):
                                                      ',')  # The total amount
             # being paid out through the payment file.
 
-            line1 = "AAAL\t%s\t%s\tSAR\t%s\t%s\t%s\t%s\t%s\t%s\r\n" % (
-                rec.connect_id, rec.debit_account_number, creation_date,
-                total_sum, value_date, file_reference, space,
-                rec.mol_establishment_id)
+            # line1 = "AAAL\t%s\t%s\tSAR\t%s\t%s\t%s\t%s\t%s\t%s\r\n" % (
+            #     rec.connect_id, rec.debit_account_number, creation_date,
+            #     total_sum, value_date, file_reference, space,
+            #     rec.mol_establishment_id)
+            #
+            # output = line1 + line2
+            # rec.data = base64.encodestring(output.encode('utf-8'))
+
+            line1 = "AAAL\t%s\t%s\tSAR\t%s\t%s\t%s\t%s\t\t%s\r\n" % (
+                rec.connect_id, rec.debit_account_number,
+                creation_date, total_sum, value_date,
+                file_reference, rec.mol_establishment_id)
+            line3 = "-"
+            output = line1 + line2 + line3
+            self.write({'data': base64.encodestring(
+                output.encode('utf-8')), 'filename': file_name})
 
-            output = line1 + line2
-            rec.data = base64.encodestring(output.encode('utf-8'))
         return {
             'type': 'ir.actions.act_window',
             'res_model': 'bank.ir8a.wizard',
diff --git a/custom/bank_ir8a_payroll_report/wizard/bank_ir8a_waizard_view.xml b/custom/bank_ir8a_payroll_report/wizard/bank_ir8a_waizard_view.xml
index 44861b0..6530672 100755
--- a/custom/bank_ir8a_payroll_report/wizard/bank_ir8a_waizard_view.xml
+++ b/custom/bank_ir8a_payroll_report/wizard/bank_ir8a_waizard_view.xml
@@ -66,7 +66,7 @@
         <menuitem id="menu_generate_bank_ir8a_data"
                   action="action_generate_bank_ir8a_data"
                   parent="hr_payroll.menu_hr_payroll_root"
-                  groups="hr_security.group_payroll_manager" sequence="37"/>
+                  groups="hr_admin.group_hr_admin" sequence="37"/>
         
 
     </data>
diff --git a/custom/ceo_group/__manifest__.py b/custom/ceo_group/__manifest__.py
index cbd2bf4..c9f1055 100644
--- a/custom/ceo_group/__manifest__.py
+++ b/custom/ceo_group/__manifest__.py
@@ -13,7 +13,7 @@
                 # 'purchase_requisition',
                 'project', 'stock',
                 # 'marketing',
-                'hr_security',
+                'hr_admin',
                 'emp_self_services',
                 'sales_team',
                 'purchase',
diff --git a/custom/ceo_group/security/ir_rule.xml b/custom/ceo_group/security/ir_rule.xml
index 2e398b4..bd67745 100644
--- a/custom/ceo_group/security/ir_rule.xml
+++ b/custom/ceo_group/security/ir_rule.xml
@@ -5,9 +5,9 @@
         <record id="group_ceo" model="res.groups">
                 <field name="name">CEO</field>
             <field name="implied_ids"
-                   eval="[(4, ref('account.group_account_manager')),(4, ref('hr.group_hr_manager')),(4, ref('project.group_project_manager')), (4, ref('purchase.group_purchase_manager')), (4, ref('sales_team.group_sale_manager')), (4, ref('project.group_project_manager')),(4, ref('stock.group_stock_manager')), (4, ref('hr_security.group_payroll_manager')),(4, ref('survey.group_survey_manager'))]"/>
+                   eval="[(4, ref('account.group_account_manager')),(4, ref('hr.group_hr_manager')),(4, ref('project.group_project_manager')), (4, ref('purchase.group_purchase_manager')), (4, ref('sales_team.group_sale_manager')), (4, ref('project.group_project_manager')),(4, ref('stock.group_stock_manager')), (4, ref('hr_admin.group_hr_admin')),(4, ref('survey.group_survey_manager'))]"/>
             <!--some module are not in dependant so some group can not assign-->
-                <!--<field name="implied_ids" eval="[(4, ref('account.group_account_manager')),(4, ref('request_management.group_request_general_manager')),(4, ref('purchase.group_purchase_manager')),(4, ref('request_management.group_request_manager')),(4, ref('base.group_sale_manager')),(4, ref('purchase_requisition.group_purchase_requisition_manager')),(4, ref('base.group_hr_manager')),(4, ref('project.group_project_manager')),(4, ref('stock.group_stock_manager')),(4, ref('marketing.group_marketing_manager')),(4, ref('hr_security.group_payroll_manager')),(4, ref('base.group_survey_manager'))]"/>-->
+                <!--<field name="implied_ids" eval="[(4, ref('account.group_account_manager')),(4, ref('request_management.group_request_general_manager')),(4, ref('purchase.group_purchase_manager')),(4, ref('request_management.group_request_manager')),(4, ref('base.group_sale_manager')),(4, ref('purchase_requisition.group_purchase_requisition_manager')),(4, ref('base.group_hr_manager')),(4, ref('project.group_project_manager')),(4, ref('stock.group_stock_manager')),(4, ref('marketing.group_marketing_manager')),(4, ref('hr_admin.group_hr_admin')),(4, ref('base.group_survey_manager'))]"/>-->
         </record>
 
         <record model="ir.rule" id="ceo_menus_visibility_rule">
diff --git a/custom/default_employee_approval_line/wizard/hr_employee_approval_line.py b/custom/default_employee_approval_line/wizard/hr_employee_approval_line.py
index 894b7f7..391d006 100755
--- a/custom/default_employee_approval_line/wizard/hr_employee_approval_line.py
+++ b/custom/default_employee_approval_line/wizard/hr_employee_approval_line.py
@@ -57,16 +57,17 @@ class default_employee_approval_line(models.TransientModel):
                 service_vp_id = employee.id
                 service_ceo_id = employee.id
 
-        employee.service_manager_id = service_manager_id
-        employee.service_vp_id = service_vp_id
-        employee.service_ceo_id = service_ceo_id
+        return {'service_manager_id': service_manager_id,
+                'service_vp_id': service_vp_id,
+                'service_ceo_id': service_ceo_id}
 
     @api.multi
     def action_reset_default_employee_approval_line(self):
         employee_pool = self.env['hr.employee']
         employee_ids = employee_pool.search([('active', '=', True)])
         for employee in employee_ids:
-            self._get_employee_approval_line(employee)
+            employee_approval_line = self._get_employee_approval_line(employee)
+            employee.write(employee_approval_line)
 
         return {
             'type': 'ir.actions.act_window',
diff --git a/custom/emp_self_services/__manifest__.py b/custom/emp_self_services/__manifest__.py
index f685a7e..cdb59b1 100644
--- a/custom/emp_self_services/__manifest__.py
+++ b/custom/emp_self_services/__manifest__.py
@@ -38,15 +38,17 @@
     'depends': [
         'hr_contract',
         'hr_holidays',
+        'resource',
     ],
     'data': [
         'security/hr_security.xml',
+        'security/ir.model.access.csv',
+        'security/ir_rule.xml',
         'views/hr_experiences_view.xml',
         'views/hr_qualifications_view.xml',
         'views/hr_trainings_view.xml',
         'views/hr_empl_view.xml',
         'views/hr_services_menu.xml',
-        'security/ir.model.access.csv'
     ],
     'images': [],
     'demo': [],
diff --git a/custom/emp_self_services/models/hr_trainings.py b/custom/emp_self_services/models/hr_trainings.py
index 632ef8b..019dc10 100644
--- a/custom/emp_self_services/models/hr_trainings.py
+++ b/custom/emp_self_services/models/hr_trainings.py
@@ -1,6 +1,7 @@
 from datetime import datetime
 from odoo.exceptions import Warning
 from odoo import fields, models, api, _
+from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as OE_DATEFORMAT
 
 
 class hr_trainings(models.Model):
@@ -24,7 +25,7 @@ class hr_trainings(models.Model):
                 raise Warning(_('The start date must be anterior '
                                 'to the end date.'))
             else:
-                s_date = datetime.strptime(self.start_date, '%Y-%m-%d')
-                e_date = datetime.strptime(self.end_date, '%Y-%m-%d')
+                s_date = datetime.strptime(self.start_date, OE_DATEFORMAT)
+                e_date = datetime.strptime(self.end_date, OE_DATEFORMAT)
                 days = (e_date - s_date).days + 1
                 self.number_of_days = days
diff --git a/custom/emp_self_services/security/hr_security.xml b/custom/emp_self_services/security/hr_security.xml
index ce70c0b..18f4880 100644
--- a/custom/emp_self_services/security/hr_security.xml
+++ b/custom/emp_self_services/security/hr_security.xml
@@ -3,14 +3,22 @@
     <record id="group_mss" model="res.groups">
         <field name="name">Manager Self Services</field>
     </record>
-    <record id="rule_employee" model="ir.rule">
-        <field name="name">Employee own info only</field>
-        <field name="model_id" ref="hr.model_hr_employee" />
-        <field name="domain_force">[('user_id','=',user.id)]</field>
-        <field name="groups" eval="[(4,ref('base.group_user'))]" />
-        <field name="perm_read" eval="True" />
-        <field name="perm_write" eval="False" />
-        <field name="perm_create" eval="False" />
-        <field name="perm_unlink" eval="False" />
+    <record id="group_view_emp_info" model="res.groups">
+        <field name="name">View Employee Information</field>
+        <field name="category_id" ref="base.module_category_human_resources"/>
+        <field name="implied_ids" eval="[(4, ref('base.group_user'))]"/>
+        <field name="comment">the user will be able to View Employee Information.</field>
+    </record>
+    <record id="group_create_emp_profile" model="res.groups">
+        <field name="name">Create Employee Profile</field>
+        <field name="category_id" ref="base.module_category_human_resources"/>
+        <field name="implied_ids" eval="[(4, ref('base.group_user')), (4, ref('emp_self_services.group_view_emp_info'))]"/>
+        <field name="comment">the user will be able to Create Employee Profile.</field>
+    </record>
+    <record id="group_Update_emp_info" model="res.groups">
+        <field name="name">Update Employee Information</field>
+        <field name="category_id" ref="base.module_category_human_resources"/>
+        <field name="implied_ids" eval="[(4, ref('base.group_user')), (4, ref('emp_self_services.group_view_emp_info'))]"/>
+        <field name="comment">the user will be able to Update Employee Information.</field>
     </record>
 </odoo>
\ No newline at end of file
diff --git a/custom/emp_self_services/security/ir.model.access.csv b/custom/emp_self_services/security/ir.model.access.csv
index 111d100..a32d7ff 100644
--- a/custom/emp_self_services/security/ir.model.access.csv
+++ b/custom/emp_self_services/security/ir.model.access.csv
@@ -1,8 +1,12 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
-id_tamkeen_hr_experiences_users,tamkeen_hr_experiences_user,model_tamkeen_hr_experiences,hr.group_hr_user,1,0,0,0
+id_tamkeen_hr_experiences_users,tamkeen_hr_experiences_user,model_tamkeen_hr_experiences,base.group_user,1,0,0,0
 id_tamkeen_hr_experiences_manager,tamkeen_hr_experiences_manager,model_tamkeen_hr_experiences,hr.group_hr_manager,1,1,1,1
-id_tamkeen_hr_qualifications_users,hr_qualifications_user,model_tamkeen_hr_qualifications,hr.group_hr_user,1,0,0,0
+id_tamkeen_hr_qualifications_users,hr_qualifications_user,model_tamkeen_hr_qualifications,base.group_user,1,0,0,0
 id_tamkeen_hr_qualifications_manager,hr_qualifications_manager,model_tamkeen_hr_qualifications,hr.group_hr_manager,1,1,1,1
-id_tamkeen_hr_trainings_users,tamkeen_hr_trainings_user,model_tamkeen_hr_trainings,hr.group_hr_user,1,0,0,0
+id_tamkeen_hr_trainings_users,tamkeen_hr_trainings_user,model_tamkeen_hr_trainings,base.group_user,1,0,0,0
 id_tamkeen_hr_trainings_manager,tamkeen_hr_trainings_manager,model_tamkeen_hr_trainings,hr.group_hr_manager,1,1,1,1
 access_hr_contract_employee,access_hr_contract,hr_contract.model_hr_contract,base.group_user,1,0,0,0
+access_hr_employee_profile_create,access.hr_employee.profile.create,model_hr_employee,emp_self_services.group_create_emp_profile,1,1,1,1
+access_hr_employee_profile_update,access.hr_employee.profile.update,model_hr_employee,emp_self_services.group_Update_emp_info,0,1,0,0
+access_hr_employee_resource_user,access.hr.employee.resource.user,resource.model_resource_resource,base.group_user,1,1,0,0
+access_hr_partner_user,access.hr.partner.user,base.model_res_partner,hr.group_hr_manager,1,1,1,0
\ No newline at end of file
diff --git a/custom/emp_self_services/views/hr_empl_view.xml b/custom/emp_self_services/views/hr_empl_view.xml
index bff83f2..c5935db 100644
--- a/custom/emp_self_services/views/hr_empl_view.xml
+++ b/custom/emp_self_services/views/hr_empl_view.xml
@@ -43,15 +43,23 @@
                 <attribute name="required">True</attribute>
             </field>
             <!--<page groups="hr.group_hr_user" position="after">-->
-            <xpath expr="//page[2]" position="after">
-                <page string="Sponsorship" groups="hr.group_hr_manager,hr.group_hr_user">
+            <xpath expr="//notebook//page[2]" position="attributes">
+                <attribute name="groups">emp_self_services.group_view_emp_info</attribute>
+            </xpath>
+            <xpath expr="//notebook//page[3]" position="attributes">
+                <attribute name="groups">emp_self_services.group_view_emp_info</attribute>
+            </xpath>
+            <xpath expr="//page[3]" position="after">
+                <!--<page string="Sponsorship" groups="hr.group_hr_manager,hr.group_hr_user">-->
+                <page string="Sponsorship" groups="emp_self_services.group_view_emp_info">
                     <group string="Sponsor Details">
                         <field name="sponsorname"/>
                         <field name="sponsoraddress" />
                         <field name="sponsorphone" />
                     </group>
                 </page>
-                <page string="Experiences" groups="hr.group_hr_manager,hr.group_hr_user" >
+                <!--<page string="Experiences" groups="hr.group_hr_manager,hr.group_hr_user" >-->
+                <page string="Experiences" groups="emp_self_services.group_view_emp_info">
                     <field name="experiences_line_id" nolabel="1" required="1">
                         <form string="Experiences">
                             <field name="emp_line" invisible="1"/>
@@ -71,7 +79,8 @@
                         </tree>
                     </field>
                 </page>
-                <page string="Qualifications" groups="hr.group_hr_manager,hr.group_hr_user">
+                <!--<page string="Qualifications" groups="hr.group_hr_manager,hr.group_hr_user">-->
+                <page string="Qualifications" groups="emp_self_services.group_view_emp_info">
                     <field name="qualifications_line_id" nolabel="1" required="1">
                         <tree string="Qualifications" editable="bottom">
                             <field name="emp_line" invisible="1"/>
@@ -83,7 +92,8 @@
                         </tree>
                     </field>
                 </page>
-                <page string="Trainings" groups="hr.group_hr_manager,hr.group_hr_user">
+                <!--<page string="Trainings" groups="hr.group_hr_manager,hr.group_hr_user">-->
+                <page string="Trainings" groups="emp_self_services.group_view_emp_info">
                     <field name="trainings_line_id" nolabel="1" required="1">
                         <form string="Trainings">
                             <field name="emp_line" invisible="1"/>
@@ -165,9 +175,12 @@
         <field name="model">hr.holidays</field>
         <field name="inherit_id" ref="hr_holidays.view_hr_holidays_filter" />
         <field name="arch" type="xml">
-                <filter name="approve" position="before">
-                    <filter string="Pending Approvals" name="mngr_leaves_to_approve" domain="['&amp;',('type','=','remove'),'&amp;',('employee_id.parent_id.user_id.id','=',uid),('state','=','confirm')]"/>
-                </filter>
+                <!--<filter name="approve" position="before">-->
+                    <!--<filter string="Pending Approvals" name="mngr_leaves_to_approve" domain="['&amp;',('type','=','remove'),'&amp;',('employee_id.parent_id.user_id.id','=',uid),('state','=','confirm')]"/>-->
+                <!--</filter>-->
+            <filter name="approve" position="before">
+                <filter string="Pending Approvals" name="mngr_leaves_to_approve" domain="['|',('state','in',['ceo', 'confirm']), ('employee_id.parent_id.user_id','=',uid)]"/>
+            </filter>
         </field>
     </record>
 
@@ -176,7 +189,7 @@
         <field name="res_model">hr.holidays</field>
         <field name="view_type">form</field>
         <field name="domain">
-            ['&amp;',('type','=','remove'),'&amp;',('employee_id.parent_id.user_id.id','=',uid),('state','!=','draft')]
+            ['&amp;',('type','=','remove'),('state','in',['ceo', 'confirm'])]
         </field>
         <field name="context">{'default_type': 'remove', 'search_default_mngr_leaves_to_approve':1}</field>
         <field name="search_view_id" ref="hr_holidays.view_hr_holidays_filter"/>
diff --git a/custom/employee_leave_summary/__manifest__.py b/custom/employee_leave_summary/__manifest__.py
index 2193850..fcf0b97 100644
--- a/custom/employee_leave_summary/__manifest__.py
+++ b/custom/employee_leave_summary/__manifest__.py
@@ -11,7 +11,7 @@
         'hr',
         'hr_holidays',
         'hr_contract',
-        'groups_rules',
+        'hr_admin',
         'ceo_group',
         'hr_holidays_extension',
     ],
diff --git a/custom/employee_leave_summary/views/hr_work_resumption_view.xml b/custom/employee_leave_summary/views/hr_work_resumption_view.xml
index f298e37..1afe81b 100644
--- a/custom/employee_leave_summary/views/hr_work_resumption_view.xml
+++ b/custom/employee_leave_summary/views/hr_work_resumption_view.xml
@@ -26,7 +26,7 @@
                                 name="action_manager_approve"
                                 states="confirm"
                                 type="object" class="oe_highlight"
-                                groups="hr_holidays_extension.group_hr_leave,groups_rules.group_employee_manager"/>
+                                groups="hr_holidays_extension.group_leave_bu_manager_approval,hr_admin.group_hr_admin"/>
 
                         <button string="VP Approval"
                                 name="action_vp_approve"
@@ -39,7 +39,7 @@
                         <button string="Hr Approved"
                                 name="action_hr_approval"
                                 states="validate1"
-                                groups="groups_rules.group_hr_planning_head"
+                                groups="hr_admin.group_hr_admin"
                                 type="object" class="oe_highlight"/>
 
                         <button string="Senior Hr Approved"
diff --git a/custom/fix_contract_duplicate/hr_contract.py b/custom/fix_contract_duplicate/hr_contract.py
index dbfd7fc..9e8d74f 100755
--- a/custom/fix_contract_duplicate/hr_contract.py
+++ b/custom/fix_contract_duplicate/hr_contract.py
@@ -1,10 +1,3 @@
-# -*- encoding: utf-8 -*-
-##############################################################################
-#
-#    Bista Solutions Pvt. Ltd
-#    Copyright (C) 2016 (http://www.bistasolutions.com)
-#
-##############################################################################
 
 from odoo import models, api
 
diff --git a/custom/fix_contract_duplicate/security/ir.model.access.csv b/custom/fix_contract_duplicate/security/ir.model.access.csv
index fef2b60..67d027f 100755
--- a/custom/fix_contract_duplicate/security/ir.model.access.csv
+++ b/custom/fix_contract_duplicate/security/ir.model.access.csv
@@ -1,7 +1,7 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_hr_contract_init_hro,access_hr_contract_initial,model_hr_contract_init,hr.group_hr_user,1,0,0,0
-access_hr_contract_init_hrd,access_hr_contract_initial,model_hr_contract_init,hr_security.group_hr_director,1,1,1,1
-access_hr_contract_init_payroll,access_hr_contract_initial,model_hr_contract_init,hr_security.group_payroll_manager,1,0,0,0
+access_hr_contract_init_hrd,access_hr_contract_initial,model_hr_contract_init,hr_admin.group_hr_admin,1,1,1,1
+access_hr_contract_init_payroll,access_hr_contract_initial,model_hr_contract_init,hr_admin.group_hr_admin,1,0,0,0
 access_hr_contract_init_wage_hro,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr.group_hr_user,1,0,0,0
-access_hr_contract_init_wage_hrd,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr_security.group_hr_director,1,1,1,1
-access_hr_contract_init_wage_payroll,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr_security.group_payroll_manager,1,0,0,0
+access_hr_contract_init_wage_hrd,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr_admin.group_hr_admin,1,1,1,1
+access_hr_contract_init_wage_payroll,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr_admin.group_hr_admin,1,0,0,0
diff --git a/custom/groups_rules/__manifest__.py b/custom/groups_rules/__manifest__.py
index 255ce3f..1fd971d 100644
--- a/custom/groups_rules/__manifest__.py
+++ b/custom/groups_rules/__manifest__.py
@@ -13,7 +13,7 @@
         'purchase_requisition',
         'hr_employee_state',
         'survey',
-        'hr_security',
+        'hr_admin',
         'hr_expense',
         'hr_policy_absence',
         'hr_policy_presence',
diff --git a/custom/groups_rules/security/groups.xml b/custom/groups_rules/security/groups.xml
index eee3815..73eab84 100644
--- a/custom/groups_rules/security/groups.xml
+++ b/custom/groups_rules/security/groups.xml
@@ -3,14 +3,14 @@
     <data noupdate="1">
         <record id="group_personnel_head" model="res.groups">
             <field name="name">Personnel Head</field>
-            <field name="implied_ids" eval="[(4, ref('base.group_user')),(4, ref('hr_security.group_payroll_user')),(4, ref('survey.group_survey_user')),(4, ref('request_management.group_request_user'))]"/>
+            <field name="implied_ids" eval="[(4, ref('base.group_user')),(4, ref('hr_admin.group_hr_admin')),(4, ref('survey.group_survey_user')),(4, ref('request_management.group_request_user'))]"/>
             <field name="category_id" ref="base.module_category_human_resources"/>
             <field name="menu_access" eval="[(4,ref('hr_timesheet_sheet.menu_act_hr_timesheet_sheet_form')),(4,ref('hr_timesheet.menu_hr_time_tracking')),(4,ref('hr_payroll.menu_department_tree')),(4,ref('hr_contract.hr_menu_contract')), (4,ref('hr_payroll.menu_hr_payroll_root')), (4,ref('hr.menu_hr_root'))]"/>
         </record>
 
         <record id="group_personnel_officer" model="res.groups">
             <field name="name">Personnel Officer</field>
-            <field name="implied_ids" eval="[(4, ref('base.group_user')),(4, ref('hr_security.group_payroll_user')),(4, ref('survey.group_survey_user')),(4, ref('request_management.group_request_user'))]"/>
+            <field name="implied_ids" eval="[(4, ref('base.group_user')),(4, ref('hr_admin.group_hr_admin')),(4, ref('survey.group_survey_user')),(4, ref('request_management.group_request_user'))]"/>
             <field name="category_id" ref="base.module_category_human_resources"/>
             <field name="menu_access" eval="[(4,ref('hr_timesheet_sheet.menu_act_hr_timesheet_sheet_form')),(4,ref('hr_timesheet.menu_hr_time_tracking')),(4,ref('hr_contract.hr_menu_contract')),(4,ref('hr.menu_hr_root'))]"/>
         </record>
diff --git a/custom/hr_contract_custom/hr_contract.py b/custom/hr_contract_custom/hr_contract.py
index ca4986c..b7d5116 100755
--- a/custom/hr_contract_custom/hr_contract.py
+++ b/custom/hr_contract_custom/hr_contract.py
@@ -32,3 +32,4 @@ class hr_contract(models.Model):
         super(hr_contract, self)._onchange_employee_id()
         if self.employee_id:
             self.f_employee_no = self.employee_id.f_employee_no
+            self.department_id = self.employee_id.department_id
diff --git a/custom/hr_contract_init/__manifest__.py b/custom/hr_contract_init/__manifest__.py
index b5a3f08..1ac170f 100755
--- a/custom/hr_contract_init/__manifest__.py
+++ b/custom/hr_contract_init/__manifest__.py
@@ -24,7 +24,7 @@ Define Initial Settings on New Contracts
         'hr_contract',
         'hr_job_categories',
         'hr_payroll',
-        'hr_security',
+        'hr_admin',
     ],
     'data': [
         'security/ir.model.access.csv',
diff --git a/custom/hr_contract_init/security/ir.model.access.csv b/custom/hr_contract_init/security/ir.model.access.csv
index fef2b60..67d027f 100755
--- a/custom/hr_contract_init/security/ir.model.access.csv
+++ b/custom/hr_contract_init/security/ir.model.access.csv
@@ -1,7 +1,7 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_hr_contract_init_hro,access_hr_contract_initial,model_hr_contract_init,hr.group_hr_user,1,0,0,0
-access_hr_contract_init_hrd,access_hr_contract_initial,model_hr_contract_init,hr_security.group_hr_director,1,1,1,1
-access_hr_contract_init_payroll,access_hr_contract_initial,model_hr_contract_init,hr_security.group_payroll_manager,1,0,0,0
+access_hr_contract_init_hrd,access_hr_contract_initial,model_hr_contract_init,hr_admin.group_hr_admin,1,1,1,1
+access_hr_contract_init_payroll,access_hr_contract_initial,model_hr_contract_init,hr_admin.group_hr_admin,1,0,0,0
 access_hr_contract_init_wage_hro,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr.group_hr_user,1,0,0,0
-access_hr_contract_init_wage_hrd,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr_security.group_hr_director,1,1,1,1
-access_hr_contract_init_wage_payroll,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr_security.group_payroll_manager,1,0,0,0
+access_hr_contract_init_wage_hrd,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr_admin.group_hr_admin,1,1,1,1
+access_hr_contract_init_wage_payroll,access_hr_contract_initial_wage,model_hr_contract_init_wage,hr_admin.group_hr_admin,1,0,0,0
diff --git a/custom/hr_contract_init/views/hr_contract_view.xml b/custom/hr_contract_init/views/hr_contract_view.xml
index c67b709..f627cc4 100755
--- a/custom/hr_contract_init/views/hr_contract_view.xml
+++ b/custom/hr_contract_init/views/hr_contract_view.xml
@@ -23,7 +23,7 @@
                 <header>
                     <button name="state_approve" type="object" states="draft" string="Approve" class="oe_highlight" />
                     <button name="state_decline" type="object" states="draft,approve" string="Decline" class="oe_highlight" />
-                    <button string="Reset to New" name="set_to_draft" states="decline" type="object" groups="hr_security.group_hr_director"/>
+                    <button string="Reset to New" name="set_to_draft" states="decline" type="object" groups="hr_admin.group_hr_admin"/>
                     <field name="state" widget="statusbar" statusbar_visible="draft,approve" readonly=""/>
                 </header>
                 <h1>
diff --git a/custom/hr_contract_state/views/hr_contract_view.xml b/custom/hr_contract_state/views/hr_contract_view.xml
index b872361..0cc6fd9 100755
--- a/custom/hr_contract_state/views/hr_contract_view.xml
+++ b/custom/hr_contract_state/views/hr_contract_view.xml
@@ -43,7 +43,7 @@
             <field name="arch" type="xml">
                 <tree string="Contracts to be Approved">
                     <field name="employee_id" required='1' readonly='1'/>
-                    <!--<field name="department_id" />-->
+                    <field name="department_id" />
                     <field name="job_id"/>
                     <field name="date_start" required='1' readonly='1'/>
                     <field name="trial_date_end"/>
diff --git a/custom/hr_department_sequence/hr_department.py b/custom/hr_department_sequence/hr_department.py
index 2feb20b..d4f02d3 100755
--- a/custom/hr_department_sequence/hr_department.py
+++ b/custom/hr_department_sequence/hr_department.py
@@ -21,7 +21,6 @@ class HrDepartment(models.Model):
                                 ondelete='cascade')
     parent_left = fields.Integer(string='Left Parent', index=True)
     parent_right = fields.Integer(string='Right Parent', index=True)
-    dep_eng_name = fields.Char(string='Arabic Name')
 
     _parent_name = "parent_id"
     _parent_store = True
diff --git a/custom/hr_department_sequence/hr_department_view.xml b/custom/hr_department_sequence/hr_department_view.xml
index 4fb05a7..1dba1d3 100755
--- a/custom/hr_department_sequence/hr_department_view.xml
+++ b/custom/hr_department_sequence/hr_department_view.xml
@@ -7,7 +7,6 @@
         <field name="arch" type="xml">
             <xpath expr="//field[@name='name']" position="after">
                 <field name="code"/>
-                <field name="dep_eng_name" required="1"/>
             </xpath>
             <xpath expr="//field[@name='company_id']" position="after">
                 <field name="sequence"/>
@@ -23,7 +22,6 @@
             <xpath expr="//field[@name='display_name']" position="after">
                 <field name="code"/>
                 <field name="sequence"/>
-                <field name="dep_eng_name"/>
             </xpath>
         </field>
     </record>
diff --git a/custom/hr_employee_approval_tab/__manifest__.py b/custom/hr_employee_approval_tab/__manifest__.py
index 0a45be2..3bcb91d 100755
--- a/custom/hr_employee_approval_tab/__manifest__.py
+++ b/custom/hr_employee_approval_tab/__manifest__.py
@@ -15,6 +15,7 @@ Employee Approval/Delegation Tab
     'author': 'Bista Solutions',
     'depends': [
         'hr',
+        'emp_self_services',
     ],
     'data': [
         'security/hr_security.xml',
diff --git a/custom/hr_employee_approval_tab/views/hr_view.xml b/custom/hr_employee_approval_tab/views/hr_view.xml
index 977e908..5125da1 100755
--- a/custom/hr_employee_approval_tab/views/hr_view.xml
+++ b/custom/hr_employee_approval_tab/views/hr_view.xml
@@ -1,20 +1,21 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <odoo>
-	<data>
-		<record id="employee_approval_delegation_view_form" model="ir.ui.view">
-			<field name="name">Approval/Delegation Tab</field>
-			<field name="model">hr.employee</field>
-			<field name="inherit_id" ref="hr.view_employee_form" />
-			<field name="arch" type="xml">
-				<xpath expr='//page[2]' position="after">
+    <data>
+        <record id="employee_approval_delegation_view_form" model="ir.ui.view">
+            <field name="name">Approval/Delegation Tab</field>
+            <field name="model">hr.employee</field>
+            <field name="inherit_id" ref="hr.view_employee_form" />
+            <field name="arch" type="xml">
+                <xpath expr='//page[3]' position="after">
+                    <!--<page string="Approval/Delegation" name="approval_delegation"-->
+                          <!--groups="hr_employee_approval_tab.view_employees_approvla_tab">-->
                     <page string="Approval/Delegation" name="approval_delegation"
-						  groups="hr_employee_approval_tab.view_employees_approvla_tab">
-                    	<group>
-
-                    	</group>
+                          groups="emp_self_services.group_view_emp_info">
+                        <group>
+                        </group>
                     </page>
                 </xpath>
-			</field>
-		</record>
-	</data>
+            </field>
+        </record>
+    </data>
 </odoo>
diff --git a/custom/hr_employee_customization/__manifest__.py b/custom/hr_employee_customization/__manifest__.py
index 6321a17..70d76e1 100644
--- a/custom/hr_employee_customization/__manifest__.py
+++ b/custom/hr_employee_customization/__manifest__.py
@@ -18,6 +18,7 @@ HR Employee Customization
         'hr',
         'base',
         'hr_contract',
+        'emp_self_services',
     ],
     'data': [
         'security/ir.model.access.csv',
diff --git a/custom/hr_employee_customization/models/hr_employee.py b/custom/hr_employee_customization/models/hr_employee.py
index 759eb25..0110398 100644
--- a/custom/hr_employee_customization/models/hr_employee.py
+++ b/custom/hr_employee_customization/models/hr_employee.py
@@ -65,11 +65,11 @@ class HrEmployee(models.Model):
             if ee.initial_employment_date:
                 dFirstContract = dInitial
                 dInitial = datetime \
-                    .strptime(ee.initial_employment_date, '%Y-%m-%d').date()
+                    .strptime(ee.initial_employment_date, OE_DATEFORMAT).date()
                 delta = relativedelta(dFirstContract, dInitial)
 
             for c in contracts:
-                dStart = datetime.strptime(c.date_start, '%Y-%m-%d').date()
+                dStart = datetime.strptime(c.date_start, OE_DATEFORMAT).date()
                 if dStart >= dToday:
                     continue
 
@@ -79,7 +79,7 @@ class HrEmployee(models.Model):
                 # contract until today.
                 #
                 if c.date_end:
-                    dEnd = datetime.strptime(c.date_end, '%Y-%m-%d').date()
+                    dEnd = datetime.strptime(c.date_end, OE_DATEFORMAT).date()
                 else:
                     dEnd = dToday
                 if dEnd > dToday:
diff --git a/custom/hr_employee_customization/security/ir.model.access.csv b/custom/hr_employee_customization/security/ir.model.access.csv
index 34a0389..6895350 100755
--- a/custom/hr_employee_customization/security/ir.model.access.csv
+++ b/custom/hr_employee_customization/security/ir.model.access.csv
@@ -1,2 +1,3 @@
 "id","name","model_id:id","group_id:id","perm_read","perm_write","perm_create","perm_unlink"
 "access_hr_employee_children_user","hr.employee.children_user","model_hr_employee_children","hr.group_hr_user",1,1,1,1
+access_hr_employee_children_read,access.employee.children.read,model_hr_employee_children,base.group_user,1,0,0,0
diff --git a/custom/hr_employee_customization/views/hr_employee_view.xml b/custom/hr_employee_customization/views/hr_employee_view.xml
index 94469c5..30a0dd2 100644
--- a/custom/hr_employee_customization/views/hr_employee_view.xml
+++ b/custom/hr_employee_customization/views/hr_employee_view.xml
@@ -32,8 +32,8 @@
         <field name="inherit_id" ref="hr.view_employee_form"/>
         <field name="arch" type="xml">
             <field name="mobile_phone" position="after">
-                <field name="internal_number" />
-                <field name="short_number" />
+                <field name="internal_number" invisible="1"/>
+                <field name="short_number" invisible="1"/>
             </field>
             <xpath expr="//group[@name='active_group']" position="after">
                 <group string="Duration of Service">
@@ -42,7 +42,8 @@
                 </group>
             </xpath>
             <xpath expr='//notebook' position="inside">
-                <page string="Dependants" groups="hr.group_hr_manager,hr.group_hr_user">
+                <!--<page string="Dependants" groups="hr.group_hr_manager,hr.group_hr_user">-->
+                <page string="Dependants" groups="emp_self_services.group_view_emp_info">
                     <group colspan="4" col="4">
                         <group string="Spouse" colspan="2" col="2">
                             <field name="fam_spouse"/>
diff --git a/custom/hr_employee_state/__manifest__.py b/custom/hr_employee_state/__manifest__.py
index 1d1d03b..f7fc762 100644
--- a/custom/hr_employee_state/__manifest__.py
+++ b/custom/hr_employee_state/__manifest__.py
@@ -22,6 +22,7 @@ Track the HR status of employees.
         'hr',
         'hr_recruitment',
         'hr_contract_state',
+        'emp_self_services',
     ],
     'init_xml': [
     ],
diff --git a/custom/hr_employee_state/hr.py b/custom/hr_employee_state/hr.py
index e10f946..aa5cf10 100644
--- a/custom/hr_employee_state/hr.py
+++ b/custom/hr_employee_state/hr.py
@@ -39,7 +39,7 @@ class hr_employee(models.Model):
                 'status': 'inactive',
                 'job_id': False,
             }
-            if rec.state == 'pending_inactive':
+            if rec.status == 'pending_inactive':
                 vals.update(
                     {'department_id': rec.saved_department_id.id or False,
                      'saved_department_id': False})
@@ -54,7 +54,7 @@ class hr_employee(models.Model):
     @api.multi
     def signal_active(self):
         for rec in self:
-            if rec.state == 'pending_inactive':
+            if rec.status == 'pending_inactive':
                 rec.write({'status': 'active',
                            'department_id': self.saved_department_id.id or
                            False,
diff --git a/custom/hr_employee_state/hr_view.xml b/custom/hr_employee_state/hr_view.xml
index ca41620..9607110 100644
--- a/custom/hr_employee_state/hr_view.xml
+++ b/custom/hr_employee_state/hr_view.xml
@@ -10,24 +10,25 @@
                     <header>
                         <button name="signal_confirm" type="object" string="Confirm"
                                 attrs="{'invisible': [('status','!=','new')]}"
-                                class="oe_highlight" />
+                                class="oe_highlight" groups="hr.group_hr_manager"/>
                         <button name="signal_active" type="object" string="Finished Onboarding"
                                 attrs="{'invisible': [('status','!=','onboarding')]}"
-                                class="oe_highlight" />
+                                class="oe_highlight" groups="hr.group_hr_manager"/>
                         <button name="action_set_inactive" type="object" string="Set Inactive"
                                 attrs="{'invisible': [('status','not in',['new', 'onboarding','active'])]}"
-                                class="oe_highlight"/>
+                                class="oe_highlight" groups="hr.group_hr_manager"/>
                         <button name="signal_reactivate" type="object" string="Re-Activate"
                                 attrs="{'invisible': [('status','!=','inactive')]}"
-                                class="oe_highlight" />
+                                class="oe_highlight" groups="hr.group_hr_manager"/>
                         <button name="signal_confirm_reactivate" type="object"
                                 string="Confirm" attrs="{'invisible': [('status','!=','reactivated')]}"
-                                class="oe_highlight" />
-                        <field name="status" widget="statusbar" readonly="True"/>
+                                class="oe_highlight" groups="hr.group_hr_manager"/>
+                        <field name="status" widget="statusbar" readonly="True" groups="hr.group_hr_user"/>
                     </header>
                 </sheet>
                 <xpath expr="//page[3]" position="after">
-                    <page string="Deactivation">
+                    <!--<page string="Deactivation" groups="hr.group_hr_user">-->
+                    <page string="Deactivation" groups="emp_self_services.group_view_emp_info">
                         <group>
                             <group string="Deactivation Records" colspan="4" col="4">
                                 <field name="inactive_ids" nolabel="1">
diff --git a/custom/hr_holidays_extension/__manifest__.py b/custom/hr_holidays_extension/__manifest__.py
index 0c12e19..6d76421 100644
--- a/custom/hr_holidays_extension/__manifest__.py
+++ b/custom/hr_holidays_extension/__manifest__.py
@@ -20,11 +20,13 @@
         'hr_saudi_filed',
         'hr_public_holidays',
         'ceo_group',
-        'groups_rules',
+        'hr_admin',
         'hr_employee_id',
     ],
     'data': [
+        'security/user_groups.xml',
         'security/ir.model.access.csv',
+        'security/ir_rule.xml',
         'wizard/refuse_leave_reason_view.xml',
         'views/hr_holidays_view.xml',
     ],
diff --git a/custom/hr_holidays_extension/models/hr_holidays_extend.py b/custom/hr_holidays_extension/models/hr_holidays_extend.py
index 386c80f..c673a9b 100644
--- a/custom/hr_holidays_extension/models/hr_holidays_extend.py
+++ b/custom/hr_holidays_extension/models/hr_holidays_extend.py
@@ -322,25 +322,290 @@ class HrHolidays(models.Model):
     amend = fields.Boolean(string='Amend')
 
     @api.onchange(
-        'future_balance_value',
-        'max_allowed_days_value',
-        'holiday_status_id')
-    def onchange_future_balance_fields(self):
-        if self.holiday_status_id and\
-                self.holiday_status_id.allow_future_balance:
-            if self.future_balance_value or self.max_allowed_days_value:
-                self.future_balance = self.future_balance_value
-                self.max_allowed_days = self.max_allowed_days_value
+        'date_to',
+        'date_from',
+        'employee_id',
+        'holiday_status_id',
+        'half_day')
+    def onchange_date(self):
+        """
+        If there are no date set for date_to,
+         automatically set one 8 hours later than
+        the date_from.
+        Also update the number_of_days.
+        """
+        result = {'domain': {}}
 
-    @api.multi
-    def onchange_data(self):
-        dt_to, dt = False, False
-        holiday_obj = self.env['hr.holidays.public']
-        future_balance_value = 0.0
+        contract_obj = self.env['hr.contract']
+        ee_obj = self.env['hr.employee']
+        employee = self.employee_id
+        flag_saudi = False
+        nationality_id = employee.country_id.id
+        if (employee.country_id.name == 'Saudi Arabia'):
+            flag_saudi = True
+        else:
+            flag_saudi = False
+        if employee and employee.parent_id:
+            emp_same_manager_ids = ee_obj.\
+                search([('parent_id', '=', employee.parent_id.id),
+                        ('id', '!=', employee.id)]).ids
+        else:
+            emp_same_manager_ids = []
+            # START
+
+        currnet_emp = employee
+
+        holidays_status_obj = self.env['hr.holidays.status']
+        holidays_status_id = []
+        holidays_status_id_both_male_female = []
+        holidays_status_id_both_religin = []
+        holidays_else_id = holidays_status_obj.search(
+            [('is_gender', '=', False), ('is_religion', '=', False)])
+
+        if currnet_emp.religion == 'other':
+            holidays_status_id_both_male_female = holidays_status_obj.\
+                search([('religion', '=', 'o'),
+                        ('is_gender', '=', False)])
+        if currnet_emp.religion == 'muslim':
+            holidays_status_id_both_male_female = holidays_status_obj.\
+                search([('religion', '=', 'm'),
+                        ('is_gender', '=', False)])
+        if currnet_emp.gender == 'male':
+            holidays_status_id_both_religin = holidays_status_obj.\
+                search([('is_religion', '=', False),
+                        ('is_gender', '=', True),
+                        ('gender', '=', 'm')])
+        if currnet_emp.gender == 'female':
+            holidays_status_id_both_religin = holidays_status_obj.\
+                search([('is_religion', '=', False),
+                        ('is_gender', '=', True),
+                        ('gender', '=', 'f')])
+
+        if currnet_emp.gender == 'male':
+            if currnet_emp.religion == 'muslim':
+                holidays_status_id = holidays_status_obj.\
+                    search([('is_religion', '=', True),
+                            ('is_gender', '=', True),
+                            ('gender', '=', 'm'),
+                            ('religion', '=', 'm')])
+            if currnet_emp.religion == 'other':
+                holidays_status_id = holidays_status_obj.\
+                    search([('is_religion', '=', True),
+                            ('is_gender', '=', True),
+                            ('gender', '=', 'm'),
+                            ('religion', '=', 'o')])
+
+        elif currnet_emp.gender == 'female':
+            if currnet_emp.religion == 'muslim':
+                holidays_status_id = holidays_status_obj.\
+                    search([('is_religion', '=', True),
+                            ('is_gender', '=', True),
+                            ('gender', '=', 'f'),
+                            ('religion', '=', 'm')])
+            if currnet_emp.religion == 'other':
+                holidays_status_id = holidays_status_obj.\
+                    search([('is_religion', '=', True),
+                            ('is_gender', '=', True),
+                            ('gender', '=', 'f'),
+                            ('religion', '=', 'o')])
+        all_dic = []
+        if holidays_status_id:
+            all_dic +=\
+                holidays_status_id and\
+                holidays_status_id.ids or []
+        elif holidays_else_id:
+            all_dic +=\
+                holidays_else_id and\
+                holidays_else_id.ids or []
+        elif holidays_status_id_both_religin:
+            all_dic +=\
+                holidays_status_id_both_religin and\
+                holidays_status_id_both_religin.ids or []
+        elif holidays_status_id_both_male_female:
+            all_dic +=\
+                holidays_status_id_both_male_female and\
+                holidays_status_id_both_male_female.ids or []
+        if self.holiday_status_id:
+            if self.holiday_status_id.id not in all_dic:
+                self.holiday_status_id = []
+                # result['value'].update({'holiday_status_id': []})
+
+        cont_ids = contract_obj.\
+            search([('employee_id', '=', employee.id),
+                    ('state', '!=', 'done'),
+                    ('state', '!=', 'draft')])
+        cont_id = 0
+
+        if len(cont_ids) >= 1:
+            cont_id = contract_obj.\
+                search([('employee_id', '=', employee.id),
+                        ('state', '!=', 'done'),
+                        ('state', '!=', 'draft')], limit=1)
+
+        result['domain'].\
+            update({'holiday_status_id': [('id', 'in', all_dic)],
+                    'alternative_emp_id':
+                        [('id', 'in', emp_same_manager_ids)]})
+
+        # result['value'].update({
+        #     'department_id': employee.department_id.id,
+        #     'emp_contract_id': cont_id,
+        #     'nationality_id': nationality_id,
+        #     'alternative_emp_id': '',
+        #     'remaining_leaves_value': 0,
+        #     'max_leaves_value': 0,
+        #     'emp_id': employee.f_employee_no
+        # })
+        date_to = self.date_to
+
+        if self.half_day and self.date_from:
+            date_to = self.date_from
+
+        if self.date_from and not date_to or self.date_from > date_to:
+            date_to = self.date_from
+            # result['value'].update({
+            #     'date_to': date_from,
+            # })
+            date_to = self.date_from
+
+        if not self.date_from or not date_to:
+            self.department_id = employee.department_id.id
+            self.emp_contract_id = cont_id
+            self.nationality_id = nationality_id
+            self.alternative_emp_id = ''
+            self.remaining_leaves_value = 0
+            self.max_leaves_value = 0
+            self.emp_id = employee.f_employee_no
+            self.date_to = date_to
+            return result
+
+        if (self.date_from and date_to) and (self.date_from > date_to):
+            raise Warning(
+                _('The start date must be anterior to the end date.'))
+
+            # No date_to set so far: automatically compute one 8 hours later
         if self.date_from:
-            dt = datetime.strptime(self.date_from, OE_DTFORMAT)
-        if self.date_to:
-            dt_to = datetime.strptime(self.date_to, OE_DTFORMAT)
+            date_from = self.date_from
+        if date_to and not self.date_from:
+            date_from_with_delta =\
+                datetime.datetime.strptime(
+                    self.date_from,
+                    tools.DEFAULT_SERVER_DATETIME_FORMAT)\
+                - datetime.timedelta(hours=8)
+            date_from = str(date_from_with_delta)
+        dt, dt_to = False, False
+        if self.date_from:
+            dt = datetime.strptime(date_from, OE_DTFORMAT)
+        if date_to:
+            dt_to = datetime.strptime(date_to, OE_DTFORMAT)
+
+        """
+        Update the dates based on the number of days requested.
+        """
+
+        holiday_obj = self.env['hr.holidays.public']
+        sched_tpl_obj = self.env['hr.schedule.template']
+        # sched_detail_obj = self.env['hr.schedule.detail']
+
+        # user = self.env.user
+        # if user and user.tz:
+        #     local_tz = timezone(user.tz)
+        # else:
+        #     local_tz = timezone('Asia/Riyadh')
+
+        if not employee:
+            return result
+
+        # if holiday_status_id:
+        #  hs_data = self.env['hr.holidays.status']
+        # .read(cr, uid, holiday_status_id,
+        #  ['ex_rest_days', 'ex_public_holidays', 'min_days'],
+        #  context=context)
+        # else:
+        #     hs_data = {}
+        ex_rd = self.holiday_status_id.ex_rest_days
+        ex_ph = self.holiday_status_id.ex_public_holidays
+        enable_min_day = self.holiday_status_id.enable_min_day
+        min_days = self.holiday_status_id.min_days
+
+        # Get rest day and the schedule start time on the date the leave begins
+        #
+        rest_days = []
+        # times = tuple()
+
+        if employee.contract_id and employee.contract_id.schedule_template_id:
+            rest_days = sched_tpl_obj.get_rest_days(
+                employee.contract_id.schedule_template_id.id)
+            # times = sched_detail_obj.scheduled_begin_end_times(
+            #     employee.id, employee.contract_id.id, dt)
+        from_weekday = False
+        # if len(times) > 0:
+        #     utcdtStart = times[0][0]
+        # else:
+        #     # If we can't find a schedule, just leave it as the user entered
+        #     # it.
+        if dt:
+            # dtStart = local_tz.localize(dt, is_dst=False)
+            # utcdtStart = dtStart.astimezone(utc)
+            from_weekday = dt.weekday()
+
+        '''
+            0 Monday
+            1 Tuesday
+            2 Wednesday
+            3 Thursday
+            4 Friday
+            ->5 Saturday
+            ->6 Sunday
+        '''
+
+        # Get warning that you can't start from rest day
+        if from_weekday and from_weekday == 4:
+            raise Warning(
+                _('You can not start you'
+                  ' leave from a rest day,'
+                  ' please choose another day.'))
+        if from_weekday and from_weekday == 5 and len(rest_days) == 2:
+            raise Warning(
+                _('You can not start you'
+                  ' leave from a rest day,'
+                  ' please choose another day.'))
+
+        if dt and (holiday_obj.is_public_holiday(dt.date())) and ex_ph:
+            raise Warning(
+                _('You can not start you'
+                  ' leave from a public holiday,'
+                  ' please choose another day.'))
+
+            # If Date from start from the weekend make start from the first
+            # working day.
+        '''
+        if from_weekday == 4 and len(rest_days) == 2:
+            dt += timedelta(days=+2)
+            from_weekday = 6
+        if from_weekday == 4 and len(rest_days) == 1:
+            dt += timedelta(days=+1)
+            from_weekday = 5
+        if from_weekday == 5 and len(rest_days) == 2:
+            dt += timedelta(days=+1)
+            from_weekday = 6
+        '''
+
+        # If next date of date is a rest day or public holiday set as date to
+        '''
+        next_dt_to = dt_to + timedelta(days=+1)
+        while (next_dt_to.weekday() in rest_days)
+         or (holiday_obj.is_public_holiday(cr, uid,
+          next_dt_to.date(), context=context)):
+            if holiday_obj.is_public_holiday(cr,
+             uid, next_dt_to.date(), context=context):
+               dt_to = next_dt_to
+               next_dt_to += timedelta(days=+1)
+            elif next_dt_to.weekday() in rest_days:
+               dt_to = next_dt_to
+               next_dt_to += timedelta(days=+1)
+        '''
+
         # Compute and update the number of days
         if (dt_to and dt) and (dt <= dt_to):
             td = dt_to - dt
@@ -354,51 +619,8 @@ class HrHolidays(models.Model):
         ph_days = 0
         r_days = 0
         working_days = 0
-        rest_days = []
         next_dt = dt
-        enable_min_day, ex_rd, ex_ph, min_days = False, False, False, False
-        if self.holiday_status_id:
-            ex_rd = self.holiday_status_id.ex_rest_days
-            ex_ph = self.holiday_status_id.ex_public_holidays
-            enable_min_day = self.holiday_status_id.enable_min_day
-            min_days = self.holiday_status_id.min_days
-            if self.holiday_status_id.allow_future_balance:
-                self.future_balance_value = self.\
-                    _calculate_emp_future_accrued_days(self.employee_id, dt)
-            if self.remaining_leaves_value:
-                self.max_allowed_days_value =\
-                    future_balance_value + self.remaining_leaves_value
-                self.curr_remaining_leaves_value =\
-                    self.future_balance_value +\
-                    self.remaining_leaves_value - self.real_days
-
-        if self.employee_id and\
-                self.employee_id.contract_id and\
-                self.employee_id.contract_id.schedule_template_id:
-            rest_days =\
-                self.employee_id.contract_id.schedule_template_id\
-                    .get_rest_days()
-        if dt:
-            from_weekday = dt.weekday()
-            # Get warning that you can't start from rest day
-            if from_weekday == 4:
-                raise Warning(_('You can not'
-                                ' start you leave'
-                                ' from a rest day,'
-                                ' please choose'
-                                ' another day.'))
-            if from_weekday == 5 and len(rest_days) == 2:
-                raise Warning(
-                    _('You can not'
-                      ' start you leave'
-                      ' from a rest day,'
-                      ' please choose another day.'))
-            if (holiday_obj.is_public_holiday(dt.date())) and ex_ph:
-                raise Warning(
-                    _('You can not'
-                      ' start you leave'
-                      ' from a public holiday,'
-                      ' please choose another day.'))
+
         if not self.half_day:
             while count_days > 0:
                 public_holiday = holiday_obj.is_public_holiday(next_dt.date())
@@ -413,6 +635,23 @@ class HrHolidays(models.Model):
                     real_days += 1
                 next_dt += timedelta(days=+1)
                 count_days -= 1
+                # # public_holiday = (public_holiday and ex_ph)
+                # rest_day = (next_dt.weekday() in rest_days and ex_rd)
+                # if (next_dt.weekday() in rest_days) and not public_holiday:
+                #     r_days += 1
+                #     if not ex_rd:
+                #         real_days += 1
+                # if public_holiday:
+                #     ph_days += 1
+                #     if not ex_ph:
+                #         real_days += 1
+                # if not(next_dt.weekday()
+                #  in rest_days) and not public_holiday:
+                #     real_days += 1
+                #     working_days += 1
+                # next_dt += timedelta(days=+1)
+
+                # count_days -= 1
         else:
             public_holiday = holiday_obj.is_public_holiday(next_dt.date())
             if not (next_dt.weekday() in rest_days) and not public_holiday:
@@ -420,13 +659,15 @@ class HrHolidays(models.Model):
                 working_days = 0.5
 
         real_days_so_far = real_days
+
         return_date = False
+
         if dt_to:
             return_date = dt_to + timedelta(days=+1)
-
             while (return_date.weekday() in rest_days) or (
                     holiday_obj.is_public_holiday(return_date)):
                 return_date = return_date + timedelta(days=+1)
+            return_date = return_date.strftime('%B %d, %Y')
 
         f = 0
 
@@ -448,7 +689,7 @@ class HrHolidays(models.Model):
                             'tdate': tdate_v,
                             'date_type': 'e',
                             'status': 'n',
-                            'employee_id': self.employee_id.id}
+                            'employee_id': employee.id}
                         include_exclude_date.append(exclude_date_data)
 
             return_date_weekday = return_date.weekday()
@@ -464,272 +705,126 @@ class HrHolidays(models.Model):
                             'tdate': itdate_v,
                             'date_type': 'i',
                             'status': 'n',
-                            'employee_id': self.employee_id.id}
+                            'employee_id': employee.id}
                         include_exclude_date.append(include_date_data)
 
         total_days = working_days + ph_days + r_days
 
         # Return Remaining Leaves
-        max_leaves = 0
-        leaves_taken = 0
-        remaining_leaves = 0
-        curr_remaining_leaves = 0
-
-        if self.holiday_status_id and self.employee_id:
-            leaves_bal = self.holiday_status_id.get_days(self.employee_id.id)
-            max_leaves = leaves_bal.get('max_leaves')
-            leaves_taken = leaves_bal.get('leaves_taken')
-            remaining_leaves = leaves_bal.get('remaining_leaves')
-            if remaining_leaves and real_days:
-                curr_remaining_leaves = remaining_leaves - real_days
 
-        return {
-            'real_days': real_days,
-            'max_leaves': max_leaves,
-            'leaves_taken': leaves_taken,
-            'remaining_leaves': remaining_leaves,
-            'curr_remaining_leaves': curr_remaining_leaves,
-            'rest_days': rest_days,
-            'total_days': total_days,
-            'working_days': working_days,
-            'public_holiday_days': ph_days,
-            'return_date': return_date,
-            'include_exclude_date': include_exclude_date}
-
-    @api.onchange('holiday_status_id')
-    def onchange_holiday_status(self):
+        if self.holiday_status_id and employee:
+            # holi_status_obj = self.env['hr.holidays.status']
+            leaves_bal = self.holiday_status_id.get_days(
+                employee.id)[self.holiday_status_id.id]
+            max_leaves = leaves_bal['max_leaves']
+            leaves_taken = leaves_bal['leaves_taken']
+            remaining_leaves = leaves_bal['remaining_leaves']
+            curr_remaining_leaves = remaining_leaves - real_days
+        else:
+            max_leaves = 0
+            leaves_taken = 0
+            remaining_leaves = 0
+            curr_remaining_leaves = 0
         flag = False
         flag_emp = False
         if self.holiday_status_id:
-            flag = self.holiday_status_id.attachment_mandatory
-            allow_trial_period = self.holiday_status_id.allow_trial_period
-            flag_emp = self.holiday_status_id.alternative_emp_mandatory
-            if self.employee_id and \
-                    self.employee_id.contract_id and \
-                    self.employee_id.contract_id.trial_date_end:
+            this_holiday_status_id = self.holiday_status_id
+            flag = this_holiday_status_id.attachment_mandatory
+            allow_trial_period = this_holiday_status_id.allow_trial_period
+            if employee.contract_id.trial_date_end:
                 date_format = tools.DEFAULT_SERVER_DATE_FORMAT
                 date_traial = datetime.strptime(
-                    self.employee_id.contract_id.trial_date_end, date_format)
+                    employee.contract_id.trial_date_end, date_format)
                 today = datetime.today()
                 if date_traial >= today and not allow_trial_period:
                     raise Warning(
-                        _('You cannot apply'
-                          ' for this leave type'
-                          ' while you are in the'
-                          ' trial period.\n Please'
-                          ' contact the HR department.'))
+                        _('You cannot apply for this'
+                          ' leave type while you are'
+                          ' in the trial period.\n'
+                          ' Please contact the HR department.'))
+
+            flag_emp = this_holiday_status_id.alternative_emp_mandatory
+        if employee and employee.department_id:
+            emp_same_manager_ids = ee_obj.search(
+                [('department_id', '=', employee.department_id.id),
+                 ('id', '!=', employee.id)]).ids
+        else:
+            emp_same_manager_ids = []
+
+        # Un-used code
+        cont_ids = contract_obj.\
+            search([('employee_id', '=', employee.id),
+                    ('state', '!=', 'done'),
+                    ('state', '!=', 'draft')])
+        cont_id = 0
+
+        if len(cont_ids) >= 1:
+            cont_id =\
+                contract_obj.search([('employee_id', '=', employee.id),
+                                     ('state', '!=', 'done'),
+                                     ('state', '!=', 'draft')], limit=1)
+
+        if self.date_from:
+            allow_future_balance = self.holiday_status_id.allow_future_balance
+            future_balance_value = 0.0
+            if allow_future_balance:
+                self.future_balance_value =\
+                    self._calculate_emp_future_accrued_days(employee.id,
+                                                            self.date_from)
+                future_balance_value = self.future_balance_value
+            self.max_allowed_days_value =\
+                future_balance_value + self.remaining_leaves_value
+            self.curr_remaining_leaves = future_balance_value + \
+                self.remaining_leaves_value - self.real_days
+            self.curr_remaining_leaves_value = future_balance_value + \
+                self.remaining_leaves_value - self.real_days
+
+        self.department_id = employee.department_id.id,
+        self.working_days_value = working_days
+        self.rest_days_value = r_days
+        self.public_holiday_days_value = ph_days
+        self.real_days_value = real_days
+        self.total_days_value = total_days
+        self.working_days = working_days
+        self.rest_days = r_days
+        self.public_holiday_days = ph_days
+        self.real_days = real_days
+        self.total_days = total_days
+        self.number_of_days_temp = real_days
+        self.return_date = return_date
+        self.return_date_value = return_date
+        self.max_leaves = max_leaves
+        self.max_leaves_value = max_leaves
+        self.remaining_leaves = remaining_leaves
+        self.remaining_leaves_value = remaining_leaves
+        self.curr_remaining_leaves = curr_remaining_leaves
+        self.curr_remaining_leaves_value = curr_remaining_leaves
+        self.leaves_taken = leaves_taken
+        self.leaves_taken_value = leaves_taken
+        self.include_exclude_lines = include_exclude_date
         self.flag_attachment = flag
+        self.emp_contract_id = cont_id
         self.flag_emp_mandatory = flag_emp
-        data = self.onchange_data()
-        if data.get('max_leaves'):
-            self.max_leaves_value = data.get('max_leaves')
-        if data.get('leaves_taken'):
-            self.leaves_taken_value = data.get('leaves_taken')
-        if data.get('remaining_leaves'):
-            self.remaining_leaves_value = data.get('remaining_leaves')
-        if data.get('curr_remaining_leaves'):
-            self.curr_remaining_leaves_value = data.get(
-                'curr_remaining_leaves')
-        if data.get('rest_days'):
-            rest_day = data.get('rest_days')
-            if isinstance(rest_day, list):
-                rest_day = rest_day[0]
-            self.rest_days_value = rest_day
-        if data.get('real_days'):
-            self.real_days_value = data.get('real_days')
-        if data.get('total_days'):
-            self.total_days_value = data.get('total_days')
-        if data.get('working_days'):
-            self.working_days_value = data.get('working_days')
-        if data.get('return_date'):
-            self.return_date_value = data.get('return_date')
-
-    @api.onchange('date_from')
-    def _onchange_date_from(self):
-        """ If there are no
-         date set for date_to,
-          automatically set one 8 hours later than
-           the date_from. Also update the number_of_days.
-        """
-        if self.date_from:
-            dt = datetime.strptime(self.date_from, OE_DTFORMAT)
-            if dt.weekday() == 4:
-                raise Warning(
-                    _('You can not start you'
-                      ' leave from a rest day,'
-                      ' please choose another day.'))
-            if self.employee_id \
-                    and self.employee_id.contract_id \
-                    and self.employee_id.contract_id.schedule_template_id:
-                rest_days = self.employee_id. \
-                    contract_id.schedule_template_id. \
-                    get_rest_days()
-                if dt.weekday() == 5 and len(rest_days) == 2:
-                    raise Warning(
-                        _('You can not start you'
-                          ' leave from a rest day,'
-                          ' please choose another day.'))
-        data = self.onchange_data()
-        if data.get('max_leaves'):
-            self.max_leaves_value = data.get('max_leaves')
-        if data.get('leaves_taken'):
-            self.leaves_taken_value = data.get('leaves_taken')
-        if data.get('remaining_leaves'):
-            self.remaining_leaves_value = data.get('remaining_leaves')
-        if data.get('curr_remaining_leaves'):
-            self.curr_remaining_leaves_value = data.get(
-                'curr_remaining_leaves')
-        if data.get('rest_days'):
-            rest_day = data.get('rest_days')
-            if isinstance(rest_day, list):
-                rest_day = rest_day[0]
-            self.rest_days_value = rest_day
-        if data.get('real_days'):
-            self.real_days_value = data.get('real_days')
-        if data.get('total_days'):
-            self.total_days_value = data.get('total_days')
-        if data.get('working_days'):
-            self.working_days_value = data.get('working_days')
-        if data.get('return_date'):
-            self.return_date_value = data.get('return_date')
-
-    @api.onchange('date_to')
-    def _onchange_date_to(self):
-        """ Update the number_of_days. """
-        super(HrHolidays, self)._onchange_date_to()
-        if (self.date_from and self.date_to) and (
-                self.date_from > self.date_to):
-            raise Warning(
-                _('The start date must be anterior to the end date.'))
-        data = self.onchange_data()
-        if data.get('max_leaves'):
-            self.max_leaves_value = data.get('max_leaves')
-        if data.get('leaves_taken'):
-            self.leaves_taken_value = data.get('leaves_taken')
-        if data.get('remaining_leaves'):
-            self.remaining_leaves_value = data.get('remaining_leaves')
-        if data.get('curr_remaining_leaves'):
-            self.curr_remaining_leaves_value = data.get(
-                'curr_remaining_leaves')
-        if data.get('rest_days'):
-            rest_day = data.get('rest_days')
-            if isinstance(rest_day, list):
-                rest_day = rest_day[0]
-            self.rest_days_value = rest_day
-        if data.get('real_days'):
-            self.real_days_value = data.get('real_days')
-        if data.get('total_days'):
-            self.total_days_value = data.get('total_days')
-        if data.get('working_days'):
-            self.working_days_value = data.get('working_days')
-        if data.get('return_date'):
-            self.return_date_value = data.get('return_date')
-
-    @api.onchange('employee_id')
-    def _onchange_employee(self):
-        super(HrHolidays, self)._onchange_employee()
-        flag_saudi = False
-        ee_obj = self.env['hr.employee']
-        holidays_status_obj = self.env['hr.holidays.status']
-        employee_id = False
-        if self.employee_id:
-            employee_id = self.employee_id
-        if employee_id and self.employee_id.country_id.code == 'SA':
-            flag_saudi = True
-        if employee_id and employee_id.country_id:
-            self.nationality_id = employee_id.country_id.id
+        self.nationality_id = nationality_id
         self.flag_saudi = flag_saudi
-        emp_same_manager_ids, result = [], {}
-        holidays_status_id = []
-        holidays_status_male_female = []
-        holidays_status_id_both_religin = []
-        if employee_id and employee_id.parent_id:
-            emp_same_manager_ids = ee_obj. \
-                search([('parent_id', '=', employee_id.parent_id.id),
-                        ('id', '!=', employee_id.id)])
-        holidays_else_id = holidays_status_obj.search(
-            [('is_gender', '=', False), ('is_religion', '=', False)])
-        if employee_id and employee_id.religion == 'other':
-            holidays_status_male_female = holidays_status_obj. \
-                search([('religion', '=', 'o'), ('is_gender', '=', False)])
-        if employee_id and employee_id.religion == 'muslim':
-            holidays_status_male_female = holidays_status_obj. \
-                search([('religion', '=', 'm'), ('is_gender', '=', False)])
-        if employee_id and employee_id.gender == 'male':
-            holidays_status_id_both_religin = holidays_status_obj. \
-                search([('is_religion', '=', False),
-                        ('is_gender', '=', True),
-                        ('gender', '=', 'm')])
-        if employee_id and employee_id.gender == 'female':
-            holidays_status_id_both_religin = holidays_status_obj. \
-                search([('is_religion', '=', False),
-                        ('is_gender', '=', True),
-                        ('gender', '=', 'f')])
+        self.alternative_emp_id = ''
+        self.emp_id = employee.f_employee_no
 
-        if employee_id and employee_id.gender == 'male':
-            if employee_id.religion == 'muslim':
-                holidays_status_id = holidays_status_obj. \
-                    search([('is_religion', '=', True),
-                            ('is_gender', '=', True),
-                            ('gender', '=', 'm'),
-                            ('religion', '=', 'm')])
-            if employee_id and employee_id.religion == 'other':
-                holidays_status_id = holidays_status_obj. \
-                    search([('is_religion', '=', True),
-                            ('is_gender', '=', True),
-                            ('gender', '=', 'm'),
-                            ('religion', '=', 'o')])
+        result['domain'].update(
+            {'alternative_emp_id': [('id', 'in', emp_same_manager_ids)]})
 
-        elif employee_id and employee_id.gender == 'female':
-            if employee_id.religion == 'muslim':
-                holidays_status_id = holidays_status_obj. \
-                    search([('is_religion', '=', True),
-                            ('is_gender', '=', True),
-                            ('gender', '=', 'f'),
-                            ('religion', '=', 'm')])
-            if employee_id and employee_id.religion == 'other':
-                holidays_status_id = holidays_status_obj. \
-                    search([('is_religion', '=', True),
-                            ('is_gender', '=', True),
-                            ('gender', '=', 'f'),
-                            ('religion', '=', 'o')])
-        if holidays_status_id and \
-                holidays_else_id and \
-                holidays_status_id_both_religin and \
-                holidays_status_male_female:
-            all_dic = holidays_status_id + holidays_else_id + \
-                holidays_status_id_both_religin + holidays_status_male_female
-            if self.holiday_status_id not in all_dic:
-                self.public_holiday_days = []
-            result.update(
-                {
-                    'domain': {
-                        'holiday_status_id': [
-                            ('id', 'in', all_dic)], 'alternative_emp_id': [
-                            ('id', 'in', emp_same_manager_ids)]}})
-        data = self.onchange_data()
-        if data.get('max_leaves'):
-            self.max_leaves_value = data.get('max_leaves')
-        if data.get('leaves_taken'):
-            self.leaves_taken_value = data.get('leaves_taken')
-        if data.get('remaining_leaves'):
-            self.remaining_leaves_value = data.get('remaining_leaves')
-        if data.get('curr_remaining_leaves'):
-            self.curr_remaining_leaves_value = data.get(
-                'curr_remaining_leaves')
-        if data.get('rest_days'):
-            rest_day = data.get('rest_days')
-            if isinstance(rest_day, list):
-                rest_day = rest_day[0]
-            self.rest_days_value = rest_day
-        if data.get('real_days'):
-            self.number_of_days_temp = data.get('real_days')
-        if data.get('total_days'):
-            self.total_days_value = data.get('total_days')
-        if data.get('working_days'):
-            self.working_days_value = data.get('working_days')
-        if data.get('return_date'):
-            self.return_date_value = data.get('return_date')
+        return result
+
+    # @api.onchange(
+    #     'future_balance_value',
+    #     'max_allowed_days_value',
+    #     'holiday_status_id')
+    # def onchange_future_balance_fields(self):
+    #     if self.holiday_status_id and\
+    #             self.holiday_status_id.allow_future_balance:
+    #         if self.future_balance_value or self.max_allowed_days_value:
+    #             self.future_balance = self.future_balance_value
+    #             self.max_allowed_days = self.max_allowed_days_value
 
     @api.model
     def create(self, vals):
@@ -926,23 +1021,30 @@ class HrHolidays(models.Model):
                 this.action_validate()
 
     @api.multi
+    def add_methods(self):
+        for this in self:
+            this.action_confirm()
+            this._check_validate()
+            this.action_approve()
+            # this.action_validate()
+            this.update_include_exlucded_status()
+            this.set_repeated_message()
+
+    @api.multi
     def holidays_to_manager(self):
         today = datetime.today()
         ir_obj = self.env['ir.attachment']
         for this in self:
             if this.type == 'add':
-                # this.action_approve()
-                this.update_include_exlucded_status()
-                this.set_repeated_message()
-
+                return this.add_methods()
             contract_dic = this.emp_contract_id
             exception_bool = this.ex_leave
             if exception_bool:
                 if not this.holiday_status_id.hr_appr:
                     return this.action_confirm()
                 if this.holiday_status_id.hr_appr:
-                    return this.action_validate()
-
+                    # return this.action_validate()
+                    return this.action_approve()
             date_format = tools.DEFAULT_SERVER_DATE_FORMAT
 
             if ((this.real_days > 0) and
diff --git a/custom/hr_holidays_extension/security/ir.model.access.csv b/custom/hr_holidays_extension/security/ir.model.access.csv
index 510ad8d..50a96da 100644
--- a/custom/hr_holidays_extension/security/ir.model.access.csv
+++ b/custom/hr_holidays_extension/security/ir.model.access.csv
@@ -1,3 +1,3 @@
 "id","name","model_id:id","group_id:id","perm_read","perm_write","perm_create","perm_unlink"
 access_hr_holidays_days_include,access_hr_holidays_days_include,model_hr_holidays_days_include,,1,0,0,0
-refuseleave_reason_name_id,refuseleave.reason.name,hr_holidays_extension.model_refuseleave_reason,groups_rules.group_vp,1,1,1,1
+refuseleave_reason_name_id,refuseleave.reason.name,hr_holidays_extension.model_refuseleave_reason,hr_admin.group_hr_admin,1,1,1,1
diff --git a/custom/hr_holidays_extension/views/hr_holidays_view.xml b/custom/hr_holidays_extension/views/hr_holidays_view.xml
index 77169c2..6b7d6b3 100644
--- a/custom/hr_holidays_extension/views/hr_holidays_view.xml
+++ b/custom/hr_holidays_extension/views/hr_holidays_view.xml
@@ -2,11 +2,6 @@
 <odoo>
     <data>
 
-        <record id="senior_hr_approval_group" model="res.groups">
-            <field name="name">Senior HR</field>
-        </record>
-
-
         <record id="hr_holidays_inherit_for_add_reason" model="ir.ui.view">
             <field name="name">hr.holidays.inherit.for.add.reason</field>
             <field name="model">hr.holidays</field>
@@ -15,7 +10,7 @@
                 <button name="action_refuse" position="replace">
                     <button string="Refuse" name="action_refuse_wizard"
                             states="confirm,validate,validate1" type="object"
-                            groups="hr_holidays.group_hr_holidays_user"/>
+                            groups="hr_holidays_extension.group_leave_hr_approval"/>
                 </button>
                 <field name="report_note" position="after">
                     <group string="Reason Note">
@@ -24,12 +19,12 @@
                                [('refuse_reason', '=', 'False')]}"/>
                     </group>
                 </field>
-                <field name="date_from" position="attributes">
-                    <attribute name="widget">date</attribute>
-                </field>
-                <field name="date_to" position="attributes">
-                    <attribute name="widget">date</attribute>
-                </field>
+                <!--<field name="date_from" position="attributes">-->
+                    <!--<attribute name="widget">date</attribute>-->
+                <!--</field>-->
+                <!--<field name="date_to" position="attributes">-->
+                    <!--<attribute name="widget">date</attribute>-->
+                <!--</field>-->
                 <xpath expr="//form" position="replace">
                     <form string="Leave Request">
                         <field name="can_reset" invisible="1"/>
@@ -38,7 +33,7 @@
                             <button string="CEO Approval" name="ceo_validate"
                                     states="ceo"
                                     class="oe_highlight"
-                                    groups="ceo_group.group_ceo"
+                                    groups="hr_holidays_extension.group_leave_ceo_approval"
                                     type="object"/>
                             <button string="Submit for approval"
                                     name="holidays_to_manager"
@@ -52,23 +47,24 @@
                                     name="to_validate2"
                                     states="validate1"
                                     class="oe_highlight" type="object"
-                                    groups="groups_rules.group_hr_planning_head"/>
+                                    groups="hr_holidays_extension.group_leave_hr_approval"/>
                             <button string="Manager Approval"
                                     name="confirm_mgt" states="confirm"
                                     type="object" groups=
-                                            "hr_holidays_extension.group_hr_leave,groups_rules.group_employee_manager"
-                                    class="oe_highlight"/>
+                                            "hr_holidays_extension.group_leave_bu_manager_approval" class="oe_highlight"/>
+
+                            <!-- Refuse -->
                             <button string="Refuse" name="action_refuse_wizard"
-                                    states="validate1, validate" type="object"
-                                    groups="hr.group_hr_user"/>
+                                    states="validate1,validate" type="object"
+                                    groups="hr_holidays_extension.group_leave_hr_approval"/>
                             <button string="Refuse" name="action_refuse_wizard"
                                     states="confirm" type="object"
-                                    groups="hr_holidays_extension.group_hr_leave,groups_rules.group_employee_manager"/>
+                                    groups="hr_holidays_extension.group_leave_bu_manager_approval"/>
                             <button string="Refuse" name="action_refuse_wizard"
                                     states="ceo" type="object"
-                                    groups="ceo_group.group_ceo"/>
-                            <button name="button_amend" string="Amend" type="object" states="validate" />
-                            <button name="button_cancel" string="Cancel" type="object" states="validate" />
+                                    groups="hr_holidays_extension.group_leave_ceo_approval"/>
+                            <button name="button_amend" string="Amend" groups="base.group_user" type="object" attrs="{'invisible': ['|', ('type', '=', 'add'), ('state', 'not in', ('validate'))]}"/>
+                            <button name="button_cancel" string="Cancel" groups="hr_holidays_extension.group_leave_hr_approval" type="object" attrs="{'invisible': ['|', ('type', '=', 'add'), ('state', 'not in', ('validate'))]}"/>
                             <field name="state" widget="statusbar"
                                    statusbar_visible="draft,confirm,validate1,validate"
                                    statusbar_colors='{"confirm":"blue","validate1":"blue","refuse":"red"}'/>
@@ -84,10 +80,11 @@
                             </div>
                             <group>
                                 <group>
-                                    <field name="name"
-                                           attrs="{'readonly':[('state','!=','draft'),('state','!=','confirm')]}"/>
                                     <field name="flag_saudi" invisible="1"/>
-                                    <field name="amend"/>
+                                    <field name="amend" invisible="1"/>
+                                    <field name="employee_id"
+                                           attrs="{'required':[('holiday_type','=','employee')],'readonly':[('state','!=','draft')], 'invisible':[('holiday_type','=','category')]} "
+                                           groups="hr_holidays_extension.group_leave_bu_manager_approval,hr_holidays_extension.group_leave_hr_approval" options="{'no_create': True,'no_quick_create': True,'no_create_edit': True, 'limit':1000}"/>
                                     <field name="holiday_status_id"
                                            context="{'employee_id':employee_id}"/>
                                     <label for="number_of_days_temp"
@@ -96,12 +93,12 @@
                                         <div attrs="{'invisible': [('type', '=', 'add')]}">
                                             <field name="date_from"
                                                    attrs="{'required':[('type', '=', 'remove')], 'readonly': [('amend', '=', True)]}"
-                                                   class="oe_inline"/>
+                                                   class="oe_inline" widget="date"/>
                                             <label string="-"
                                                    class="oe_inline"/>
                                             <field name="date_to"
                                                    attrs="{'required':[('type', '=', 'remove')]}"
-                                                   class="oe_inline"/>
+                                                   class="oe_inline" widget="date"/>
                                         </div>
                                         <div>
                                             <field name="number_of_days_temp"
@@ -111,24 +108,27 @@
                                     </div>
                                 </group>
                                 <group>
+                                    <field name="name"
+                                           attrs="{'readonly':[('state','!=','draft'),('state','!=','confirm')]}"/>
                                     <field name="holiday_type"
                                            attrs="{'readonly':[('type', '=', 'remove'),('state','!=','draft')]}"
                                            string="Mode"
-                                           groups="hr_holidays.group_hr_holidays_user"
-                                           context="{'employee_id':employee_id}"/>
-                                    <field name="employee_id"
-                                           attrs="{'required':[('holiday_type','=','employee')],'invisible':[('holiday_type','=','category')]}"
-                                           groups="hr_holidays.group_hr_holidays_user"/>
+                                           groups="hr_holidays_extension.group_leave_hr_approval"
+                                           context="{'employee_id':employee_id}" invisible="1"/>
+                                    <!--<field name="employee_id"-->
+                                           <!--attrs="{'required':[('holiday_type','=','employee')],'readonly':[('state','!=','draft')], 'invisible':[('holiday_type','=','category')]} "-->
+                                           <!--groups="hr_holidays_extension.group_hr_leave,hr_holidays_extension.group_leave_hr_approval" options="{'no_create': True,'no_quick_create': True,'no_create_edit': True, 'limit':1000}"/>-->
                                     <field name="category_id"
                                            attrs="{'required':[('holiday_type','=','category')], 'readonly': [('type', '=', 'remove'),('state','!=','draft'), ('state','!=','confirm')], 'invisible':[('holiday_type','=','employee')]}"/>
                                     <field name="department_id"
-                                           groups="hr_holidays.group_hr_holidays_user"
+                                           groups="hr_holidays_extension.group_leave_hr_approval"
                                            attrs="{'readonly':['|','|' ,('type','=','add'),('holiday_type','=','category'),('state','=', 'validate')],'invisible':[('holiday_type','=','category')]}"/>
+                                    <field name="emp_id"/>
                                     <field name="ex_leave"
-                                           groups="hr.group_hr_user"
+                                           groups="hr_holidays_extension.group_exceptional_leave"
                                            attrs="{'readonly':[('state','!=','draft')],'invisible': [('type', '=', 'add')]}"/>
                                     <field name="payslip_status"
-                                           groups="hr_holidays.group_hr_holidays_manager"
+                                           groups="hr_holidays_extension.group_leave_bu_manager_approval"
                                            attrs="{'invisible':[('type','=','add')]}"
                                            widget="toggle_button"/>
                                 </group>
@@ -165,7 +165,7 @@
                             <notebook
                                     attrs="{'invisible': [('type', '=', 'add')]}">
                                 <page string="Leave Balance Information"
-                                      groups="hr.group_hr_user">
+                                      groups="hr_holidays_extension.group_leave_hr_approval">
                                     <!--<field name="working_days" colspan="2" />-->
                                     <group colspan="4" col="4">
                                         <field name="working_days"/>
@@ -201,7 +201,7 @@
                                     </group>
                                 </page>
                                 <page string="Travel Information"
-                                      groups="hr.group_hr_user">
+                                      groups="hr_holidays_extension.group_leave_hr_approval">
                                     <group>
                                         <group colspan="4" col="4">
                                             <field name="outside_ksa"
@@ -215,10 +215,8 @@
                                                    attrs="{'invisible': [('tickets_required','=',False)], 'required': [('tickets_required','=',True)]}"/>
                                             <field name="transportation_to_airport"
                                                    attrs="{'readonly':[('state','!=','draft')],'invisible': [('flag_saudi','=',True)]}"/>
-                                            <field name="return_belonging"
-                                                   groups="hr.group_hr_user"/>
-                                            <field name="actual_return_date"
-                                                   groups="hr.group_hr_user"/>
+                                            <field name="return_belonging"/>
+                                            <field name="actual_return_date"/>
                                             <field name="vacation_salary_advance"
                                                    colspan="2"
                                                    attrs="{'invisible': [('tickets_required','=',False)]}"/>
@@ -239,7 +237,7 @@
                                 </page>
                             </notebook>
                             <group>
-                                <div groups="hr_holidays.group_hr_holidays_manager"
+                                <div groups="hr_holidays_extension.group_leave_bu_manager_approval"
                                      attrs="{'invisible':[('type','=','add')]}">
                                     <separator string="Comment by Manager"/>
                                     <field name="report_note"
@@ -316,5 +314,17 @@
                 </data>
             </field>
         </record>
+
+         <record id="view_holiday_request_on_behalf" model="ir.ui.view">
+            <field name="name">holiday.request.on.behalf</field>
+            <field name="model">hr.holidays</field>
+            <field name="inherit_id" ref="hr_holidays_extension.hr_holidays_inherit_for_add_reason" />
+            <field name="groups_id" eval="[(6, 0, [ref('hr_holidays_extension.group_request_on_behalf_others')])]"/>
+            <field name="arch" type="xml">
+                <xpath expr="//field[@name='employee_id']" position="attributes">
+                    <attribute name="domain">[('id','!=',False)]</attribute>
+                </xpath>
+            </field>
+        </record>
     </data>
 </odoo>
\ No newline at end of file
diff --git a/custom/hr_infraction/__manifest__.py b/custom/hr_infraction/__manifest__.py
index f9c9dc0..7d90ffe 100644
--- a/custom/hr_infraction/__manifest__.py
+++ b/custom/hr_infraction/__manifest__.py
@@ -18,8 +18,9 @@ Warning/Disciplinary Action Management
     'depends': [
         'hr',
         'hr_employee_state',
-        'hr_security',
+        'hr_admin',
         'hr_transfer',
+        'emp_self_services',
     ],
     'init_xml': [
     ],
diff --git a/custom/hr_infraction/security/ir.model.access.csv b/custom/hr_infraction/security/ir.model.access.csv
index 521bd8d..fb297d9 100644
--- a/custom/hr_infraction/security/ir.model.access.csv
+++ b/custom/hr_infraction/security/ir.model.access.csv
@@ -6,9 +6,9 @@ access_hr_infraction_warning_user,access_hr_infraction_warning,model_hr_infracti
 access_hr_infraction_warning_manager,access_hr_infraction_warning,model_hr_infraction_warning,hr.group_hr_manager,1,1,1,1
 access_hr_infraction_category_user,access_hr_infraction_category,model_hr_infraction_category,hr.group_hr_user,1,0,0,0
 access_hr_infraction_category_manager,access_hr_infraction_category,model_hr_infraction_category,hr.group_hr_manager,1,1,1,1
-access_hr_infraction_pm,access_hr_infraction,hr_infraction.model_hr_infraction,hr_security.group_payroll_manager,1,0,0,0
-access_hr_infraction_action_pm,access_hr_infraction_action,hr_infraction.model_hr_infraction_action,hr_security.group_payroll_manager,1,0,0,0
-access_hr_infraction_warning_pm,access_hr_infraction_warning,hr_infraction.model_hr_infraction_warning,hr_security.group_payroll_manager,1,0,0,0
-access_hr_infraction_category_pm,access_hr_infraction_category,hr_infraction.model_hr_infraction_category,hr_security.group_payroll_manager,1,0,0,0
-access_hr_infraction_user_read,access_hr_infraction_read,model_hr_infraction,hr.group_hr_user,1,0,0,0
-access_hr_infraction_action_user_read,access_hr_infraction_action_read,model_hr_infraction_action,hr.group_hr_user,1,0,0,0
\ No newline at end of file
+access_hr_infraction_pm,access_hr_infraction,hr_infraction.model_hr_infraction,hr_admin.group_hr_admin,1,0,0,0
+access_hr_infraction_action_pm,access_hr_infraction_action,hr_infraction.model_hr_infraction_action,hr_admin.group_hr_admin,1,0,0,0
+access_hr_infraction_warning_pm,access_hr_infraction_warning,hr_infraction.model_hr_infraction_warning,hr_admin.group_hr_admin,1,0,0,0
+access_hr_infraction_category_pm,access_hr_infraction_category,hr_infraction.model_hr_infraction_category,hr_admin.group_hr_admin,1,0,0,0
+access_hr_infraction_user_read,access_hr_infraction_read,model_hr_infraction,base.group_user,1,0,0,0
+access_hr_infraction_action_user_read,access_hr_infraction_action_read,model_hr_infraction_action,base.group_user,1,0,0,0
\ No newline at end of file
diff --git a/custom/hr_infraction/views/hr_infraction_view.xml b/custom/hr_infraction/views/hr_infraction_view.xml
index ef34fce..25c91c3 100644
--- a/custom/hr_infraction/views/hr_infraction_view.xml
+++ b/custom/hr_infraction/views/hr_infraction_view.xml
@@ -228,7 +228,8 @@
             <field name="arch" type="xml">
                 <data>
                     <xpath expr="//page[3]" position="after">
-                        <page string="Disciplinary Information" groups="hr.group_hr_user" >
+                        <!--<page string="Disciplinary Information" groups="hr.group_hr_user" >-->
+                        <page string="Disciplinary Information" groups="emp_self_services.group_view_emp_info">
                             <group string="Infractions"
                                    groups="hr.group_hr_user">
                                 <field name="infraction_ids" nolabel="1" readonly="1">
diff --git a/custom/hr_payroll_extension/models/hr_payroll.py b/custom/hr_payroll_extension/models/hr_payroll.py
index 44acbc9..037c482 100644
--- a/custom/hr_payroll_extension/models/hr_payroll.py
+++ b/custom/hr_payroll_extension/models/hr_payroll.py
@@ -608,8 +608,8 @@ class HrPayslip(models.Model):
                 while d < day_from:
                     att_ids = att_obj.search([
                         ('employee_id', '=', contract.employee_id.id),
-                        '|', ('check_in', '=', d.strftime('%Y-%m-%d')),
-                        ('check_out', '=', d.strftime('%Y-%m-%d'))])
+                        '|', ('check_in', '=', d.strftime(OE_DATEFORMAT)),
+                        ('check_out', '=', d.strftime(OE_DATEFORMAT))])
                     if len(att_ids) > 1:
                         lsd.push(True)
                     else:
@@ -633,8 +633,8 @@ class HrPayslip(models.Model):
             _l = logging.getLogger(__name__)
             for day in range(0, nb_of_days):
                 dtDateTime = datetime.strptime(
-                    (day_from + timedelta(days=day)).strftime('%Y-%m-%d'),
-                    '%Y-%m-%d')
+                    (day_from + timedelta(days=day)).strftime(OE_DATEFORMAT),
+                    OE_DATEFORMAT)
                 rest_days = contract_rest_days
                 normal_working_hours = 0
 
@@ -1510,8 +1510,8 @@ class HrAttendance(models.Model):
                                  punches_list=punches_list)
         worked_hours = 0
         for i in range(0, len(sin)):
-            start = datetime.strptime(sin[i], '%Y-%m-%d %H:%M:%S')
-            end = datetime.strptime(sout[i], '%Y-%m-%d %H:%M:%S')
+            start = datetime.strptime(sin[i], OE_DATETIMEFORMAT)
+            end = datetime.strptime(sout[i], OE_DATETIMEFORMAT)
             worked_hours += float((end - start).seconds) / 60.0 / 60.0
         return worked_hours
 
@@ -1564,8 +1564,8 @@ class HrAttendance(models.Model):
         worked_hours = 0
         lead_hours = 0
         for i in range(0, len(sin)):
-            start = datetime.strptime(sin[i], '%Y-%m-%d %H:%M:%S')
-            end = datetime.strptime(sout[i], '%Y-%m-%d %H:%M:%S')
+            start = datetime.strptime(sin[i], OE_DATETIMEFORMAT)
+            end = datetime.strptime(sout[i], OE_DATETIMEFORMAT)
             if worked_hours == 0 and end <= dtBegin:
                 lead_hours += float((end - start).seconds) / 60.0 / 60.0
             elif worked_hours == 0 and end > dtBegin:
diff --git a/custom/hr_payroll_extension/models/hr_schedule.py b/custom/hr_payroll_extension/models/hr_schedule.py
index a560a07..05f5926 100644
--- a/custom/hr_payroll_extension/models/hr_schedule.py
+++ b/custom/hr_payroll_extension/models/hr_schedule.py
@@ -1,5 +1,6 @@
 from datetime import datetime, timedelta
 from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as OE_DFORMAT
+from odoo.tools import DEFAULT_SERVER_DATETIME_FORMAT as OE_DATETIMEFORMAT
 from odoo import api, models
 
 
@@ -24,13 +25,13 @@ class ScheduleDetail(models.Model):
 
         sched_details = self.search([
             ('schedule_id.employee_id.id', '=', employee_id),
-            ('day', '>=', dStart.strftime('%Y-%m-%d')),
-            ('day', '<=', dEnd.strftime('%Y-%m-%d'))], order='date_start')
+            ('day', '>=', dStart.strftime(OE_DFORMAT)),
+            ('day', '<=', dEnd.strftime(OE_DFORMAT))], order='date_start')
         if len(sched_details) > 0:
             for detail in sched_details:
                 res[detail.day].append(
-                    (datetime.strptime(detail.date_start, '%Y-%m-%d %H:%M:%S'),
-                     datetime.strptime(detail.date_end, '%Y-%m-%d %H:%M:%S'))
+                    (datetime.strptime(detail.date_start, OE_DATETIMEFORMAT),
+                     datetime.strptime(detail.date_end, OE_DATETIMEFORMAT))
                 )
         return res
 
diff --git a/custom/hr_payroll_period/__manifest__.py b/custom/hr_payroll_period/__manifest__.py
index 90a52f0..a10cce7 100644
--- a/custom/hr_payroll_period/__manifest__.py
+++ b/custom/hr_payroll_period/__manifest__.py
@@ -33,7 +33,7 @@ example:
         'hr_payslip_amendment',
         'hr_public_holidays',
         'hr_schedule',
-        'hr_security',
+        'hr_admin',
         'hr_holidays',
         'hr_attendance',
         'hr_employee_customization',
diff --git a/custom/hr_payroll_period/models/hr_attendance.py b/custom/hr_payroll_period/models/hr_attendance.py
index 3a145a7..8b0858c 100755
--- a/custom/hr_payroll_period/models/hr_attendance.py
+++ b/custom/hr_payroll_period/models/hr_attendance.py
@@ -10,6 +10,27 @@ class HrAttendance(models.Model):
             'verified', 'Verified'), ('locked', 'Locked'),
     ], string='State', default='draft')
 
+    @api.one
+    def is_locked(self, employee_id, utcdt_str):
+
+        res = False
+        pp_obj = self.env['hr.payroll.period']
+        pp_rec = pp_obj.search([
+            ('state', 'in', [
+                'locked', 'generate', 'payment', 'closed']),
+            '&', ('date_start', '<=', utcdt_str),
+            ('date_end', '>=', utcdt_str),
+        ])
+        for pp in pp_rec:
+            pp_contract_ids = [c.id for c in pp.schedule_id.contract_ids]
+            for c_id in employee_id.contract_ids:
+                if c_id in pp_contract_ids:
+                    res = True
+                    break
+            if res:
+                break
+        return res
+
     @api.multi
     def unlink(self):
         for punch in self:
@@ -53,3 +74,12 @@ class HrAttendance(models.Model):
                         vals.get('employee_id').name, vals.get('check_in'),
                         vals.get('check_out') or vals.get('check_in'))))
         return super(HrAttendance, self).create(vals)
+
+    # @api.model
+    # def create(self, vals):
+    #     if self.is_locked(vals.get('employee_id'), vals['name']):
+    #         raise Warning(_('The period is Locked You may
+        #  not add an attendace record to a locked period.\nEmployee:
+        #  %s\nTime: %s') % (vals.get('employee_id').name,
+        #  vals.get('employee_id').name))
+    #     return super(HrAttendance, self).create(vals)
diff --git a/custom/hr_payroll_period/models/hr_payroll_period.py b/custom/hr_payroll_period/models/hr_payroll_period.py
index 184e44a..9a070f1 100644
--- a/custom/hr_payroll_period/models/hr_payroll_period.py
+++ b/custom/hr_payroll_period/models/hr_payroll_period.py
@@ -6,6 +6,8 @@ from dateutil.relativedelta import relativedelta
 from pytz import utc
 from openerp.tools.safe_eval import safe_eval as eval
 from pytz import common_timezones, timezone
+from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as OE_DATEFORMAT
+from odoo.tools import DEFAULT_SERVER_DATETIME_FORMAT as OE_DATETIMEFORMAT
 
 
 # Obtained from: http://stackoverflow.com/questions/4130922/how-to-increment-
@@ -46,7 +48,7 @@ class HrPayrollPeriod(models.Model):
     @api.model
     def _needaction_domain_get(self):
         users_obj = self.env['res.users']
-        if users_obj.has_group('hr_security.group_payroll_manager'):
+        if users_obj.has_group('hr_admin.group_hr_admin'):
             domain = [('state', 'not in', ['open', 'closed'])]
             return domain
         return False
@@ -63,7 +65,7 @@ class HrPayrollPeriod(models.Model):
         if self:
             utc_tz = timezone('UTC')
             utcDtNow = utc_tz.localize(datetime.now(), is_dst=False)
-            dtEnd = datetime.strptime(self.date_end, '%Y-%m-%d %H:%M:%S')
+            dtEnd = datetime.strptime(self.date_end, OE_DATETIMEFORMAT)
             utcDtEnd = utc_tz.localize(dtEnd, is_dst=False)
             if utcDtNow > utcDtEnd + timedelta(minutes=(
                     self.schedule_id.ot_max_rollover_hours * 60)):
@@ -86,7 +88,7 @@ class HrPayrollPeriod(models.Model):
         period_ids = self.search([
             ('state', 'in', ['open']),
             ('date_end', '<=', utcDtNow.strftime(
-                '%Y-%m-%d %H:%M:%S'))])
+                OE_DATETIMEFORMAT))])
         if len(period_ids) == 0:
             return
         for pid in period_ids:
@@ -105,9 +107,9 @@ class HrPayrollPeriod(models.Model):
         holiday_obj = self.env['hr.holidays']
         for period in self:
             utc_tz = timezone('UTC')
-            dt = datetime.strptime(period.date_start, '%Y-%m-%d %H:%M:%S')
+            dt = datetime.strptime(period.date_start, OE_DATETIMEFORMAT)
             utcDtStart = utc_tz.localize(dt, is_dst=False)
-            dt = datetime.strptime(period.date_end, '%Y-%m-%d %H:%M:%S')
+            dt = datetime.strptime(period.date_end, OE_DATETIMEFORMAT)
             utcDtEnd = utc_tz.localize(dt, is_dst=False)
             if period.state in ['locked', 'generate']:
                 for contract in period.schedule_id.contract_ids:
@@ -117,9 +119,9 @@ class HrPayrollPeriod(models.Model):
                         ('employee_id', '=', employee.id),
                         '&', (
                             'check_in', '>=',
-                            utcDtStart.strftime('%Y-%m-%d %H:%M:%S')),
+                            utcDtStart.strftime(OE_DATETIMEFORMAT)),
                         ('check_in', '<=', utcDtEnd.strftime(
-                            '%Y-%m-%d %H:%M:%S')),
+                            OE_DATETIMEFORMAT)),
                     ])
                     for pid in punch_ids:
                         pid.state = 'draft'
@@ -129,9 +131,9 @@ class HrPayrollPeriod(models.Model):
                         ('schedule_id.employee_id', '=', employee.id),
                         '&', (
                             'date_start', '>=',
-                            utcDtStart.strftime('%Y-%m-%d %H:%M:%S')),
+                            utcDtStart.strftime(OE_DATETIMEFORMAT)),
                         ('date_start', '<=', utcDtEnd.strftime(
-                            '%Y-%m-%d %H:%M:%S')),
+                            OE_DATETIMEFORMAT)),
                     ], order='date_start')
                     for did in detail_ids:
                         did.state = 'draft'
@@ -141,9 +143,9 @@ class HrPayrollPeriod(models.Model):
                         ('employee_id', '=', employee.id),
                         '&', (
                             'date_to', '>=',
-                            utcDtStart.strftime('%Y-%m-%d %H:%M:%S')),
+                            utcDtStart.strftime(OE_DATETIMEFORMAT)),
                         ('date_to', '<=', utcDtEnd.strftime(
-                            '%Y-%m-%d %H:%M:%S')),
+                            OE_DATETIMEFORMAT)),
                     ])
                     for hid in holiday_ids:
                         hid.payroll_period_state = 'unlocked'
@@ -163,9 +165,9 @@ class HrPayrollPeriod(models.Model):
         holiday_obj = self.env['hr.holidays']
         for period in self:
             utc_tz = timezone('UTC')
-            dt = datetime.strptime(period.date_start, '%Y-%m-%d %H:%M:%S')
+            dt = datetime.strptime(period.date_start, OE_DATETIMEFORMAT)
             utcDtStart = utc_tz.localize(dt, is_dst=False)
-            dt = datetime.strptime(period.date_end, '%Y-%m-%d %H:%M:%S')
+            dt = datetime.strptime(period.date_end, OE_DATETIMEFORMAT)
             utcDtEnd = utc_tz.localize(dt, is_dst=False)
             for contract in period.schedule_id.contract_ids:
                 employee = contract.employee_id
@@ -175,9 +177,9 @@ class HrPayrollPeriod(models.Model):
                     ('employee_id', '=', employee.id),
                     '&', (
                         'check_in', '>=',
-                        utcDtStart.strftime('%Y-%m-%d %H:%M:%S')),
+                        utcDtStart.strftime(OE_DATETIMEFORMAT)),
                     ('check_out', '<=', utcDtEnd.strftime(
-                        '%Y-%m-%d %H:%M:%S')),
+                        OE_DATETIMEFORMAT)),
                 ])
                 for pid in punch_ids:
                     pid.state = 'locked'
@@ -187,9 +189,9 @@ class HrPayrollPeriod(models.Model):
                     ('schedule_id.employee_id', '=', employee.id),
                     '&', (
                         'date_start', '>=',
-                        utcDtStart.strftime('%Y-%m-%d %H:%M:%S')),
+                        utcDtStart.strftime(OE_DATETIMEFORMAT)),
                     ('date_start', '<=', utcDtEnd.strftime(
-                        '%Y-%m-%d %H:%M:%S')),
+                        OE_DATETIMEFORMAT)),
                 ])
                 for did in detail_ids:
                     did.state = 'locked'
@@ -199,9 +201,9 @@ class HrPayrollPeriod(models.Model):
                     ('employee_id', '=', employee.id),
                     '&', (
                         'date_to', '>=',
-                        utcDtStart.strftime('%Y-%m-%d %H:%M:%S')),
+                        utcDtStart.strftime(OE_DATETIMEFORMAT)),
                     ('date_to', '<=', utcDtEnd.strftime(
-                        '%Y-%m-%d %H:%M:%S')),
+                        OE_DATETIMEFORMAT)),
                 ])
                 for hid in holiday_ids:
                     hid.payroll_period_state = 'locked'
@@ -316,8 +318,8 @@ class HrPayperiodSchedule(models.Model):
                     latest = p
                     continue
                 if datetime.strptime(p.date_end,
-                                     '%Y-%m-%d %H:%M:%S') > datetime.strptime(
-                        latest.date_end, '%Y-%m-%d %H:%M:%S'):
+                                     OE_DATETIMEFORMAT) > datetime.strptime(
+                        latest.date_end, OE_DATETIMEFORMAT):
                     latest = p
             local_tz = timezone(sched.tz)
             if not latest:
@@ -325,7 +327,7 @@ class HrPayperiodSchedule(models.Model):
                 # schedule.
                 if sched.type == 'monthly':
                     dtStart = datetime.strptime(
-                        sched.initial_period_date, '%Y-%m-%d')
+                        sched.initial_period_date, OE_DATEFORMAT)
                     if dtStart.day > int(sched.mo_firstday):
                         dtStart = add_months(dtStart, 1)
                         dtStart = datetime(
@@ -353,14 +355,14 @@ class HrPayperiodSchedule(models.Model):
                         'name': 'Pay Period ' + str(month_number) + '/' + str(
                             year_number),
                         'schedule_id': sched.id,
-                        'date_start': utcStart.strftime('%Y-%m-%d %H:%M:%S'),
-                        'date_end': utcEnd.strftime('%Y-%m-%d %H:%M:%S'),
+                        'date_start': utcStart.strftime(OE_DATETIMEFORMAT),
+                        'date_end': utcEnd.strftime(OE_DATETIMEFORMAT),
                     }
             else:
                 if sched.type == 'monthly':
                     # Convert from UTC to timezone of punches
                     utcStart = datetime.strptime(
-                        latest.date_end, '%Y-%m-%d %H:%M:%S')
+                        latest.date_end, OE_DATETIMEFORMAT)
                     utc_tz = timezone('UTC')
                     utcStart = utc_tz.localize(utcStart, is_dst=None)
                     utcStart += timedelta(seconds=1)
@@ -381,8 +383,8 @@ class HrPayperiodSchedule(models.Model):
                         'name': 'Pay Period ' + str(month_number) + '/' + str(
                             year_number),
                         'schedule_id': sched.id,
-                        'date_start': utcStart.strftime('%Y-%m-%d %H:%M:%S'),
-                        'date_end': utcEnd.strftime('%Y-%m-%d %H:%M:%S'),
+                        'date_start': utcStart.strftime(OE_DATETIMEFORMAT),
+                        'date_end': utcEnd.strftime(OE_DATETIMEFORMAT),
                     }
             if data is not None:
                 sched.pay_period_ids = [(0, 0, data)]
@@ -396,8 +398,8 @@ class HrPayperiodSchedule(models.Model):
                 latest_period = period
                 continue
             if datetime.strptime(period.date_end,
-                                 '%Y-%m-%d %H:%M:%S') > datetime.strptime(
-                    latest_period.date_end, '%Y-%m-%d %H:%M:%S'):
+                                 OE_DATETIMEFORMAT) > datetime.strptime(
+                    latest_period.date_end, OE_DATETIMEFORMAT):
                 latest_period = period
 
         return latest_period
@@ -421,7 +423,7 @@ class HrPayperiodSchedule(models.Model):
                 continue
             dtNow = datetime.strptime(
                 dtNow.strftime('%Y-%m-' + firstday + ' 00:00:00'),
-                '%Y-%m-%d %H:%M:%S')
+                OE_DATETIMEFORMAT)
             loclDTNow = timezone(sched.tz).localize(dtNow, is_dst=False)
             utcDTFuture = loclDTNow.astimezone(
                 utc_tz) + relativedelta(months=+3)
@@ -432,13 +434,13 @@ class HrPayperiodSchedule(models.Model):
             latest_period = sched._get_latest_period()
             utcDTStart = utc_tz.localize(
                 datetime.strptime(latest_period.date_start,
-                                  '%Y-%m-%d %H:%M:%S'), is_dst=False)
+                                  OE_DATETIMEFORMAT), is_dst=False)
             while utcDTFuture > utcDTStart:
                 sched.add_pay_period()
                 latest_period = sched._get_latest_period()
                 utcDTStart = utc_tz.localize(
                     datetime.strptime(latest_period.date_start,
-                                      '%Y-%m-%d %H:%M:%S'), is_dst=False)
+                                      OE_DATETIMEFORMAT), is_dst=False)
 
 
 class ContractInit(models.Model):
@@ -497,7 +499,7 @@ class hr_payslip(models.Model):
 
             def sum(self, code, from_date, to_date=None):
                 if to_date is None:
-                    to_date = datetime.now().strftime('%Y-%m-%d')
+                    to_date = datetime.now().strftime(OE_DATEFORMAT)
                 self.cr.execute("SELECT sum(amount) as sum\
                             FROM hr_payslip as hp, hr_payslip_input as pi \
                             WHERE hp.employee_id = %s AND hp.state = 'done' \
@@ -515,7 +517,7 @@ class hr_payslip(models.Model):
 
             def _sum(self, code, from_date, to_date=None):
                 if to_date is None:
-                    to_date = datetime.now().strftime('%Y-%m-%d')
+                    to_date = datetime.now().strftime(OE_DATEFORMAT)
                 self.cr.execute("SELECT sum(number_of_days) as number_of_days,"
                                 " sum(number_of_hours) as number_of_hours\
                             FROM hr_payslip as hp, hr_payslip_worked_days as "
@@ -542,7 +544,7 @@ class hr_payslip(models.Model):
 
             def sum(self, code, from_date, to_date=None):
                 if to_date is None:
-                    to_date = datetime.now().strftime('%Y-%m-%d')
+                    to_date = datetime.now().strftime(OE_DATEFORMAT)
                 self.cr.execute("SELECT sum(case when hp.credit_note = "
                                 "False then (pl.total) else (-pl.total) end)\
                             FROM hr_payslip as hp, hr_payslip_line as pl \
diff --git a/custom/hr_payroll_period/parser/hr_payslip_run.py b/custom/hr_payroll_period/parser/hr_payslip_run.py
index 39dde04..c0a77d5 100755
--- a/custom/hr_payroll_period/parser/hr_payslip_run.py
+++ b/custom/hr_payroll_period/parser/hr_payslip_run.py
@@ -2,6 +2,7 @@ from datetime import datetime
 from odoo.report import report_sxw
 from odoo import models, api
 from odoo.api import Environment
+from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as OE_DATEFORMAT
 
 
 class Parser(report_sxw.rml_parse):
@@ -98,8 +99,8 @@ class Parser(report_sxw.rml_parse):
                                             # get the info for each employee
                 date_start = slip.payslip_run_id.date_start  # getting the
                 # start_date of the period
-                date_start = datetime.strptime(date_start,
-                                               '%Y-%m-%d')  # format the date
+                date_start = datetime.\
+                    strptime(date_start, OE_DATEFORMAT)  # format the date
                 month_of_payslip_int = date_start.month  # return the month
                 # number
                 month_of_payslip = monthsSymbolDict[
diff --git a/custom/hr_payroll_period/security/ir.model.access.csv b/custom/hr_payroll_period/security/ir.model.access.csv
index ff1e65b..3ea0186 100644
--- a/custom/hr_payroll_period/security/ir.model.access.csv
+++ b/custom/hr_payroll_period/security/ir.model.access.csv
@@ -1,35 +1,35 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
-access_hr_payroll_period_user,access_hr_payroll_period,model_hr_payroll_period,hr_security.group_payroll_user,1,1,1,0
-access_hr_payroll_period_manager,access_hr_payroll_period,model_hr_payroll_period,hr_security.group_payroll_manager,1,1,1,1
+access_hr_payroll_period_user,access_hr_payroll_period,model_hr_payroll_period,hr_admin.group_hr_admin,1,1,1,0
+access_hr_payroll_period_manager,access_hr_payroll_period,model_hr_payroll_period,hr_admin.group_hr_admin,1,1,1,1
 access_hr_payroll_period_hrm,access_hr_payroll_period,model_hr_payroll_period,hr.group_hr_manager,1,1,0,0
-access_hr_payroll_period_schedule_user,access_hr_payroll_period_schedule,model_hr_payroll_period_schedule,hr_security.group_payroll_user,1,0,0,0
-access_hr_payroll_period_schedule_manager,access_hr_payroll_period_schedule,model_hr_payroll_period_schedule,hr_security.group_payroll_manager,1,1,1,1
+access_hr_payroll_period_schedule_user,access_hr_payroll_period_schedule,model_hr_payroll_period_schedule,hr_admin.group_hr_admin,1,0,0,0
+access_hr_payroll_period_schedule_manager,access_hr_payroll_period_schedule,model_hr_payroll_period_schedule,hr_admin.group_hr_admin,1,1,1,1
 access_hr_payroll_period_schedule_hro,access_hr_payroll_period_schedule,model_hr_payroll_period_schedule,hr.group_hr_user,1,0,0,0
 access_hr_payslip_amendment_hruser,access_hr_payslip_amendment,model_hr_payslip_amendment,hr.group_hr_user,1,1,1,1
-access_hr_payslip_amendment_user,access_hr_payslip_amendment,model_hr_payslip_amendment,hr_security.group_payroll_user,1,1,1,1
+access_hr_payslip_amendment_user,access_hr_payslip_amendment,model_hr_payslip_amendment,hr_admin.group_hr_admin,1,1,1,1
 access_hr_payslip_exception_hrm,access_hr_payslip_exception,model_hr_payslip_exception,hr.group_hr_manager,1,0,0,0
 access_hr_payslip_exception_rule_hrm,access_hr_payslip_exception_rule,model_hr_payslip_exception_rule,hr.group_hr_manager,1,0,0,0
-access_hr_payslip_exception_pm,access_hr_payslip_exception,model_hr_payslip_exception,hr_security.group_payroll_manager,1,1,1,1
-access_hr_payslip_exception_rule_pm,access_hr_payslip_exception_rule,model_hr_payslip_exception_rule,hr_security.group_payroll_manager,1,1,1,1
-access_hr_contract_pm,access_hr_contract,model_hr_contract,hr_security.group_payroll_manager,1,0,0,0
-access_hr_payroll_structure_pm,hr.payroll.structure,hr_payroll.model_hr_payroll_structure,hr_security.group_payroll_manager,1,1,1,1
-access_hr_contribution_register_pm,hr.contribution.register,hr_payroll.model_hr_contribution_register,hr_security.group_payroll_manager,1,1,1,1
-access_hr_salary_rule_category_pm,hr.salary.rule.category,hr_payroll.model_hr_salary_rule_category,hr_security.group_payroll_manager,1,1,1,1
-access_hr_payslip_pm,hr.payslip,hr_payroll.model_hr_payslip,hr_security.group_payroll_manager,1,1,1,1
-access_hr_payslip_line_pm,hr.payslip.line,hr_payroll.model_hr_payslip_line,hr_security.group_payroll_manager,1,1,1,1
-access_hr_payslip_input_pm,hr.payslip.input,hr_payroll.model_hr_payslip_input,hr_security.group_payroll_manager,1,1,1,1
-access_hr_payslip_worked_days _pm,hr.payslip.worked_days,hr_payroll.model_hr_payslip_worked_days,hr_security.group_payroll_manager,1,1,1,1
-access_hr_payslip_run_pm,hr.payslip.run,hr_payroll.model_hr_payslip_run,hr_security.group_payroll_manager,1,1,1,1
-access_hr_rule_input_pm,hr.rule.input,hr_payroll.model_hr_rule_input,hr_security.group_payroll_manager,1,1,1,1
-access_hr_salary_rule_pm,hr.salary.rule,hr_payroll.model_hr_salary_rule,hr_security.group_payroll_manager,1,1,1,1
-access_hr_schedule_pm,access_hr_schedule,hr_schedule.model_hr_schedule,hr_security.group_payroll_manager,1,0,0,0
-access_hr_schedule_detail_pm,access_hr_schedule_detail,hr_schedule.model_hr_schedule_detail,hr_security.group_payroll_manager,1,0,0,0
-access_hr_schedule_template_pm,access_hr_schedule_template,hr_schedule.model_hr_schedule_template,hr_security.group_payroll_manager,1,0,0,0
-access_hr_schedule_template_worktime_pm,access_hr_schedule_template_worktime,hr_schedule.model_hr_schedule_template_worktime,hr_security.group_payroll_manager,1,0,0,0
-access_hr_schedule_alert_pm,access_hr_schedule_alert,hr_schedule.model_hr_schedule_alert,hr_security.group_payroll_manager,1,0,0,0
-access_hr_schedule_alert_rule_pm,access_hr_schedule_alert_rule,hr_schedule.model_hr_schedule_alert_rule,hr_security.group_payroll_manager,1,0,0,0
-access_hr_payroll_register_pm,access_hr_payroll_register,hr_payroll_register.model_hr_payroll_register,hr_security.group_payroll_manager,1,1,1,1
-access_hr_attendance_pm,access_hr_attendance,hr_attendance.model_hr_attendance,hr_security.group_payroll_manager,1,0,0,0
-access_hr_holidays_pm,access_hr_holidays,hr_holidays.model_hr_holidays,hr_security.group_payroll_manager,1,0,0,0
-access_hr_holidays_status_pm,access_hr_holidays,hr_holidays.model_hr_holidays_status,hr_security.group_payroll_manager,1,0,0,0
+access_hr_payslip_exception_pm,access_hr_payslip_exception,model_hr_payslip_exception,hr_admin.group_hr_admin,1,1,1,1
+access_hr_payslip_exception_rule_pm,access_hr_payslip_exception_rule,model_hr_payslip_exception_rule,hr_admin.group_hr_admin,1,1,1,1
+access_hr_contract_pm,access_hr_contract,model_hr_contract,hr_admin.group_hr_admin,1,0,0,0
+access_hr_payroll_structure_pm,hr.payroll.structure,hr_payroll.model_hr_payroll_structure,hr_admin.group_hr_admin,1,1,1,1
+access_hr_contribution_register_pm,hr.contribution.register,hr_payroll.model_hr_contribution_register,hr_admin.group_hr_admin,1,1,1,1
+access_hr_salary_rule_category_pm,hr.salary.rule.category,hr_payroll.model_hr_salary_rule_category,hr_admin.group_hr_admin,1,1,1,1
+access_hr_payslip_pm,hr.payslip,hr_payroll.model_hr_payslip,hr_admin.group_hr_admin,1,1,1,1
+access_hr_payslip_line_pm,hr.payslip.line,hr_payroll.model_hr_payslip_line,hr_admin.group_hr_admin,1,1,1,1
+access_hr_payslip_input_pm,hr.payslip.input,hr_payroll.model_hr_payslip_input,hr_admin.group_hr_admin,1,1,1,1
+access_hr_payslip_worked_days _pm,hr.payslip.worked_days,hr_payroll.model_hr_payslip_worked_days,hr_admin.group_hr_admin,1,1,1,1
+access_hr_payslip_run_pm,hr.payslip.run,hr_payroll.model_hr_payslip_run,hr_admin.group_hr_admin,1,1,1,1
+access_hr_rule_input_pm,hr.rule.input,hr_payroll.model_hr_rule_input,hr_admin.group_hr_admin,1,1,1,1
+access_hr_salary_rule_pm,hr.salary.rule,hr_payroll.model_hr_salary_rule,hr_admin.group_hr_admin,1,1,1,1
+access_hr_schedule_pm,access_hr_schedule,hr_schedule.model_hr_schedule,hr_admin.group_hr_admin,1,0,0,0
+access_hr_schedule_detail_pm,access_hr_schedule_detail,hr_schedule.model_hr_schedule_detail,hr_admin.group_hr_admin,1,0,0,0
+access_hr_schedule_template_pm,access_hr_schedule_template,hr_schedule.model_hr_schedule_template,hr_admin.group_hr_admin,1,0,0,0
+access_hr_schedule_template_worktime_pm,access_hr_schedule_template_worktime,hr_schedule.model_hr_schedule_template_worktime,hr_admin.group_hr_admin,1,0,0,0
+access_hr_schedule_alert_pm,access_hr_schedule_alert,hr_schedule.model_hr_schedule_alert,hr_admin.group_hr_admin,1,0,0,0
+access_hr_schedule_alert_rule_pm,access_hr_schedule_alert_rule,hr_schedule.model_hr_schedule_alert_rule,hr_admin.group_hr_admin,1,0,0,0
+access_hr_payroll_register_pm,access_hr_payroll_register,hr_payroll_register.model_hr_payroll_register,hr_admin.group_hr_admin,1,1,1,1
+access_hr_attendance_pm,access_hr_attendance,hr_attendance.model_hr_attendance,hr_admin.group_hr_admin,1,0,0,0
+access_hr_holidays_pm,access_hr_holidays,hr_holidays.model_hr_holidays,hr_admin.group_hr_admin,1,0,0,0
+access_hr_holidays_status_pm,access_hr_holidays,hr_holidays.model_hr_holidays_status,hr_admin.group_hr_admin,1,0,0,0
 access_hr_payroll_period_end_1,access_hr_payroll_period_end_1,model_hr_payroll_period_end_1,,1,0,0,0
diff --git a/custom/hr_payroll_period/security/ir_rule.xml b/custom/hr_payroll_period/security/ir_rule.xml
index 350aac3..ca8f278 100644
--- a/custom/hr_payroll_period/security/ir_rule.xml
+++ b/custom/hr_payroll_period/security/ir_rule.xml
@@ -8,7 +8,7 @@
             <!--<field name="model_id"-->
                    <!--ref="hr_payroll_period.model_hr_attendance"/>-->
             <!--<field name="domain_force">[(1,'=',1)]</field>-->
-            <!--<field name="groups" eval="[(4,ref('hr_security.group_payroll_manager'))]"/>-->
+            <!--<field name="groups" eval="[(4,ref('hr_admin.group_hr_admin'))]"/>-->
         <!--</record>-->
         
         <!-- Allow Payroll Manager to access holidays/leaves -->
@@ -16,7 +16,7 @@
             <field name="name">Payroll Manager Holidays</field>
             <field name="model_id" ref="hr_holidays.model_hr_holidays"/>
             <field name="domain_force">[(1,'=',1)]</field>
-            <field name="groups" eval="[(4,ref('hr_security.group_payroll_manager'))]"/>
+            <field name="groups" eval="[(4,ref('hr_admin.group_hr_admin'))]"/>
         </record>
 
     </data>
diff --git a/custom/hr_payroll_period/wizard/payroll_period_end.py b/custom/hr_payroll_period/wizard/payroll_period_end.py
index 3515807..b9849d1 100644
--- a/custom/hr_payroll_period/wizard/payroll_period_end.py
+++ b/custom/hr_payroll_period/wizard/payroll_period_end.py
@@ -287,9 +287,9 @@ class payroll_period_end_1(models.Model):
     #             attendance_obj = self.pool.get('hr.attendance')
     #             utc_tz = timezone('UTC')
     #             dt = datetime.strptime(period.date_start,
-    # '%Y-%m-%d %H:%M:%S')
+    # OEDATETIME_FORMAT)
     #             utcDtStart = utc_tz.localize(dt, is_dst=False)
-    #             dt = datetime.strptime(period.date_end, '%Y-%m-%d %H:%M:%S')
+    #             dt = datetime.strptime(period.date_end, OEDATETIME_FORMAT)
     #             utcDtEnd = utc_tz.localize(dt, is_dst=False)
     #             for contract in period.schedule_id.contract_ids:
     #                 employee = contract.employee_id
@@ -404,16 +404,14 @@ class payroll_period_end_1(models.Model):
                  for c in period.schedule_id.contract_ids]
 
                 dtStart = datetime.strptime(
-                    period.date_start, '%Y-%m-%d %H:%M:%S')
-                dtEnd = datetime.strptime(period.date_end, '%Y-%m-%d %H:%M:%S')
+                    period.date_start, OEDATETIME_FORMAT)
+                dtEnd = datetime.strptime(period.date_end, OEDATETIME_FORMAT)
 
                 dtNext = dtStart
                 while dtNext <= dtEnd:
                     for employee_id in employee_ids:
-                        alert_obj.compute_alerts_by_employee(employee_id,
-                                                             dtNext.date(
-                                                             ).strftime(
-                                                                 '%Y-%m-%d'))
+                        alert_obj.compute_alerts_by_employee(
+                            employee_id, dtNext.date().strftime(OEDATE_FORMAT))
                     dtNext += relativedelta(days=+1)
 
     @api.multi
@@ -431,28 +429,62 @@ class payroll_period_end_1(models.Model):
 
     @api.multi
     def lock_period(self):
-        self.ensure_one()
         period_id = self._context.get('active_id', False)
         if not period_id:
+            raise Warning(_('Unable to get the period ID!!!'))
             return
-
         # XXX - should not be necessary any more
         # Make sure to re-calculate alerts first. Just in case.
+        # self._do_recalc_alerts(cr, uid, ids, context=context)
 
         if self.alert_critical != 0:
-            raise Warning(_('Unable to Lock the Payroll Period. There are '
-                            'one or more Critical Severity Exceptions. Please '
-                            'correct them before proceeding.'))
+            raise Warning(
+                _('Unable to Lock the Payroll Period There'
+                  ' are one or more Critical Severity'
+                  ' Exceptions. Please correct'
+                  ' them before proceeding.'))
+
+        pp_obj = self.env['hr.payroll.period']
+        for record in pp_obj.browse([period_id]):
+            record.set_state_locked()
+            if record.state != 'locked':
+                record.set_state_ended()
+                record.set_state_locked()
+                if record.state != 'locked':
+                    raise Warning(_('lock 2 Failed to lock 2'))
+        return {
+            'view_type': 'form',
+            'view_mode': 'form',
+            'res_model': 'hr.payroll.period.end.1',
+            'type': 'ir.actions.act_window',
+            'target': 'inline',
+            'context': self._context
+        }
 
-        period_rec = self.env['hr.payroll.period'].browse(period_id)
-        period_rec.set_state_locked()
-        # return {
-        #     'view_type': 'form',
-        #     'view_mode': 'form',
-        #     'res_model': 'hr.payroll.period.end.1',
-        #     'type': 'ir.actions.act_window',
-        #     'target': 'inline',
-        # }
+    # @api.multi
+    # def lock_period(self):
+    #     self.ensure_one()
+    #     period_id = self._context.get('active_id', False)
+    #     if not period_id:
+    #         return
+    #
+    #     # XXX - should not be necessary any more
+    #     # Make sure to re-calculate alerts first. Just in case.
+    #
+    #     if self.alert_critical != 0:
+    #         raise Warning(_('Unable to Lock the Payroll Period. There are
+    #  one or more Critical Severity Exceptions. Please
+    #  correct them before proceeding.'))
+    #
+    #     period_rec = self.env['hr.payroll.period'].browse(period_id)
+    #     period_rec.set_state_locked()
+    #     # return {
+    #     #     'view_type': 'form',
+    #     #     'view_mode': 'form',
+    #     #     'res_model': 'hr.payroll.period.end.1',
+    #     #     'type': 'ir.actions.act_window',
+    #     #     'target': 'inline',
+    #     # }
 
     @api.multi
     def _remove_register(self):
@@ -479,16 +511,14 @@ class payroll_period_end_1(models.Model):
         period_rec = self.env['hr.payroll.period'].browse(period_id)
         if period_rec.state == 'generate':
             self._remove_register()
-
         period_rec.set_state_ended()
-
-        # return {
-        #     'view_type': 'form',
-        #     'view_mode': 'form',
-        #     'res_model': 'hr.payroll.period.end.1',
-        #     'type': 'ir.actions.act_window',
-        #     'target': 'inline',
-        # }
+        return {
+            'view_type': 'form',
+            'view_mode': 'form',
+            'res_model': 'hr.payroll.period.end.1',
+            'type': 'ir.actions.act_window',
+            'target': 'inline',
+        }
 
     @api.multi
     def create_payroll_register(self):
@@ -556,13 +586,13 @@ class payroll_period_end_1(models.Model):
         local_tz = timezone(tz)
         utc_tz = timezone('UTC')
         utcDTStart = utc_tz.localize(
-            datetime.strptime(register_rec.date_start, '%Y-%m-%d %H:%M:%S'))
+            datetime.strptime(register_rec.date_start, OEDATETIME_FORMAT))
         loclDTStart = utcDTStart.astimezone(local_tz)
-        date_start = loclDTStart.strftime('%Y-%m-%d')
+        date_start = loclDTStart.strftime(OEDATE_FORMAT)
         utcDTEnd = utc_tz.localize(
-            datetime.strptime(register_rec.date_end, '%Y-%m-%d %H:%M:%S'))
+            datetime.strptime(register_rec.date_end, OEDATETIME_FORMAT))
         loclDTEnd = utcDTEnd.astimezone(local_tz)
-        date_end = loclDTEnd.strftime('%Y-%m-%d')
+        date_end = loclDTEnd.strftime(OEDATE_FORMAT)
 
         # Get Pay Slip Amendments, Employee ID, and the amount of the amendment
         #
diff --git a/custom/hr_payroll_period/wizard/payroll_period_end_view.xml b/custom/hr_payroll_period/wizard/payroll_period_end_view.xml
index c0db565..d258121 100644
--- a/custom/hr_payroll_period/wizard/payroll_period_end_view.xml
+++ b/custom/hr_payroll_period/wizard/payroll_period_end_view.xml
@@ -78,12 +78,12 @@
                                    readonly="1"/>
                         </group>
                         <group>
-                            <button name="reload" type="object" groups="hr_security.group_payroll_manager" string="Reload"/>
+                            <button name="reload" type="object" groups="hr_admin.group_hr_admin" string="Reload"/>
                         </group>
                     </group>
                     <h2>5. Generate and Review Pay Slips</h2>
                     <group>
-                        <button name="create_payroll_register" type="object" groups="hr_security.group_payroll_manager" string="Generate Pay Slips" attrs="{'invisible': [('payment_started','=',True)]}"/>
+                        <button name="create_payroll_register" type="object" groups="hr_admin.group_hr_admin" string="Generate Pay Slips" attrs="{'invisible': [('payment_started','=',True)]}"/>
                         <button name="view_payroll_register" type="object" string="Review Pay Slips" attrs="{'invisible': [('payslips','!=',True)]}"/>
                         <button name="print_bank_transfer_report" type="object" string="Print Bank Transfer" attrs="{'invisible': [('payslips','!=',True)]}"/>
                     </group>
@@ -114,8 +114,8 @@
                         <group>
                             <field name="payment_started" readonly="1"/>
                             <group colspan="4" col="8">
-                                <button name="start_payments" type="object" groups="hr_security.group_payroll_manager" string="Start Payments" attrs="{'invisible': [('ps_generated','=',False)]}"/>
-                                <button name="print_payslips" type="object" groups="hr_security.group_payroll_manager" string="Print Pay Slips" attrs="{'invisible': [('ps_generated','=',False)]}"/>
+                                <button name="start_payments" type="object" groups="hr_admin.group_hr_admin" string="Start Payments" attrs="{'invisible': [('ps_generated','=',False)]}"/>
+                                <button name="print_payslips" type="object" groups="hr_admin.group_hr_admin" string="Print Pay Slips" attrs="{'invisible': [('ps_generated','=',False)]}"/>
                             </group>
                         </group>
                         <newline/>
@@ -158,7 +158,7 @@
                     </p>
                     <group>
                         <field name="closed" readonly="1"/>
-                        <button name="close_pay_period" type="object" groups="hr_security.group_payroll_manager" string="Close Pay Period" attrs="{'invisible': [('payment_started','=',False)]}"/>
+                        <button name="close_pay_period" type="object" groups="hr_admin.group_hr_admin" string="Close Pay Period" attrs="{'invisible': [('payment_started','=',False)]}"/>
                     </group>
                 </form>
             </field>
diff --git a/custom/hr_payroll_register/wizard/hr_payroll_register_run.py b/custom/hr_payroll_register/wizard/hr_payroll_register_run.py
index 1f87149..bb3100e 100644
--- a/custom/hr_payroll_register/wizard/hr_payroll_register_run.py
+++ b/custom/hr_payroll_register/wizard/hr_payroll_register_run.py
@@ -3,6 +3,8 @@ from datetime import datetime
 from pytz import timezone
 from odoo import api, fields, models, _
 from odoo.exceptions import Warning
+from odoo.tools import DEFAULT_SERVER_DATETIME_FORMAT as OEDATETIME_FORMAT
+from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as OEDATE_FORMAT
 
 
 class PayrollRegisterRun(models.TransientModel):
@@ -47,14 +49,14 @@ class PayrollRegisterRun(models.TransientModel):
         utc_tz = timezone('UTC')
         utcDTStart = utc_tz.localize(
             datetime.strptime(register_rec.date_start,
-                              '%Y-%m-%d %H:%M:%S'))
+                              OEDATETIME_FORMAT))
         loclDTStart = utcDTStart.astimezone(local_tz)
-        date_start = loclDTStart.strftime('%Y-%m-%d')
+        date_start = loclDTStart.strftime(OEDATE_FORMAT)
         utcDTEnd = utc_tz.localize(
             datetime.strptime(register_rec.date_end,
-                              '%Y-%m-%d %H:%M:%S'))
+                              OEDATETIME_FORMAT))
         loclDTEnd = utcDTEnd.astimezone(local_tz)
-        date_end = loclDTEnd.strftime('%Y-%m-%d')
+        date_end = loclDTEnd.strftime(OEDATE_FORMAT)
         for department_rec in self.department_ids:
             run_res = {
                 'name': department_rec.name,
diff --git a/custom/hr_payslip_addtion/hr_payslip.py b/custom/hr_payslip_addtion/hr_payslip.py
index 63acd62..9fb78db 100644
--- a/custom/hr_payslip_addtion/hr_payslip.py
+++ b/custom/hr_payslip_addtion/hr_payslip.py
@@ -8,6 +8,7 @@
 
 from datetime import datetime
 from odoo import api, fields, models
+from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as OE_DFORMAT
 
 
 class hr_payslip(models.Model):
@@ -60,20 +61,20 @@ class hr_payslip(models.Model):
             if date_list:
                 smallest_date = min(date_list)
                 delta_30 = \
-                    datetime.strptime(date_to, "%Y-%m-%d") - \
-                    datetime.strptime(date_start, "%Y-%m-%d")
+                    datetime.strptime(date_to, OE_DFORMAT) - \
+                    datetime.strptime(date_start, OE_DFORMAT)
                 delta_30_days = delta_30.days + 1
                 delta_30_days = 30 - delta_30_days
                 if smallest_date > date_start:
                     delta = \
-                        datetime.strptime(date_to, "%Y-%m-%d") - \
-                        datetime.strptime(smallest_date, "%Y-%m-%d")
+                        datetime.strptime(date_to, OE_DFORMAT) - \
+                        datetime.strptime(smallest_date, OE_DFORMAT)
                     number_of_days = \
                         (delta.days and delta.days) + 1 + delta_30_days
                 else:
                     delta = \
-                        datetime.strptime(date_to, "%Y-%m-%d") - \
-                        datetime.strptime(date_start, "%Y-%m-%d")
+                        datetime.strptime(date_to, OE_DFORMAT) - \
+                        datetime.strptime(date_start, OE_DFORMAT)
                     number_of_days = \
                         (delta.days and delta.days) + 1 + delta_30_days
                 if number_of_days <= 0:
@@ -81,9 +82,9 @@ class hr_payslip(models.Model):
                 payslip.number_of_days_new_employee = number_of_days
 
     check_employee_start_date = fields.Boolean(
-        compute=_check_employee_start_date, string='New Employee')
+        compute='_check_employee_start_date', string='New Employee')
     first_contract_date = fields.Date(string='First Contract Date',
-                                      compute=_first_contract_date)
+                                      compute='_first_contract_date')
     number_of_days_new_employee = fields.Float(
         string='New Employee Number Of days',
         compute='_number_of_days_new_employee')
diff --git a/custom/hr_payslip_amendment/hr_payslip_amendment.py b/custom/hr_payslip_amendment/hr_payslip_amendment.py
index aa16263..1dee29a 100644
--- a/custom/hr_payslip_amendment/hr_payslip_amendment.py
+++ b/custom/hr_payslip_amendment/hr_payslip_amendment.py
@@ -34,8 +34,8 @@ class hr_payslip_amendment(models.Model):
     def onchange_employee(self):
         if self.employee_id:
             name = "Pay Slip Amendment: " + self.employee_id.name
-            if self.employee_id.employee_no:
-                name += ' (' + self.employee_id.employee_no + ')'
+            if self.employee_id.f_employee_no:
+                name += ' (' + self.employee_id.f_employee_no + ')'
             self.name = name
 
     @api.multi
diff --git a/custom/hr_policy_absence/__manifest__.py b/custom/hr_policy_absence/__manifest__.py
index c0d95d4..6c052b1 100644
--- a/custom/hr_policy_absence/__manifest__.py
+++ b/custom/hr_policy_absence/__manifest__.py
@@ -22,7 +22,7 @@ Define properties of an absence policy, such as:
     'depends': [
         'hr_payroll',
         'hr_holidays',
-        'hr_security',
+        'hr_admin',
         # 'hr_payroll_period',
         'hr_policy_group',
     ],
diff --git a/custom/hr_policy_absence/security/ir.model.access.csv b/custom/hr_policy_absence/security/ir.model.access.csv
index 18fddb5..ec3a7dd 100644
--- a/custom/hr_policy_absence/security/ir.model.access.csv
+++ b/custom/hr_policy_absence/security/ir.model.access.csv
@@ -1,7 +1,7 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_hr_policy_line_ot_hro,access_hr_policy_line_absence,model_hr_policy_line_absence,hr.group_hr_user,1,0,0,0
 access_hr_policy_line_ot_hrm,access_hr_policy_line_absence,model_hr_policy_line_absence,hr.group_hr_manager,1,1,1,1
-access_hr_policy_line_ot_payroll,access_hr_policy_line_absence,model_hr_policy_line_absence,hr_security.group_payroll_manager,1,1,1,1
+access_hr_policy_line_ot_payroll,access_hr_policy_line_absence,model_hr_policy_line_absence,hr_admin.group_hr_admin,1,1,1,1
 access_hr_policy_ot_hro,access_hr_policy_absence,model_hr_policy_absence,hr.group_hr_user,1,0,0,0
 access_hr_policy_ot_hrm,access_hr_policy_absence,model_hr_policy_absence,hr.group_hr_manager,1,1,1,1
-access_hr_policy_ot_payroll,access_hr_policy_absence,model_hr_policy_absence,hr_security.group_payroll_manager,1,1,1,1
+access_hr_policy_ot_payroll,access_hr_policy_absence,model_hr_policy_absence,hr_admin.group_hr_admin,1,1,1,1
diff --git a/custom/hr_policy_accrual/security/ir.model.access.csv b/custom/hr_policy_accrual/security/ir.model.access.csv
index f8f633d..8bd6a77 100644
--- a/custom/hr_policy_accrual/security/ir.model.access.csv
+++ b/custom/hr_policy_accrual/security/ir.model.access.csv
@@ -1,10 +1,10 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_hr_policy_accr_hr,access_hr_policy_accr,model_hr_policy_accrual,hr.group_hr_manager,1,1,1,1
 access_hr_policy_line_accr_hr,access_hr_policy_line_accr,model_hr_policy_line_accrual,hr.group_hr_manager,1,1,1,1
-access_hr_policy_accr_payroll,access_hr_policy_accr,model_hr_policy_accrual,hr_security.group_payroll_user,1,0,0,0
-access_hr_policy_line_accr_payroll,access_hr_policy_line_accr,model_hr_policy_line_accrual,hr_security.group_payroll_user,1,0,0,0
+access_hr_policy_accr_payroll,access_hr_policy_accr,model_hr_policy_accrual,hr_admin.group_hr_admin,1,0,0,0
+access_hr_policy_line_accr_payroll,access_hr_policy_line_accr,model_hr_policy_line_accrual,hr_admin.group_hr_admin,1,0,0,0
 access_hr_policy_line_accr_job_hr,access_hr_policy_line_accr_job,model_hr_policy_line_accrual_job,hr.group_hr_user,1,0,0,0
-access_hr_policy_line_accr_job_payroll,access_hr_policy_line_accr_job,model_hr_policy_line_accrual_job,hr_security.group_payroll_user,1,0,0,0
+access_hr_policy_line_accr_job_payroll,access_hr_policy_line_accr_job,model_hr_policy_line_accrual_job,hr_admin.group_hr_admin,1,0,0,0
 hr_policy_accrual_readds,hr_policy_accrual_readd,model_hr_policy_accrual,base.group_user,1,0,0,0
 hr_policy_group_lines_read,hr_policy_group_line_read,model_hr_policy_line_accrual,base.group_user,1,0,0,0
 hr_policy_group_read_acces,hr_policy_group_read,model_hr_policy_group,base.group_user,1,0,0,0
diff --git a/custom/hr_policy_group/__manifest__.py b/custom/hr_policy_group/__manifest__.py
index 33d033e..1c5b623 100644
--- a/custom/hr_policy_group/__manifest__.py
+++ b/custom/hr_policy_group/__manifest__.py
@@ -20,7 +20,7 @@ Define a collection of policies, such as Overtime, that apply to a contract.
     'depends': [
         'hr_contract',
         'hr_contract_init',
-        'hr_security',
+        'hr_admin',
     ],
     'data': [
         'security/ir.model.access.csv',
diff --git a/custom/hr_policy_group/security/ir.model.access.csv b/custom/hr_policy_group/security/ir.model.access.csv
index 64256e2..5da2e6e 100644
--- a/custom/hr_policy_group/security/ir.model.access.csv
+++ b/custom/hr_policy_group/security/ir.model.access.csv
@@ -1,5 +1,5 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_hr_policy_group_hro,access_hr_policy_group,model_hr_policy_group,hr.group_hr_user,1,0,0,0
 access_hr_policy_group_hrm,access_hr_policy_group,model_hr_policy_group,hr.group_hr_manager,1,1,1,1
-access_hr_policy_group_payrolluser,access_hr_policy_group,model_hr_policy_group,hr_security.group_payroll_user,1,0,0,0
-access_hr_policy_group_payroll,access_hr_policy_group,model_hr_policy_group,hr_security.group_payroll_manager,1,1,1,1
+access_hr_policy_group_payrolluser,access_hr_policy_group,model_hr_policy_group,hr_admin.group_hr_admin,1,0,0,0
+access_hr_policy_group_payroll,access_hr_policy_group,model_hr_policy_group,hr_admin.group_hr_admin,1,1,1,1
diff --git a/custom/hr_policy_ot/__manifest__.py b/custom/hr_policy_ot/__manifest__.py
index cf33f65..d128d3b 100644
--- a/custom/hr_policy_ot/__manifest__.py
+++ b/custom/hr_policy_ot/__manifest__.py
@@ -22,7 +22,7 @@ Define properties of an overtime policy, such as:
     'website': 'http://www.bistasolutions.com',
     'depends': [
         'hr_policy_group',
-        'hr_security',
+        'hr_admin',
     ],
     'init_xml': [
     ],
diff --git a/custom/hr_policy_ot/security/ir.model.access.csv b/custom/hr_policy_ot/security/ir.model.access.csv
index 60da79c..041abfe 100644
--- a/custom/hr_policy_ot/security/ir.model.access.csv
+++ b/custom/hr_policy_ot/security/ir.model.access.csv
@@ -1,9 +1,9 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_hr_policy_line_ot_hro,access_hr_policy_line_ot,model_hr_policy_line_ot,hr.group_hr_user,1,0,0,0
 access_hr_policy_line_ot_hrm,access_hr_policy_line_ot,model_hr_policy_line_ot,hr.group_hr_manager,1,1,1,1
-access_hr_policy_line_ot_payrolluser,access_hr_policy_line_ot,model_hr_policy_line_ot,hr_security.group_payroll_user,1,0,0,0
-access_hr_policy_line_ot_payroll,access_hr_policy_line_ot,model_hr_policy_line_ot,hr_security.group_payroll_manager,1,1,1,1
+access_hr_policy_line_ot_payrolluser,access_hr_policy_line_ot,model_hr_policy_line_ot,hr_admin.group_hr_admin,1,0,0,0
+access_hr_policy_line_ot_payroll,access_hr_policy_line_ot,model_hr_policy_line_ot,hr_admin.group_hr_admin,1,1,1,1
 access_hr_policy_ot_hro,access_hr_policy_line_ot,model_hr_policy_ot,hr.group_hr_user,1,0,0,0
 access_hr_policy_ot_hrm,access_hr_policy_line_ot,model_hr_policy_ot,hr.group_hr_manager,1,1,1,1
-access_hr_policy_ot_payrolluser,access_hr_policy_line_ot,model_hr_policy_ot,hr_security.group_payroll_user,1,0,0,0
-access_hr_policy_ot_payroll,access_hr_policy_line_ot,model_hr_policy_ot,hr_security.group_payroll_manager,1,1,1,1
+access_hr_policy_ot_payrolluser,access_hr_policy_line_ot,model_hr_policy_ot,hr_admin.group_hr_admin,1,0,0,0
+access_hr_policy_ot_payroll,access_hr_policy_line_ot,model_hr_policy_ot,hr_admin.group_hr_admin,1,1,1,1
diff --git a/custom/hr_policy_presence/__manifest__.py b/custom/hr_policy_presence/__manifest__.py
index 04d0d85..5ba1cab 100644
--- a/custom/hr_policy_presence/__manifest__.py
+++ b/custom/hr_policy_presence/__manifest__.py
@@ -22,7 +22,7 @@ Define properties of an employee presence policy, such as:
     'website': 'http://www.bistasolutions.com',
     'depends': [
         'hr_policy_group',
-        'hr_security',
+        'hr_admin',
     ],
     'init_xml': [
     ],
diff --git a/custom/hr_policy_presence/security/ir.model.access.csv b/custom/hr_policy_presence/security/ir.model.access.csv
index af105a0..7a77ee7 100644
--- a/custom/hr_policy_presence/security/ir.model.access.csv
+++ b/custom/hr_policy_presence/security/ir.model.access.csv
@@ -1,7 +1,7 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_hr_policy_line_presence_hro,access_hr_policy_line_presence,model_hr_policy_line_presence,hr.group_hr_user,1,0,0,0
 access_hr_policy_line_presence_hrm,access_hr_policy_line_presence,model_hr_policy_line_presence,hr.group_hr_manager,1,1,1,1
-access_hr_policy_line_presence_payroll,access_hr_policy_line_presence,model_hr_policy_line_presence,hr_security.group_payroll_manager,1,1,1,1
+access_hr_policy_line_presence_payroll,access_hr_policy_line_presence,model_hr_policy_line_presence,hr_admin.group_hr_admin,1,1,1,1
 access_hr_policy_presence_hro,access_hr_policy_presence,model_hr_policy_presence,hr.group_hr_user,1,0,0,0
 access_hr_policy_presence_hrm,access_hr_policy_presence,model_hr_policy_presence,hr.group_hr_manager,1,1,1,1
-access_hr_policy_presence_payroll,access_hr_policy_line_presence,model_hr_policy_presence,hr_security.group_payroll_manager,1,1,1,1
+access_hr_policy_presence_payroll,access_hr_policy_line_presence,model_hr_policy_presence,hr_admin.group_hr_admin,1,1,1,1
diff --git a/custom/hr_recruitment_stages_movement/__manifest__.py b/custom/hr_recruitment_stages_movement/__manifest__.py
index ed06e75..c2964c4 100755
--- a/custom/hr_recruitment_stages_movement/__manifest__.py
+++ b/custom/hr_recruitment_stages_movement/__manifest__.py
@@ -21,7 +21,7 @@ This module used to delete odoo standard stages and create new ones.
         'hr_recruitment_stages',
         'emp_self_services',
         'hr_recruitment_customization',
-        'groups_rules',
+        'hr_admin',
         'hr_contract_grade_level',
         'hr_recruitment_survey',
         # in v8 not available but need to add for v10.
diff --git a/custom/hr_recruitment_stages_movement/models/hr_applicant_email.py b/custom/hr_recruitment_stages_movement/models/hr_applicant_email.py
index 85317fb..a545239 100755
--- a/custom/hr_recruitment_stages_movement/models/hr_applicant_email.py
+++ b/custom/hr_recruitment_stages_movement/models/hr_applicant_email.py
@@ -2,9 +2,12 @@ from odoo import api, fields, models, sql_db, SUPERUSER_ID
 import threading
 import json
 import time
+import logging
 
 SEP = ';'
 
+_logger = logging.getLogger(__name__)
+
 
 class HRApplicantEmail(models.Model):
     _name = "hr.applicant.email"
@@ -63,21 +66,21 @@ class HRApplicantEmailThread(threading.Thread):
     def run(self):
         if self.delay_start:
             time.sleep(10)
-        # _logger.info('Start ' + self.name)
-        mail_msg_obj = self.env['mail.message']
-        subtype_id = self.env['mail.message.subtype'].search([
-            ('name', '=', 'Discussions')], limit=1)
-        mail_msg_obj.create({'subject': self.name + 'Warning',
-                             'body': 'Start ' + self.name,
-                             'model': 'mail.channel',
-                             'res_id': 1,
-                             'message_type': 'notification',
-                             'record_name': 'general',
-                             'subtype_id': subtype_id.id or False,
-                             'channel_ids': [
-                                 (6, 0,
-                                  self.message_channel_ids.ids)
-                             ]})
+        _logger.info('Start ' + self.name)
+        # mail_msg_obj = self.env['mail.message']
+        # subtype_id = self.env['mail.message.subtype'].search([
+        #     ('name', '=', 'Discussions')], limit=1)
+        # mail_msg_obj.create({'subject': self.name + 'Warning',
+        #                      'body': 'Start ' + self.name,
+        #                      'model': 'mail.channel',
+        #                      'res_id': 1,
+        #                      'message_type': 'notification',
+        #                      'record_name': 'general',
+        #                      'subtype_id': subtype_id.id or False,
+        #                      'channel_ids': [
+        #                          (6, 0,
+        #                           self.message_channel_ids.ids)
+        #                      ]})
         db = sql_db.db_connect(self.dbname)
         with db.cursor() as cr:
             with api.Environment.manage():
@@ -91,9 +94,6 @@ class HRApplicantEmailThread(threading.Thread):
                         self.hr_applicant_email_id)
                     counter += 1
                 if not applicant_email:
-                    # _logger.warning(
-                    #     'hr.applicant.email %s not found ' %
-                    #     self.hr_applicant_email_id)
                     mail_msg_obj = self.env['mail.message']
                     subtype_id = self.env['mail.message.subtype'].search([
                         ('name', '=', 'Discussions')], limit=1)
@@ -120,18 +120,18 @@ class HRApplicantEmailThread(threading.Thread):
                     applicant_email.applicant_id.process_send_mail(
                         applicant_email.template_name, emails.split(SEP))
                 except Exception as e:
-                    # _logger.exception(e)
-                    mail_msg_obj = self.env['mail.message']
-                    subtype_id = self.env['mail.message.subtype'].search([
-                        ('name', '=', 'Discussions')], limit=1)
-                    mail_msg_obj.create({'subject': 'Exception',
-                                         'body': e,
-                                         'model': 'mail.channel',
-                                         'res_id': 1,
-                                         'message_type': 'notification',
-                                         'record_name': 'general',
-                                         'subtype_id': subtype_id.id or False
-                                         })
+                    _logger.exception(e)
+                    # mail_msg_obj = self.env['mail.message']
+                    # subtype_id = self.env['mail.message.subtype'].search([
+                    #     ('name', '=', 'Discussions')], limit=1)
+                    # # mail_msg_obj.create({'subject': 'Exception',
+                    #                      'body': e,
+                    #                      'model': 'mail.channel',
+                    #                      'res_id': 1,
+                    #                      'message_type': 'notification',
+                    #                      'record_name': 'general',
+                    #                      'subtype_id': subtype_id.id or False
+                    #                      })
                     error = str(e)
                 applicant_email.write(
                     dict(
@@ -139,18 +139,18 @@ class HRApplicantEmailThread(threading.Thread):
                         processed_time=fields.Datetime.now(),
                         error=error))
                 cr.commit()
-        # _logger.info('Finish ' + self.name)
-        mail_msg_obj = self.env['mail.message']
-        subtype_id = self.env['mail.message.subtype'].search([
-            ('name', '=', 'Discussions')], limit=1)
-        mail_msg_obj.create({'subject': self.name + 'Information',
-                             'body': 'Finish ' + self.name,
-                             'model': 'mail.channel',
-                             'res_id': 1,
-                             'message_type': 'notification',
-                             'record_name': 'general',
-                             'subtype_id': subtype_id.id or False,
-                             'channel_ids': [
-                                 (6, 0,
-                                  self.message_channel_ids.ids)
-                             ]})
+        _logger.info('Finish ' + self.name)
+        # mail_msg_obj = self.env['mail.message']
+        # subtype_id = self.env['mail.message.subtype'].search([
+        #     ('name', '=', 'Discussions')], limit=1)
+        # mail_msg_obj.create({'subject': self.name + 'Information',
+        #                      'body': 'Finish ' + self.name,
+        #                      'model': 'mail.channel',
+        #                      'res_id': 1,
+        #                      'message_type': 'notification',
+        #                      'record_name': 'general',
+        #                      'subtype_id': subtype_id.id or False,
+        #                      'channel_ids': [
+        #                          (6, 0,
+        #                           self.message_channel_ids.ids)
+        #                      ]})
diff --git a/custom/hr_recruitment_stages_movement/models/hr_recruitment_new.py b/custom/hr_recruitment_stages_movement/models/hr_recruitment_new.py
index b88f739..d6bdb6f 100755
--- a/custom/hr_recruitment_stages_movement/models/hr_recruitment_new.py
+++ b/custom/hr_recruitment_stages_movement/models/hr_recruitment_new.py
@@ -3,6 +3,7 @@ from openerp.tools import config
 import threading
 from datetime import datetime
 import time
+from odoo.tools import DEFAULT_SERVER_DATETIME_FORMAT as OE_DTFORMAT
 
 
 def duplication_check(method):
@@ -102,8 +103,8 @@ class hr_applicant(models.Model):
             # Add Log Record
             approval_log_obj = self.env['hr.applicant.logs']
             today = datetime.strptime(
-                time.strftime("%Y-%m-%d %H:%M:%S"),
-                "%Y-%m-%d %H:%M:%S")
+                time.strftime(OE_DTFORMAT),
+                OE_DTFORMAT)
             approval_log_obj.create({'applicant_id': applicant_rec.id,
                                      'name': 'Sr. Manager, TA',
                                      'approval': 'Approved',
@@ -130,8 +131,8 @@ class hr_applicant(models.Model):
             # Add Log Record
             approval_log_obj = self.env['hr.applicant.logs']
             today = datetime.strptime(
-                time.strftime("%Y-%m-%d %H:%M:%S"),
-                "%Y-%m-%d %H:%M:%S")
+                time.strftime(OE_DTFORMAT),
+                OE_DTFORMAT)
             approval_log_obj.create({'applicant_id': applicant_rec.id,
                                      'name': 'Head of Unit',
                                      'approval': 'Approved',
@@ -148,8 +149,8 @@ class hr_applicant(models.Model):
         for applicant_rec in self:
             approval_log_obj = self.env['hr.applicant.logs']
             today = datetime.strptime(
-                time.strftime("%Y-%m-%d %H:%M:%S"),
-                "%Y-%m-%d %H:%M:%S")
+                time.strftime(OE_DTFORMAT),
+                OE_DTFORMAT)
             approval_log_obj.create({'applicant_id': applicant_rec.id,
                                      'name': 'CEO', 'approval': 'Approved',
                                      'user_id': self._uid, 'date': today})
@@ -176,8 +177,8 @@ class hr_applicant(models.Model):
                 action = 'CEO'
             # Add Log Record
             today = datetime.strptime(
-                time.strftime("%Y-%m-%d %H:%M:%S"),
-                "%Y-%m-%d %H:%M:%S")
+                time.strftime(OE_DTFORMAT),
+                OE_DTFORMAT)
             approval_log_obj.create({'applicant_id': applicant_rec.id,
                                      'name': action,
                                      'approval': 'Rejected',
diff --git a/custom/hr_recruitment_stages_movement/security/groups.xml b/custom/hr_recruitment_stages_movement/security/groups.xml
index f82d4dd..529df11 100755
--- a/custom/hr_recruitment_stages_movement/security/groups.xml
+++ b/custom/hr_recruitment_stages_movement/security/groups.xml
@@ -17,7 +17,7 @@
 		
 		<record id="group_rec_manager" model="res.groups">
 			<field name="name">Recruitment Manager</field>
-			<field name="implied_ids" eval="[(4, ref('base.group_user')),(4, ref('groups_rules.group_recuitement_officer'))]" />
+			<field name="implied_ids" eval="[(4, ref('base.group_user')),(4, ref('hr_admin.group_hr_admin'))]" />
 			<field name="menu_access" eval="[(4,ref('menu_crm_case_categ0_act_job22')),(4,ref('menu_crm_case_categ0_act_job3')),
 			(4,ref('hiring_menu_hr_job_position')),(4,ref('menu_hr_rec_reporting')),(4,ref('rec_reporting_menue_'))
 			,(4,ref('menu_hr_recruitment_report_all_rec'))]" />
@@ -26,7 +26,7 @@
 		
 		<record id="group_hr_manager_rec" model="res.groups">
 			<field name="name">HR Manager - Recruitment</field>
-			<field name="implied_ids" eval="[(4, ref('base.group_user')),(4, ref('groups_rules.group_recuitement_officer'))]"  />
+			<field name="implied_ids" eval="[(4, ref('base.group_user')),(4, ref('hr_admin.group_hr_admin'))]"  />
 			<field name="menu_access" eval="[(4,ref('menu_crm_case_categ0_act_job22')),(4,ref('menu_crm_case_categ0_act_job4'))]" /> 
 			<field name="category_id" ref="module_category1_recuirtment"/>
 		</record>
@@ -84,7 +84,7 @@
             (4,ref('group_hr_manager_rec')),(4,ref('group_dep_manager')),
             (4,ref('group_ceo_manager')),(4,ref('group_compensation')),
             (4,ref('group_unit_head')),
-            (4, ref('groups_rules.group_recuitement_officer'))]"/>
+            (4, ref('hr_admin.group_hr_admin'))]"/>
             <field name="domain_force">[(1, '=', 1)]</field>
             <field name="global" eval="False"/>
         </record>
diff --git a/custom/hr_recruitment_stages_movement/security/ir.model.access.csv b/custom/hr_recruitment_stages_movement/security/ir.model.access.csv
index cc26347..6fc534c 100755
--- a/custom/hr_recruitment_stages_movement/security/ir.model.access.csv
+++ b/custom/hr_recruitment_stages_movement/security/ir.model.access.csv
@@ -5,92 +5,92 @@ access_hr_applicant_dep_manager,hr.applicant.dep_manager,hr_recruitment.model_hr
 access_hr_applicant_ceo_manager,hr.applicant.ceo_manager,hr_recruitment.model_hr_applicant,group_ceo_manager,1,1,0,0
 access_hr_applicant_unit_head,access_hr_applicant_unit_head,hr_recruitment.model_hr_applicant,group_unit_head,1,1,0,0
 access_hr_applicant_compensation,access_hr_applicant_compensation,hr_recruitment.model_hr_applicant,group_compensation,1,1,0,0
-access_hr_applicant_rec_officer,access_hr_applicant_rec_officer,hr_recruitment.model_hr_applicant,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_applicant_rec_officer,access_hr_applicant_rec_officer,hr_recruitment.model_hr_applicant,hr_admin.group_hr_admin,1,1,1,1
 access_hr_recruitment_stage_re_manager,access_hr_recruitment_stage_re_manager,hr_recruitment.model_hr_recruitment_stage,group_rec_manager,1,1,1,1
 access_hr_recruitment_stage_hr_manager,access_hr_recruitment_stage_hr_manager,hr_recruitment.model_hr_recruitment_stage,group_hr_manager_rec,1,1,1,1
 access_hr_recruitment_stage_dep_manager,access_hr_recruitment_stage_dep_manager,hr_recruitment.model_hr_recruitment_stage,group_dep_manager,1,1,1,1
 access_hr_recruitment_stage_ceo_manager,access_hr_recruitment_stage_ceo_manager,hr_recruitment.model_hr_recruitment_stage,group_ceo_manager,1,1,1,1
 access_hr_recruitment_stage_unit_head,access_hr_recruitment_stage_unit_head,hr_recruitment.model_hr_recruitment_stage,group_unit_head,1,1,1,1
 access_hr_recruitment_stage_compensation,access_hr_recruitment_stage_compensation,hr_recruitment.model_hr_recruitment_stage,group_compensation,1,1,1,1
-access_hr_recruitment_stage_rec_officer,access_hr_recruitment_stage_rec_officer,hr_recruitment.model_hr_recruitment_stage,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_recruitment_stage_rec_officer,access_hr_recruitment_stage_rec_officer,hr_recruitment.model_hr_recruitment_stage,hr_admin.group_hr_admin,1,1,1,1
 access_hr_recruitment_degree_rec_manager,access_hr_recruitment_degree_rec_manager,hr_recruitment.model_hr_recruitment_degree,group_rec_manager,1,1,1,1
 access_hr_recruitment_degree_hr_manager,access_hr_recruitment_degree_hr_manager,hr_recruitment.model_hr_recruitment_degree,group_hr_manager_rec,1,1,1,1
 access_hr_recruitment_degree_dep_manager,access_hr_recruitment_degree_dep_manager,hr_recruitment.model_hr_recruitment_degree,group_dep_manager,1,1,1,1
 access_hr_recruitment_degree_ceo_manager,access_hr_recruitment_degree_ceo_manager,hr_recruitment.model_hr_recruitment_degree,group_ceo_manager,1,1,1,1
 access_hr_recruitment_degree_unit_head,access_hr_recruitment_degree_unit_head,hr_recruitment.model_hr_recruitment_degree,group_unit_head,1,1,1,1
 access_hr_recruitment_degree_compensation,access_hr_recruitment_degree_compensation,hr_recruitment.model_hr_recruitment_degree,group_compensation,1,1,1,1
-access_hr_recruitment_degree_rec_officer,access_hr_recruitment_degree_rec_officer,hr_recruitment.model_hr_recruitment_degree,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_recruitment_degree_rec_officer,access_hr_recruitment_degree_rec_officer,hr_recruitment.model_hr_recruitment_degree,hr_admin.group_hr_admin,1,1,1,1
 access_res_partner_rec_manager,access_res_partner_rec_manager,base.model_res_partner,group_rec_manager,1,1,1,1
 access_res_partner_hr_manager,access_res_partner_hr_manager,base.model_res_partner,group_hr_manager_rec,1,1,1,1
 access_res_partner_dep_manager,access_res_partner_dep_manager,base.model_res_partner,group_dep_manager,1,1,1,1
 access_res_partner_ceo_manager,access_res_partner_ceo_manager,base.model_res_partner,group_ceo_manager,1,1,1,1
 access_res_partner_unit_head,access_res_partner_unit_head,base.model_res_partner,group_unit_head,1,1,1,1
 access_res_partner_compensation,access_res_partner_compensation,base.model_res_partner,group_compensation,1,1,1,1
-access_res_partner_rec_officer,access_res_partner_rec_officer,base.model_res_partner,groups_rules.group_recuitement_officer,1,1,1,1
+access_res_partner_rec_officer,access_res_partner_rec_officer,base.model_res_partner,hr_admin.group_hr_admin,1,1,1,1
 access_hr_recruitment_source_rec_manager,access_hr_recruitment_source_rec_manager,hr_recruitment.model_hr_recruitment_source,group_rec_manager,1,1,1,1
 access_hr_recruitment_source_hr_manager,access_hr_recruitment_source_hr_manager,hr_recruitment.model_hr_recruitment_source,group_hr_manager_rec,1,1,1,1
 access_hr_recruitment_source_dep_manager,access_hr_recruitment_source_dep_manager,hr_recruitment.model_hr_recruitment_source,group_dep_manager,1,1,1,1
 access_hr_recruitment_source_ceo_manager,access_hr_recruitment_source_ceo_manager,hr_recruitment.model_hr_recruitment_source,group_ceo_manager,1,1,1,1
 access_hr_recruitment_source_unit_head,access_hr_recruitment_source_unit_head,hr_recruitment.model_hr_recruitment_source,group_unit_head,1,1,1,1
 access_hr_recruitment_source_compensation,access_hr_recruitment_source_compensation,hr_recruitment.model_hr_recruitment_source,group_compensation,1,1,1,1
-access_hr_recruitment_source_rec_officer,access_hr_recruitment_source_rec_officer,hr_recruitment.model_hr_recruitment_source,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_recruitment_source_rec_officer,access_hr_recruitment_source_rec_officer,hr_recruitment.model_hr_recruitment_source,hr_admin.group_hr_admin,1,1,1,1
 access_hr_applicant_category_rec_manager,access_hr_applicant_category_rec_manager,hr_recruitment.model_hr_applicant_category,group_rec_manager,1,1,1,1
 access_hr_applicant_category_hr_manager,access_hr_applicant_category_hr_manager,hr_recruitment.model_hr_applicant_category,group_hr_manager_rec,1,1,1,1
 access_hr_applicant_category_dep_manager,access_hr_applicant_category_dep_manager,hr_recruitment.model_hr_applicant_category,group_dep_manager,1,1,1,1
 access_hr_applicant_category_ceo_manager,access_hr_applicant_category_ceo_manager,hr_recruitment.model_hr_applicant_category,group_ceo_manager,1,1,1,1
 access_hr_applicant_category_unit_head,access_hr_applicant_category_unit_head,hr_recruitment.model_hr_applicant_category,group_unit_head,1,1,1,1
 access_hr_applicant_category_compensation,access_hr_applicant_category_compensation,hr_recruitment.model_hr_applicant_category,group_compensation,1,1,1,1
-access_hr_applicant_category_hr_officer,access_hr_applicant_category_hr_officer,hr_recruitment.model_hr_applicant_category,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_applicant_category_hr_officer,access_hr_applicant_category_hr_officer,hr_recruitment.model_hr_applicant_category,hr_admin.group_hr_admin,1,1,1,1
 access_hr_applicant_references_rec_manager,access_hr_applicant_references_rec_manager,hr_recruitment_customization.model_hr_applicant_references,group_rec_manager,1,1,1,1
 access_hr_applicant_references_hr_manager,access_hr_applicant_references_hr_manager,hr_recruitment_customization.model_hr_applicant_references,group_hr_manager_rec,1,1,1,1
 access_hr_applicant_references_dep_manager,access_hr_applicant_references_dep_manager,hr_recruitment_customization.model_hr_applicant_references,group_dep_manager,1,1,1,1
 access_hr_applicant_references_ceo_manager,access_hr_applicant_references_ceo_manager,hr_recruitment_customization.model_hr_applicant_references,group_ceo_manager,1,1,1,1
 access_hr_applicant_references_unit_head,access_hr_applicant_references_unit_head,hr_recruitment_customization.model_hr_applicant_references,group_unit_head,1,1,1,1
 access_hr_applicant_references_compensation,access_hr_applicant_references_compensation,hr_recruitment_customization.model_hr_applicant_references,group_compensation,1,1,1,1
-access_hr_applicant_references_hr_officer,access_hr_applicant_references_hr_officer,hr_recruitment_customization.model_hr_applicant_references,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_applicant_references_hr_officer,access_hr_applicant_references_hr_officer,hr_recruitment_customization.model_hr_applicant_references,hr_admin.group_hr_admin,1,1,1,1
 access_hr_applicant_logs_rec_manager,access_hr_applicant_logs_rec_manager,model_hr_applicant_logs,group_rec_manager,1,1,1,1
 access_hr_applicant_logs_hr_manager,access_hr_applicant_logs_hr_manager,model_hr_applicant_logs,group_hr_manager_rec,1,1,1,1
 access_hr_applicant_logs_dep_manager,access_hr_applicant_logs_dep_manager,model_hr_applicant_logs,group_dep_manager,1,1,1,1
 access_hr_applicant_logs_ceo_manager,access_hr_applicant_logs_ceo_manager,model_hr_applicant_logs,group_ceo_manager,1,1,1,1
 access_hr_applicant_logs_unit_head,access_hr_applicant_logs_unit_head,model_hr_applicant_logs,group_unit_head,1,1,1,1
 access_hr_applicant_logs_group_compensation,access_hr_applicant_logs_group_compensation,model_hr_applicant_logs,group_compensation,1,1,1,1
-access_hr_applicant_logs_hr_officer,access_hr_applicant_logs_hr_officer,model_hr_applicant_logs,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_applicant_logs_hr_officer,access_hr_applicant_logs_hr_officer,model_hr_applicant_logs,hr_admin.group_hr_admin,1,1,1,1
 access_grade_level_rec_manager,access_grade_level_rec_manager,hr_contract_grade_level.model_grade_level,group_rec_manager,1,1,1,1
 access_grade_level_hr_manager,access_grade_level_hr_manager,hr_contract_grade_level.model_grade_level,group_hr_manager_rec,1,1,1,1
 access_grade_level_dep_manager,access_grade_level_dep_manager,hr_contract_grade_level.model_grade_level,group_dep_manager,1,1,1,1
 access_grade_level_ceo_manager,access_grade_level_ceo_manager,hr_contract_grade_level.model_grade_level,group_ceo_manager,1,1,1,1
 access_grade_level_unit_head,access_grade_level_unit_head,hr_contract_grade_level.model_grade_level,group_unit_head,1,1,1,1
 access_grade_level_compensation,access_grade_level_compensation,hr_contract_grade_level.model_grade_level,group_compensation,1,1,1,1
-access_grade_level_hr_officer,access_grade_level_hr_officer,hr_contract_grade_level.model_grade_level,groups_rules.group_recuitement_officer,1,1,1,1
+access_grade_level_hr_officer,access_grade_level_hr_officer,hr_contract_grade_level.model_grade_level,hr_admin.group_hr_admin,1,1,1,1
 access_hr_applicant_stage_logs_rec_manager,access_hr_applicant_stage_logs_rec_manager,model_hr_applicant_stage_logs,group_rec_manager,1,1,1,1
 access_hr_applicant_stage_logs_hr_manager,access_hr_applicant_stage_logs_hr_manager,model_hr_applicant_stage_logs,group_hr_manager_rec,1,1,1,1
 access_hr_applicant_stage_logs_dep_manager,access_hr_applicant_stage_logs_dep_manager,model_hr_applicant_stage_logs,group_dep_manager,1,1,1,1
 access_hr_applicant_stage_logs_ceo_manager,access_hr_applicant_stage_logs_ceo_manager,model_hr_applicant_stage_logs,group_ceo_manager,1,1,1,1
 access_hr_applicant_stage_logs_unit_head,access_hr_applicant_stage_logs_unit_head,model_hr_applicant_stage_logs,group_unit_head,1,1,1,1
 access_hr_applicant_stage_logs_compensation,access_hr_applicant_stage_logs_compensation,model_hr_applicant_stage_logs,group_compensation,1,1,1,1
-access_hr_applicant_stage_logs_hr_officer,access_hr_applicant_stage_logs_hr_officer,model_hr_applicant_stage_logs,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_applicant_stage_logs_hr_officer,access_hr_applicant_stage_logs_hr_officer,model_hr_applicant_stage_logs,hr_admin.group_hr_admin,1,1,1,1
 access_hr_applicant_assessment_tem_rec_manager,access_hr_applicant_assessment_tem_rec_manager,model_hr_applicant_assessment_template,group_rec_manager,1,1,1,1
 access_hr_applicant_assessment_tem_hr_manager,access_hr_applicant_assessment_tem_hr_manager,model_hr_applicant_assessment_template,group_hr_manager_rec,1,1,1,1
 access_hr_applicant_assessment_tem_dep_manager,access_hr_applicant_assessment_tem_dep_manager,model_hr_applicant_assessment_template,group_dep_manager,1,1,1,1
 access_hr_applicant_assessment_tem_ceo_manager,access_hr_applicant_assessment_tem_ceo_manager,model_hr_applicant_assessment_template,group_ceo_manager,1,1,1,1
 access_hr_applicant_assessment_tem_unit_head,access_hr_applicant_assessment_tem_unit_head,model_hr_applicant_assessment_template,group_unit_head,1,1,1,1
 access_hr_applicant_assessment_tem_compensation,access_hr_applicant_assessment_tem_compensation,model_hr_applicant_assessment_template,group_compensation,1,1,1,1
-access_hr_applicant_assessment_tem_hr_officer,access_hr_applicant_assessment_tem_hr_officer,model_hr_applicant_assessment_template,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_applicant_assessment_tem_hr_officer,access_hr_applicant_assessment_tem_hr_officer,model_hr_applicant_assessment_template,hr_admin.group_hr_admin,1,1,1,1
 access_hr_applicant_experience_rec_manager,access_hr_applicant_experience_rec_manager,model_hr_applicant_experience,group_rec_manager,1,1,1,1
 access_hr_applicant_experience_hr_manager,access_hr_applicant_experience_hr_manager,model_hr_applicant_experience,group_hr_manager_rec,1,1,1,1
 access_hr_applicant_experience_dep_manager,access_hr_applicant_experience_dep_manager,model_hr_applicant_experience,group_dep_manager,1,1,1,1
 access_hr_applicant_experience_ceo_manager,access_hr_applicant_experience_ceo_manager,model_hr_applicant_experience,group_ceo_manager,1,1,1,1
 access_hr_applicant_experience_unit_head,access_hr_applicant_experience_unit_head,model_hr_applicant_experience,group_unit_head,1,1,1,1
 access_hr_applicant_experience_compensation,access_hr_applicant_experience_compensation,model_hr_applicant_experience,group_compensation,1,1,1,1
-access_hr_applicant_experience_hr_officer,access_hr_applicant_experience_hr_officer,model_hr_applicant_experience,groups_rules.group_recuitement_officer,1,1,1,1
-access_hr_qualifications_hr_officer,access_hr_qualifications_hr_officer,emp_self_services.model_tamkeen_hr_qualifications,groups_rules.group_recuitement_officer,1,1,1,0
-access_hr_experience_hr_officer,access_hr_experience_hr_officer,emp_self_services.model_tamkeen_hr_experiences,groups_rules.group_recuitement_officer,1,1,1,0
+access_hr_applicant_experience_hr_officer,access_hr_applicant_experience_hr_officer,model_hr_applicant_experience,hr_admin.group_hr_admin,1,1,1,1
+access_hr_qualifications_hr_officer,access_hr_qualifications_hr_officer,emp_self_services.model_tamkeen_hr_qualifications,hr_admin.group_hr_admin,1,1,1,0
+access_hr_experience_hr_officer,access_hr_experience_hr_officer,emp_self_services.model_tamkeen_hr_experiences,hr_admin.group_hr_admin,1,1,1,0
 access_hr_job_rec_manager,access_hr_job_rec_manager,hr_recruitment.model_hr_job,group_rec_manager,1,1,1,1
 access_hr_applicant_major_dep_manager,access_hr_applicant_major_dep_manager,hr_recruitment_customization.model_hr_applicant_major,group_dep_manager,1,1,1,1
 access_hr_applicant_major_ceo_manager,access_hr_applicant_major_ceo_manager,hr_recruitment_customization.model_hr_applicant_major,group_ceo_manager,1,1,1,1
 access_hr_applicant_major_unit_head,access_hr_applicant_major_unit_head,hr_recruitment_customization.model_hr_applicant_major,group_unit_head,1,1,1,1
 access_hr_applicant_major_compensation,access_hr_applicant_major_compensation,hr_recruitment_customization.model_hr_applicant_major,group_compensation,1,1,1,1
-access_hr_applicant_major_hr_officer,access_hr_applicant_major_hr_officer,hr_recruitment_customization.model_hr_applicant_major,groups_rules.group_recuitement_officer,1,1,1,1
+access_hr_applicant_major_hr_officer,access_hr_applicant_major_hr_officer,hr_recruitment_customization.model_hr_applicant_major,hr_admin.group_hr_admin,1,1,1,1
 access_rec_report_rec_manager,access_rec_report_rec_manager,hr_recruitment.model_hr_recruitment_report,group_rec_manager,1,1,1,0
 access_rec_report_rec_ceo,access_rec_report_rec_ceo,hr_recruitment.model_hr_recruitment_report,group_ceo_manager,1,1,1,0
 access_hr_applicant_hr_user,access_hr_applicant_hr_user,hr_recruitment.model_hr_applicant,hr.group_hr_user,1,0,0,0
diff --git a/custom/hr_recruitment_stages_movement/views/hr_recruitment_new_view.xml b/custom/hr_recruitment_stages_movement/views/hr_recruitment_new_view.xml
index d2f389c..b8a24bd 100755
--- a/custom/hr_recruitment_stages_movement/views/hr_recruitment_new_view.xml
+++ b/custom/hr_recruitment_stages_movement/views/hr_recruitment_new_view.xml
@@ -17,17 +17,17 @@
                             class="oe_highlight"
                             attrs="{'invisible': ['|',('state', 'not in', ['approved']),'|',
                                 ('stage_name_invisible', 'not in', ['Under Job Offer','Job Offer Extended'])]}"
-                            groups="groups_rules.group_recuitement_officer"/>
+                            groups="hr_admin.group_hr_admin"/>
                     <button name="send_off_letter" string="Send Offer Letter"
                             type="object" class="oe_highlight"
                             attrs="{'invisible': ['|',('state', 'not in', ['approved']),'|',
                                 ('stage_name_invisible', 'not in', ['Under Job Offer','Job Offer Extended'])]}"
-                            groups="groups_rules.group_recuitement_officer"/>
+                            groups="hr_admin.group_hr_admin"/>
                     <button name="send_off_letter" string="Resend Offer Letter" type="object"
                             class="oe_highlight"
                             attrs="{'invisible': ['|',('state', 'not in', ['send_offer']),'|',
                                 ('stage_name_invisible', 'not in', ['Under Job Offer','Job Offer Extended','Job Offer Accepted'])]}"
-                            groups="groups_rules.group_recuitement_officer"/>
+                            groups="hr_admin.group_hr_admin"/>
                     <button name="rest_to_draft_fun" string="Reset to Draft" type="object"
                             class="oe_highlight"
                             attrs="{'invisible': ['|',('stage_name_invisible', 'not in', ['Under Job Offer']),
@@ -37,7 +37,7 @@
                             string="Send for Approval" type="object"
                             class="oe_highlight"
                             attrs="{'invisible': ['|',('state', 'not in', ['draft']),('stage_name_invisible', 'not in', ['Under Job Offer'])]}"
-                            groups="groups_rules.group_recuitement_officer"
+                            groups="hr_admin.group_hr_admin"
                     />
                     <button name="candidate_reject" string="Reject Candidate"
                             type="object" class="oe_highlight"
@@ -45,7 +45,7 @@
                             attrs="{'invisible': ['|',
                                 ('stage_name_invisible', 'in', ['Candidate Rejected']),
                                 ('state', 'not in', ['draft'])]}"
-                            groups="groups_rules.group_recuitement_officer"/>
+                            groups="hr_admin.group_hr_admin"/>
 
                     <!-- Compensation and Benefits -->
                     <button name="comp_benefit_confirm" string="Confirm"
@@ -194,7 +194,7 @@
                     <notebook>
                         <page string="General" >
                             <group >
-                                <group string="Personal Information">
+                                    <group string="Personal Information">
                                     <field name="previous_stage_id"
                                            invisible="1"/>
                                     <field name="partner_id"
@@ -297,7 +297,7 @@
                                     </div>
                                     <field name="maximum_salary"
                                            attrs="{'readonly': [('state', '!=', 'draft')]}"
-                                           groups="groups_rules.group_recuitement_officer,hr_recruitment_stages_movement.group_ceo_manager,
+                                           groups="hr_admin.group_hr_admin,hr_recruitment_stages_movement.group_ceo_manager,
                                    hr_recruitment_stages_movement.group_compensation" />
                                     <label for="salary_proposed"/>
                                     <div>
@@ -318,7 +318,7 @@
                                            attrs="{'readonly': [('state', '!=', 'draft')]}"/>
                                     <field name="annual_leave_days" attrs="{'readonly': [('state', '!=', 'draft')]}"/>
                                 </group>
-                                <group string="Compensation and Benefits" groups="groups_rules.group_recuitement_officer,
+                                <group string="Compensation and Benefits" groups="hr_admin.group_hr_admin,
                                 hr_recruitment_stages_movement.group_ceo_manager,hr_recruitment_stages_movement.group_compensation">
                                     <field name="compensation_benefits" readonly="1" />
                                     <field name="comp_ben_comments"
diff --git a/custom/hr_saudi_filed/models/hr_saudi.py b/custom/hr_saudi_filed/models/hr_saudi.py
index bf847fc..4bbefc5 100644
--- a/custom/hr_saudi_filed/models/hr_saudi.py
+++ b/custom/hr_saudi_filed/models/hr_saudi.py
@@ -31,7 +31,12 @@ class hr_employee(models.Model):
                 leaves_bal = holiday_status_id.get_days(self.id)
                 sub_id.remaining_leaves = leaves_bal['remaining_leaves']
             else:
-                sub_id.remaining_leaves = 0
+                sub_id.remaining_leaves = 0.0
+
+    @api.multi
+    def _get_annual_leave_balance(self):
+        for sub_id in self:
+            sub_id.remaining_leaves = 0
 
     @api.multi
     def _leaves_count(self):
diff --git a/custom/hr_saudi_filed/views/hr_saudi_view.xml b/custom/hr_saudi_filed/views/hr_saudi_view.xml
index 19adc95..f6e296d 100644
--- a/custom/hr_saudi_filed/views/hr_saudi_view.xml
+++ b/custom/hr_saudi_filed/views/hr_saudi_view.xml
@@ -1,94 +1,94 @@
 <?xml version="1.0"?>
 <odoo>
-	<data>
-		<record id="hr_holidays.act_hr_employee_holiday_request"
-				model="ir.actions.act_window">
-			<field name="domain">
-				[('type','=','remove'),('state','=','validate')]
-			</field>
-		</record>
-
-		<record id="remove_bank_account_id" model="ir.ui.view">
-			<field name="name">hr.employee.remove</field>
-			<field name="model">hr.employee</field>
-			<field name="inherit_id"
-				   ref="hr_contract.hr_hr_employee_view_form2" />
-			<field name="arch" type="xml">
-				<data>
-					<xpath expr="//field[@name='bank_account_id']"
-						   position="replace">
-					</xpath>
-
-					<xpath expr="//button[@name='%(hr_contract.act_hr_employee_2_hr_contract)d']" position="attributes">
-						<attribute name="groups">hr.group_hr_user</attribute>
-					</xpath>
-				</data>
-			</field>
-		</record>
-
-		<record model="ir.ui.view" id="hr_saudi_inherit">
-			<field name="name">hr.employee.saudi</field>
-			<field name="model">hr.employee</field>
-			<field name="inherit_id" ref="hr.view_employee_form" />
-			<field name="arch" type="xml">
-				<field name="name" position="after">
-					<field name="current_country_code" invisible="1"/>
-					<label for="name_eng" class="oe_edit_only">
-						Arabic name
-					</label>
-					<field name="name_eng" required="1"/>
-				</field>
-				<field name="category_ids" position="replace"/>
-				<xpath expr="//h1" position="after">
-					<label for="category_ids" class="oe_edit_only">
-						Tags
-					</label>
-					<field name="category_ids" widget="many2many_tags"
-						   placeholder="e.g. Part Time"
-						   options="{'no_create_edit': True}"
-						   groups="hr.group_hr_user"/>
+    <data>
+        <record id="hr_holidays.act_hr_employee_holiday_request"
+                model="ir.actions.act_window">
+            <field name="domain">
+                [('type','=','remove'),('state','=','validate')]
+            </field>
+        </record>
+
+        <record id="remove_bank_account_id" model="ir.ui.view">
+            <field name="name">hr.employee.remove</field>
+            <field name="model">hr.employee</field>
+            <field name="inherit_id"
+                   ref="hr_contract.hr_hr_employee_view_form2" />
+            <field name="arch" type="xml">
+                <data>
+                    <xpath expr="//field[@name='bank_account_id']"
+                           position="replace">
+                    </xpath>
+
+                    <xpath expr="//button[@name='%(hr_contract.act_hr_employee_2_hr_contract)d']" position="attributes">
+                        <attribute name="groups">hr.group_hr_user</attribute>
+                    </xpath>
+                </data>
+            </field>
+        </record>
+
+        <record model="ir.ui.view" id="hr_saudi_inherit">
+            <field name="name">hr.employee.saudi</field>
+            <field name="model">hr.employee</field>
+            <field name="inherit_id" ref="hr.view_employee_form" />
+            <field name="arch" type="xml">
+                <field name="name" position="after">
+                    <field name="current_country_code" invisible="1"/>
+                    <label for="name_eng" class="oe_edit_only">
+                        Arabic name
+                    </label>
+                    <field name="name_eng" required="1"/>
+                </field>
+                <field name="category_ids" position="replace"/>
+                <xpath expr="//h1" position="after">
+                    <label for="category_ids" class="oe_edit_only">
+                        Tags
+                    </label>
+                    <field name="category_ids" widget="many2many_tags"
+                           placeholder="e.g. Part Time"
+                           options="{'no_create_edit': True}"
+                           groups="hr.group_hr_user"/>
                     <label for="f_employee_no" class="oe_edit_only" />
                     <h2>
                         <field name="f_employee_no" />
                     </h2>
-				</xpath>
-				<xpath expr="//field[@name='job_id']" position="attributes">
-					<attribute name="readonly">True</attribute>
-				</xpath>
-				<field name="passport_id" position="replace">
-				</field>
-
-				<field name="coach_id" position="attributes">
-				<attribute name="invisible">1</attribute>
-				</field>
-
-				<field name="identification_id" position="attributes">
-					<attribute
-							name="attrs">{'required':
-						[('current_country_code','=','SA')],
-						'invisible':[('current_country_code','!=','SA')]}
-					</attribute>
-				</field>
+                </xpath>
+                <xpath expr="//field[@name='job_id']" position="attributes">
+                    <attribute name="readonly">True</attribute>
+                </xpath>
+                <field name="passport_id" position="replace">
+                </field>
+
+                <field name="coach_id" position="attributes">
+                    <attribute name="invisible">1</attribute>
+                </field>
 
-				<xpath expr="//field[@name='identification_id']" position="after">
-					<field name="id_exp_date" attrs="{'required':
+                <field name="identification_id" position="attributes">
+                    <attribute
+                            name="attrs">{'required':
+                        [('current_country_code','=','SA')],
+                        'invisible':[('current_country_code','!=','SA')]}
+                    </attribute>
+                </field>
+
+                <xpath expr="//field[@name='identification_id']" position="after">
+                    <field name="id_exp_date" attrs="{'required':
 						[('current_country_code','=','SA')],
 						'invisible':[('current_country_code','!=','SA')]}"/>
-					<field name="id_exp_date_hijri" placeholder="e.g: 1417-10-20" attrs="{'required':
+                    <field name="id_exp_date_hijri" placeholder="e.g: 1417-10-20" attrs="{'required':
 						[('current_country_code','=','SA')],
 						'invisible':[('current_country_code','!=','SA')]}"/>
-					<field name="gosi_number"
-						   attrs="{'invisible':[('current_country_code','!=','SA')]}"/>
-					<field name="bankorcash" />
-					<field name="bank_locked" />
-					<field name="bank_locked_start_date" attrs="{'invisible':[('bank_locked','=',False)],'required':[('bank_locked','=',True)]}"/>
-					<field name="bank_id" attrs="{'invisible':[('bankorcash','not in',['intrabank','thirdparty'])]}" />
-					<field name="bank_account" attrs="{'invisible':[('bankorcash','not in',['intrabank','thirdparty'])]}" />
-				</xpath>
-
-				<xpath expr="//page[2]/group/group" position="after">
-					<group string="Passport Information">
-						<field name="passport_id" attrs="{'required':
+                    <field name="gosi_number"
+                           attrs="{'invisible':[('current_country_code','!=','SA')]}"/>
+                    <field name="bankorcash" />
+                    <field name="bank_locked" />
+                    <field name="bank_locked_start_date" attrs="{'invisible':[('bank_locked','=',False)],'required':[('bank_locked','=',True)]}"/>
+                    <field name="bank_id" attrs="{'invisible':[('bankorcash','not in',['intrabank','thirdparty'])]}" />
+                    <field name="bank_account" attrs="{'invisible':[('bankorcash','not in',['intrabank','thirdparty'])]}" />
+                </xpath>
+
+                <xpath expr="//page[2]/group/group" position="after">
+                    <group string="Passport Information">
+                        <field name="passport_id" attrs="{'required':
 						[('current_country_code','!=','SA')]}" groups="hr.group_hr_user"/>
                         <field name="passport_exp_date" attrs="{'required':
 						[('current_country_code','!=','SA')]}" />
@@ -154,24 +154,24 @@
                     <field name="spouse_iqama_exp_date" />
                 </xpath>
                 <!--<xpath expr="//field[@name='fam_father']" position="before">-->
-                    <!--<separator string="Father" colspan="4"/>-->
+                <!--<separator string="Father" colspan="4"/>-->
                 <!--</xpath>-->
                 <xpath expr="//field[@name='fam_father']" position="after">
-                        <field name="fam_father_arabic" />
-                        <field name="fam_father_passport_id" />
-                        <field name="fam_father_passport_exp_date" />
-                        <field name="fam_father_iqama_number" />
-                        <field name="fam_father_iqama_exp_date" />
+                    <field name="fam_father_arabic" />
+                    <field name="fam_father_passport_id" />
+                    <field name="fam_father_passport_exp_date" />
+                    <field name="fam_father_iqama_number" />
+                    <field name="fam_father_iqama_exp_date" />
                 </xpath>
                 <!--<xpath expr="//field[@name='fam_mother']" position="before">-->
-                    <!--<separator colspan="4" string="Mother" />-->
+                <!--<separator colspan="4" string="Mother" />-->
                 <!--</xpath>-->
                 <xpath expr="//field[@name='fam_mother']" position="after">
-                        <field name="fam_mother_arabic" />
-                        <field name="fam_mother_passport_id" />
-                        <field name="fam_mother_passport_exp_date" />
-                        <field name="fam_mother_iqama_number" />
-                        <field name="fam_mother_iqama_exp_date" />
+                    <field name="fam_mother_arabic" />
+                    <field name="fam_mother_passport_id" />
+                    <field name="fam_mother_passport_exp_date" />
+                    <field name="fam_mother_iqama_number" />
+                    <field name="fam_mother_iqama_exp_date" />
                 </xpath>
 
                 <xpath expr="//field[@name='fam_children_ids']" position="replace">
@@ -202,5 +202,6 @@
                 </xpath>
             </field>
         </record>
+
     </data>
 </odoo>
diff --git a/custom/hr_schedule/__manifest__.py b/custom/hr_schedule/__manifest__.py
index 359162a..3bf473c 100644
--- a/custom/hr_schedule/__manifest__.py
+++ b/custom/hr_schedule/__manifest__.py
@@ -16,7 +16,7 @@ Easily create, manage, and track employee schedules.
         'hr_contract_init',
         'hr_employee_state',
         'hr_holidays',
-        'hr_security',
+        'hr_admin',
         'mail',
         'hr'
     ],
diff --git a/custom/hr_schedule/models/hr_schedule.py b/custom/hr_schedule/models/hr_schedule.py
index 6402283..a5e64af 100644
--- a/custom/hr_schedule/models/hr_schedule.py
+++ b/custom/hr_schedule/models/hr_schedule.py
@@ -90,16 +90,16 @@ class HrScheduleAlert(models.Model):
         # XXX - Someone who cares about DST should fix ths
         #
         dtToday = datetime.strptime(
-            datetime.now().strftime('%Y-%m-%d') +
+            datetime.now().strftime(OE_DFORMAT) +
             ' 00:00:00',
-            '%Y-%m-%d %H:%M:%S')
+            OE_DTFORMAT)
         lcldtToday = timezone(
             self.env.user.tz and self.env.user.tz or 'UTC').localize(
             dtToday, is_dst=False)
         utcdtToday = lcldtToday.astimezone(utc)
         utcdtYesterday = utcdtToday + relativedelta(days=-1)
-        strToday = utcdtToday.strftime('%Y-%m-%d %H:%M:%S')
-        strYesterday = utcdtYesterday.strftime('%Y-%m-%d %H:%M:%S')
+        strToday = utcdtToday.strftime(OE_DTFORMAT)
+        strYesterday = utcdtYesterday.strftime(OE_DTFORMAT)
         dept_rec = dept_obj.search([])
         for dept in dept_rec:
             for employee in dept.member_ids:
@@ -184,13 +184,13 @@ class HrScheduleAlert(models.Model):
         detail_obj = self.env['hr.schedule.detail']
         # XXX - Someone who cares about DST should fix ths
         #
-        dt = datetime.strptime(strDay + ' 00:00:00', '%Y-%m-%d %H:%M:%S')
+        dt = datetime.strptime(strDay + ' 00:00:00', OE_DTFORMAT)
         if self.env.user and self.env.user.tz:
             lcldt = timezone(self.env.user.tz).localize(dt, is_dst=False)
             utcdt = lcldt.astimezone(utc)
             utcdtNextDay = utcdt + relativedelta(days=+1)
-            strToday = utcdt.strftime('%Y-%m-%d %H:%M:%S')
-            strNextDay = utcdtNextDay.strftime('%Y-%m-%d %H:%M:%S')
+            strToday = utcdt.strftime(OE_DTFORMAT)
+            strNextDay = utcdtNextDay.strftime(OE_DTFORMAT)
 
             # Get schedule and attendance records for the employee for the day
             sched_detail_rec = detail_obj.search(
@@ -426,20 +426,20 @@ class HrSchedule(models.Model):
     def onchange_employee_start_date(self):
         dStart = False
         if self.date_start:
-            dStart = datetime.strptime(self.date_start, '%Y-%m-%d').date()
+            dStart = datetime.strptime(self.date_start, OE_DFORMAT).date()
             # The schedule must start on a Monday
             if dStart.weekday() != 0:
                 self.date_start = False
                 self.date_end = False
             else:
                 dEnd = dStart + relativedelta(days=+6)
-                self.date_end = dEnd.strftime('%Y-%m-%d')
+                self.date_end = dEnd.strftime(OE_DFORMAT)
         if self.employee_id:
             if self.employee_id.name:
                 self.name = self.employee_id.name
                 if dStart:
                     self.name += ': ' + \
-                                 dStart.strftime('%Y-%m-%d') + ' Wk ' + \
+                                 dStart.strftime(OE_DFORMAT) + ' Wk ' + \
                                  str(dStart.isocalendar()[1])
             if self.employee_id.contract_id and \
                     self.employee_id.contract_id.schedule_template_id:
@@ -500,8 +500,8 @@ class HrSchedule(models.Model):
                                          'subtype_id': subtype_id.id or False,
                                          })
                 local_tz = timezone(self.env.user.tz)
-                dCount = datetime.strptime(rec.date_start, '%Y-%m-%d').date()
-                dCountEnd = datetime.strptime(rec.date_end, '%Y-%m-%d').date()
+                dCount = datetime.strptime(rec.date_start, OE_DFORMAT).date()
+                dCountEnd = datetime.strptime(rec.date_end, OE_DFORMAT).date()
                 dWeekStart = dCount
                 dSchedStart = dCount
                 while dCount <= dCountEnd:
@@ -531,13 +531,13 @@ class HrSchedule(models.Model):
                         # XXX - Someone affected by DST should fix this
                         #
                         dtStart = datetime.strptime(
-                            dWeekStart.strftime('%Y-%m-%d') +
+                            dWeekStart.strftime(OE_DFORMAT) +
                             ' ' +
                             hour +
                             ':' +
                             minute +
                             ':00',
-                            '%Y-%m-%d %H:%M:%S')
+                            OE_DTFORMAT)
                         locldtStart = local_tz.localize(dtStart, is_dst=False)
                         utcdtStart = locldtStart.astimezone(utc)
                         if worktime.dayofweek != 0:
@@ -612,9 +612,9 @@ class HrSchedule(models.Model):
                                 'dayofweek': worktime.dayofweek,
                                 'day': dDay,
                                 'date_start': utcdtStart.strftime(
-                                    '%Y-%m-%d %H:%M:%S'),
+                                    OE_DTFORMAT),
                                 'date_end': utcdtEnd.strftime(
-                                    '%Y-%m-%d %H:%M:%S'),
+                                    OE_DTFORMAT),
                                 'schedule_id': rec.id,
                             }
                             rec.write({'detail_ids': [(0, 0, val)]})
@@ -660,12 +660,12 @@ class HrSchedule(models.Model):
                         ee.contract_id.state != 'open':
                     continue
                 sched = {
-                    'name': ee.name + ': ' + dStart.strftime('%Y-%m-%d') +
+                    'name': ee.name + ': ' + dStart.strftime(OE_DFORMAT) +
                     ' Wk ' + str(dStart.isocalendar()[1]),
                     'employee_id': ee.id,
                     'template_id': ee.contract_id.schedule_template_id.id,
-                    'date_start': dStart.strftime('%Y-%m-%d'),
-                    'date_end': dEnd.strftime('%Y-%m-%d'),
+                    'date_start': dStart.strftime(OE_DFORMAT),
+                    'date_end': dEnd.strftime(OE_DFORMAT),
                 }
                 self.create(sched)
 
@@ -861,8 +861,8 @@ class schedule_detail(models.Model):
             # this stage. So, use a fallback and compute the day ourselves.
             day = sched_detail.day
             if not sched_detail.day:
-                day = time.strftime('%Y-%m-%d', time.strptime(
-                    sched_detail.date_start, '%Y-%m-%d %H:%M:%S'))
+                day = time.strftime(OE_DFORMAT, time.strptime(
+                    sched_detail.date_start, OE_DTFORMAT))
             key = str(sched_detail.schedule_id.employee_id.id) + day
             if key not in sched_keys:
                 scheds.append((sched_detail.schedule_id.employee_id.id, day))
@@ -886,12 +886,12 @@ class schedule_detail(models.Model):
 
             # XXX - Someone who cares about DST should fix this
             #
-            dt = datetime.strptime(strDay + ' 00:00:00', '%Y-%m-%d %H:%M:%S')
+            dt = datetime.strptime(strDay + ' 00:00:00', OE_DTFORMAT)
             lcldt = timezone(self.env.user.tz).localize(dt, is_dst=False)
             utcdt = lcldt.astimezone(utc)
             utcdtNextDay = utcdt + relativedelta(days=+1)
-            strDayStart = utcdt.strftime('%Y-%m-%d %H:%M:%S')
-            strNextDay = utcdtNextDay.strftime('%Y-%m-%d %H:%M:%S')
+            strDayStart = utcdt.strftime(OE_DTFORMAT)
+            strNextDay = utcdtNextDay.strftime(OE_DTFORMAT)
 
             alert_rec = alert_obj.search([('employee_id', '=', ee_id),
                                           '&', (
@@ -1001,10 +1001,10 @@ class hr_schedule_alert_rule(models.Model):
                 if punch.check_in:
                     isMatch = False
                     dtPunch = datetime.strptime(
-                        punch.check_in, '%Y-%m-%d %H:%M:%S')
+                        punch.check_in, OE_DTFORMAT)
                     for detail in sched_details:
                         dtSched = datetime.strptime(
-                            detail.date_start, '%Y-%m-%d %H:%M:%S')
+                            detail.date_start, OE_DTFORMAT)
                         difference = 0
                         if dtSched >= dtPunch:
                             difference = abs((dtSched - dtPunch).seconds) / 60
@@ -1020,11 +1020,11 @@ class hr_schedule_alert_rule(models.Model):
                 for detail in sched_details:
                     isMatch = False
                     dtSched = datetime.strptime(
-                        detail.date_start, '%Y-%m-%d %H:%M:%S')
+                        detail.date_start, OE_DTFORMAT)
                     for punch in punches:
                         if punch.action == 'sign_in':
                             dtPunch = datetime.strptime(
-                                punch.name, '%Y-%m-%d %H:%M:%S')
+                                punch.name, OE_DTFORMAT)
                             difference = 0
                             if dtSched >= dtPunch:
                                 difference = (dtSched - dtPunch).seconds / 60
@@ -1041,17 +1041,17 @@ class hr_schedule_alert_rule(models.Model):
             sched_hours = 0
             for detail in sched_details:
                 dtStart = datetime.strptime(
-                    detail.date_start, '%Y-%m-%d %H:%M:%S')
-                dtEnd = datetime.strptime(detail.date_end, '%Y-%m-%d %H:%M:%S')
+                    detail.date_start, OE_DTFORMAT)
+                dtEnd = datetime.strptime(detail.date_end, OE_DTFORMAT)
                 sched_hours += float((dtEnd - dtStart).seconds / 60) / 60.0
 
             dtStart = False
             for punch in punches:
                 if punch.check_in:
                     dtStart = datetime.strptime(
-                        punch.check_in, '%Y-%m-%d %H:%M:%S')
+                        punch.check_in, OE_DTFORMAT)
                 elif punch.check_out:
-                    dtEnd = datetime.strptime(punch.name, '%Y-%m-%d %H:%M:%S')
+                    dtEnd = datetime.strptime(punch.name, OE_DTFORMAT)
                     actual_hours += float(
                         (dtEnd - dtStart).seconds / 60) / 60.0
                     if actual_hours > 8 and sched_hours <= 8:
@@ -1060,11 +1060,11 @@ class hr_schedule_alert_rule(models.Model):
             for detail in sched_details:
                 isMatch = False
                 dtSched = datetime.strptime(
-                    detail.date_start, '%Y-%m-%d %H:%M:%S')
+                    detail.date_start, OE_DTFORMAT)
                 for punch in punches:
                     if punch.check_in:
                         dtPunch = datetime.strptime(
-                            punch.name, '%Y-%m-%d %H:%M:%S')
+                            punch.name, OE_DTFORMAT)
                         difference = 0
                         if dtPunch > dtSched:
                             difference = (dtPunch - dtSched).seconds / 60
@@ -1078,11 +1078,11 @@ class hr_schedule_alert_rule(models.Model):
             for detail in sched_details:
                 isMatch = False
                 dtSched = datetime.strptime(
-                    detail.date_end, '%Y-%m-%d %H:%M:%S')
+                    detail.date_end, OE_DTFORMAT)
                 for punch in punches:
                     if punch.check_out:
                         dtPunch = datetime.strptime(
-                            punch.check_out, '%Y-%m-%d %H:%M:%S')
+                            punch.check_out, OE_DTFORMAT)
                         difference = 0
                         if dtPunch < dtSched:
                             difference = (dtSched - dtPunch).seconds / 60
@@ -1096,11 +1096,11 @@ class hr_schedule_alert_rule(models.Model):
             for detail in sched_details:
                 isMatch = False
                 dtSched = datetime.strptime(
-                    detail.date_start, '%Y-%m-%d %H:%M:%S')
+                    detail.date_start, OE_DTFORMAT)
                 for punch in punches:
                     if punch.check_in:
                         dtPunch = datetime.strptime(
-                            punch.check_in, '%Y-%m-%d %H:%M:%S')
+                            punch.check_in, OE_DTFORMAT)
                         difference = 0
                         if dtPunch < dtSched:
                             difference = (dtSched - dtPunch).seconds / 60
@@ -1114,11 +1114,11 @@ class hr_schedule_alert_rule(models.Model):
             for detail in sched_details:
                 isMatch = False
                 dtSched = datetime.strptime(
-                    detail.date_end, '%Y-%m-%d %H:%M:%S')
+                    detail.date_end, OE_DTFORMAT)
                 for punch in punches:
                     if punch.check_out:
                         dtPunch = datetime.strptime(
-                            punch.check_out, '%Y-%m-%d %H:%M:%S')
+                            punch.check_out, OE_DTFORMAT)
                         difference = 0
                         if dtPunch > dtSched:
                             difference = (dtPunch - dtSched).seconds / 60
@@ -1133,9 +1133,9 @@ class hr_schedule_alert_rule(models.Model):
             for punch in punches:
                 if punch.check_in:
                     dtStart = datetime.strptime(
-                        punch.check_in, '%Y-%m-%d %H:%M:%S')
+                        punch.check_in, OE_DTFORMAT)
                 elif punch.check_out:
-                    dtEnd = datetime.strptime(punch.name, '%Y-%m-%d %H:%M:%S')
+                    dtEnd = datetime.strptime(punch.name, OE_DTFORMAT)
                     leave_ids = leave_obj.search([
                         ('employee_id', '=', punch.employee_id.id),
                         ('type', '=', 'remove'),
@@ -1241,12 +1241,12 @@ class hr_attendance(models.Model):
 
             # XXX - Someone who cares about DST should fix this
             #
-            dt = datetime.strptime(strDay + ' 00:00:00', '%Y-%m-%d %H:%M:%S')
+            dt = datetime.strptime(strDay + ' 00:00:00', OE_DTFORMAT)
             lcldt = timezone(self.env.user.tz).localize(dt, is_dst=False)
             utcdt = lcldt.astimezone(utc)
             utcdtNextDay = utcdt + relativedelta(days=+1)
-            strDayStart = utcdt.strftime('%Y-%m-%d %H:%M:%S')
-            strNextDay = utcdtNextDay.strftime('%Y-%m-%d %H:%M:%S')
+            strDayStart = utcdt.strftime(OE_DTFORMAT)
+            strNextDay = utcdtNextDay.strftime(OE_DTFORMAT)
 
             alert_ids = alert_obj.search([('employee_id', '=', ee_id), '&',
                                           ('name', '>=', strDayStart),
diff --git a/custom/hr_schedule/security/ir.model.access.csv b/custom/hr_schedule/security/ir.model.access.csv
index 6fa5c62..d5cdd00 100644
--- a/custom/hr_schedule/security/ir.model.access.csv
+++ b/custom/hr_schedule/security/ir.model.access.csv
@@ -19,4 +19,4 @@ access_hr_schedule_alert_manager,access_hr_schedule_alert,model_hr_schedule_aler
 access_hr_schedule_alert_rule_manager,access_hr_schedule_alert,model_hr_schedule_alert_rule,hr.group_hr_manager,1,1,1,1
 access_hr_schedule_weekday_user,access_hr_schedule_weekday,model_hr_schedule_weekday,hr.group_hr_user,1,1,1,1
 access_hr_schedule_weekday_manager,access_hr_schedule_weekday,model_hr_schedule_weekday,hr.group_hr_manager,1,1,1,1
-access_hr_schedule_alert_rule_emp_mngr,access_hr_schedule_alert_emp_mngr,model_hr_schedule_alert_rule,groups_rules.group_employee_manager,1,1,1,0
+access_hr_schedule_alert_rule_emp_mngr,access_hr_schedule_alert_emp_mngr,model_hr_schedule_alert_rule,hr_admin.group_hr_admin,1,1,1,0
diff --git a/custom/hr_security/__manifest__.py b/custom/hr_security/__manifest__.py
index a0a093d..22ad35b 100755
--- a/custom/hr_security/__manifest__.py
+++ b/custom/hr_security/__manifest__.py
@@ -19,9 +19,10 @@ Human Resource Permission Groups
     "depends": [
         'base',
         'hr',
-        'hr_payroll',
-        'hr_contract',
-        'hr_payslip_amendment',
+        # 'hr_admin'
+        # 'hr_payroll',
+        # 'hr_contract',
+        # 'hr_payslip_amendment',
     ],
     'data': [
         'security/hr_security.xml',
diff --git a/custom/hr_security/security/hr_security.xml b/custom/hr_security/security/hr_security.xml
index b3e4296..bd6b8d9 100755
--- a/custom/hr_security/security/hr_security.xml
+++ b/custom/hr_security/security/hr_security.xml
@@ -21,18 +21,18 @@
             <field name="comment">the user will do payroll processing</field>
         </record>
         
-        <record id="group_payroll_manager" model="res.groups">
-            <field name="name">Payroll Manager</field>
-            <field name="category_id" ref="base.module_category_human_resources"/>
-            <field name="implied_ids" eval="[(4, ref('hr_security.group_payroll_user'))]"/>
-            <field name="users" eval="[(4, ref('base.user_root'))]"/>
-            <field name="comment">the user will do final payroll processing</field>
-            <field name="menu_access" eval="[(4,ref('hr.menu_hr_root')),(4,ref('hr_payroll.menu_hr_payroll_root')),
-            (4,ref('hr_payslip_amendment.menu_payslip_amendment'))]"/>
-            <!-- Change Menu in v10 from 'menu_hr_root_payroll' to 'menu_hr_payroll_root' -->
-            <!--<field name="menu_access" eval="[(4,ref('hr.menu_hr_root')),(4,ref('hr_payroll.menu_hr_root_payroll')),-->
+        <!--<record id="group_payroll_manager" model="res.groups">-->
+            <!--<field name="name">Payroll Manager</field>-->
+            <!--<field name="category_id" ref="base.module_category_human_resources"/>-->
+            <!--<field name="implied_ids" eval="[(4, ref('hr_admin.group_hr_admin'))]"/>-->
+            <!--<field name="users" eval="[(4, ref('base.user_root'))]"/>-->
+            <!--<field name="comment">the user will do final payroll processing</field>-->
+            <!--<field name="menu_access" eval="[(4,ref('hr.menu_hr_root')),(4,ref('hr_payroll.menu_hr_payroll_root')),-->
             <!--(4,ref('hr_payslip_amendment.menu_payslip_amendment'))]"/>-->
-        </record>
+            <!--&lt;!&ndash; Change Menu in v10 from 'menu_hr_root_payroll' to 'menu_hr_payroll_root' &ndash;&gt;-->
+            <!--&lt;!&ndash;<field name="menu_access" eval="[(4,ref('hr.menu_hr_root')),(4,ref('hr_payroll.menu_hr_root_payroll')),&ndash;&gt;-->
+            <!--&lt;!&ndash;(4,ref('hr_payslip_amendment.menu_payslip_amendment'))]"/>&ndash;&gt;-->
+        <!--</record>-->
 
     </data>    
 </odoo>
diff --git a/custom/hr_security/security/ir_rule.xml b/custom/hr_security/security/ir_rule.xml
index e2f4b5e..6798a2b 100755
--- a/custom/hr_security/security/ir_rule.xml
+++ b/custom/hr_security/security/ir_rule.xml
@@ -8,11 +8,11 @@
         <field name="domain_force">[('employee_id.user_id','=',user.id)]</field>
         <field name="groups" eval="[(4,ref('base.group_user'))]"/>
     </record>
-    <record id="property_rule_contract_officer" model="ir.rule">
-        <field name="name">HR Officer Contract</field>
-        <field name="model_id" ref="hr_contract.model_hr_contract"/>
-        <field name="domain_force">[(1, '=', 1)]</field>
-        <field name="groups" eval="[(4,ref('hr.group_hr_user')), (4,ref('hr_security.group_payroll_manager'))]"/>
-    </record>
+    <!--<record id="property_rule_contract_officer" model="ir.rule">-->
+        <!--<field name="name">HR Officer Contract</field>-->
+        <!--<field name="model_id" ref="hr_contract.model_hr_contract"/>-->
+        <!--<field name="domain_force">[(1, '=', 1)]</field>-->
+        <!--<field name="groups" eval="[(4,ref('hr.group_hr_user')), (4,ref('hr_admin.group_hr_admin'))]"/>-->
+    <!--</record>-->
   </data>
 </odoo>
diff --git a/custom/hr_transfer/hr_simplify.py b/custom/hr_transfer/hr_simplify.py
index 5ea272c..f62058e 100755
--- a/custom/hr_transfer/hr_simplify.py
+++ b/custom/hr_transfer/hr_simplify.py
@@ -72,5 +72,5 @@ class hr_contract(models.Model):
         if self.employee_id:
             dom['job_id'] = [('department_id', '=',
                               self.employee_id.department_id.id)]
-            self.employee_dept_id = self.employee_id.department_id.id
+            # self.employee_dept_id = self.employee_id.department_id.id
         return {'domain': dom}
diff --git a/custom/hr_transfer/hr_transfer.py b/custom/hr_transfer/hr_transfer.py
index 2cd7bd0..f16dc8e 100644
--- a/custom/hr_transfer/hr_transfer.py
+++ b/custom/hr_transfer/hr_transfer.py
@@ -113,7 +113,8 @@ class hr_transfer(models.Model):
     def _check_state(self, contract_id, effective_date):
         # check state of contract and also check end date of contract as well
         data = self.env['hr.contract'].browse(contract_id)
-        if data and data['state'] not in ['close', 'pending', 'open']:
+        if data and data.state not in\
+                ['trial', 'trial_ending', 'open', 'contract_ending']:
             raise ValidationError(_('The current state of the contract'
                                     'does not permit changes.'))
         if data and data.date_end:
@@ -127,10 +128,11 @@ class hr_transfer(models.Model):
                                         'the transfer.'))
         return True
 
-    @api.model
+    @api.one
     def transfer_contract(self, contract_id, job_id, xfer_id, effective_date):
         # Copy the contract and adjust start/end dates, job id,
         # etc. accordingly.
+        self.ensure_one()
         contract_obj = self.env['hr.contract']
         old_comtract_rec = contract_obj.browse(contract_id)
 
@@ -141,21 +143,26 @@ class hr_transfer(models.Model):
             'message_ids': False,
             'trial_date_start': False,
             'trial_date_end': False,
+            'department_id': self.dst_department_id.id,
         }
         if old_comtract_rec:
             data = old_comtract_rec.copy_data(default)
-            new_contract_rec = contract_obj.create(data[0])
-            if new_contract_rec:
+            c_id = contract_obj.create(data)
+            if c_id:
+                new_contract_rec = contract_obj.create(data[0])
                 vals = {}
                 # Set the new contract to the appropriate state
+                self.state_confirm()
                 # Terminate the current contract (and trigger appropriate state
                 # change)
                 vals['date_end'] = datetime.strptime(
                     effective_date, '%Y-%m-%d').date() + relativedelta(days=-1)
                 old_comtract_rec.write(vals)
+                if not self.effective_date_in_future():
+                    self.state_done()
                 # Link to the new contract
                 self.write({'dst_contract_id': new_contract_rec.id})
-                self.employee_id.contract_id.state = 'close'
+                # self.employee_id.contract_id.state = 'close'
         return
 
     @api.multi
@@ -224,8 +231,12 @@ class hr_transfer(models.Model):
     @api.model
     def try_pending_department_transfers(self):
         # Completes pending departmental transfers .Called from the scheduler
-        xfer_ids = self.env['hr.department.transfer'].search([
-            ('state', '=', 'pending')])
+        today = datetime.now().date()
+        xfer_ids = self.env['hr.department.transfer'].\
+            search([('state', '=', 'pending'),
+                    ('date', '<=',
+                     today.strftime(DEFAULT_SERVER_DATE_FORMAT))])
         for xfer in xfer_ids:
-            xfer.signal_confirm()
+            if not self.effective_date_in_future():
+                xfer.signal_done()
         return True
diff --git a/custom/hr_wage_increment/__manifest__.py b/custom/hr_wage_increment/__manifest__.py
index 3538e50..a76cf14 100755
--- a/custom/hr_wage_increment/__manifest__.py
+++ b/custom/hr_wage_increment/__manifest__.py
@@ -20,7 +20,7 @@ Wage Increment Handling
     """,
     'author': 'Bista Solutions',
     'website': 'http://bistasolutions.com',
-    "depends": ["hr_payroll_period", "hr_security", "hr_contract_state"],
+    "depends": ["hr_payroll_period", "hr_admin", "hr_contract_state"],
     "init_xml": [],
     'data': [
         'security/ir.model.access.csv',
diff --git a/custom/hr_wage_increment/models/wage_increment.py b/custom/hr_wage_increment/models/wage_increment.py
index 51748ba..6116cde 100755
--- a/custom/hr_wage_increment/models/wage_increment.py
+++ b/custom/hr_wage_increment/models/wage_increment.py
@@ -5,6 +5,7 @@ import odoo.addons.decimal_precision as dp
 from odoo import fields, models, api, _
 from odoo.tools import DEFAULT_SERVER_DATE_FORMAT
 from odoo.tools.translate import _
+from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as OE_DFORMAT
 
 
 class wage_increment(models.Model):
@@ -208,7 +209,7 @@ class wage_increment(models.Model):
                 # change)
                 vals['date_end'] = datetime.strptime(
                     wage_inc_rec.effective_date,
-                    '%Y-%m-%d').date() + relativedelta(days=-1)
+                    OE_DFORMAT).date() + relativedelta(days=-1)
                 wage_inc_rec.contract_id.write(vals)
                 wage_inc_rec.contract_id.state_close()
                 wage_inc_rec.contract_id.is_active = False
@@ -307,7 +308,7 @@ class wage_increment_run(models.Model):
 
         users_obj = self.env['res.users']
 
-        if users_obj.has_group('hr_security.group_hr_director'):
+        if users_obj.has_group('hr_admin.group_hr_admin'):
             domain = [('state', 'in', ['confirm'])]
             return domain
 
diff --git a/custom/hr_wage_increment/security/ir.model.access.csv b/custom/hr_wage_increment/security/ir.model.access.csv
index 68fd1da..3a238c9 100755
--- a/custom/hr_wage_increment/security/ir.model.access.csv
+++ b/custom/hr_wage_increment/security/ir.model.access.csv
@@ -1,7 +1,7 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_hr_wage_increment_user,access_hr_wage_increment,model_hr_contract_wage_increment,hr.group_hr_user,1,1,1,1
 access_hr_wage_increment_manager,access_hr_wage_increment,model_hr_contract_wage_increment,hr.group_hr_manager,1,1,1,1
-access_hr_wage_increment_director,access_hr_wage_increment,model_hr_contract_wage_increment,hr_security.group_hr_director,1,1,1,1
+access_hr_wage_increment_director,access_hr_wage_increment,model_hr_contract_wage_increment,hr_admin.group_hr_admin,1,1,1,1
 access_hr_wage_increment_run_user,access_hr_wage_increment_run,model_hr_contract_wage_increment_run,hr.group_hr_user,1,1,1,1
 access_hr_wage_increment_run_manager,access_hr_wage_increment_run,model_hr_contract_wage_increment_run,hr.group_hr_manager,1,1,1,1
-access_hr_wage_increment_run_director,access_hr_wage_increment_run,model_hr_contract_wage_increment_run,hr_security.group_hr_director,1,1,1,1
+access_hr_contract_wage_increment_user,access_hr_contract_wage_increment_user,model_hr_contract_wage_increment,base.group_user,1,0,0,0
diff --git a/custom/ir_filters_extension/__manifest__.py b/custom/ir_filters_extension/__manifest__.py
index 5451e8c..3234fcb 100755
--- a/custom/ir_filters_extension/__manifest__.py
+++ b/custom/ir_filters_extension/__manifest__.py
@@ -11,6 +11,7 @@ System Filters Security
     'author': 'Tamkeen ERP Team',
     'depends': [
         'base',
+        'hr_admin',
     ],
     'data': [
         'security/ir.model.access.csv',
diff --git a/custom/ir_filters_extension/security/ir.model.access.csv b/custom/ir_filters_extension/security/ir.model.access.csv
index af3d094..b668f19 100755
--- a/custom/ir_filters_extension/security/ir.model.access.csv
+++ b/custom/ir_filters_extension/security/ir.model.access.csv
@@ -1,4 +1,4 @@
 id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
 access_ir_filters_user,ir.filters.user,base.model_ir_filters,base.group_user,1,1,1,0
-access_ir_filters_admin,ir.filters.admin,base.model_ir_filters,base.group_erp_manager,1,1,1,0
+access_ir_filters_admin,ir.filters.admin,base.model_ir_filters,hr_admin.group_hr_admin,1,1,1,0
 
diff --git a/custom/leaves_workflow_notification/__manifest__.py b/custom/leaves_workflow_notification/__manifest__.py
index 2b33467..c5de5dc 100644
--- a/custom/leaves_workflow_notification/__manifest__.py
+++ b/custom/leaves_workflow_notification/__manifest__.py
@@ -19,7 +19,7 @@
     'depends': [
         'base',
         'base_action_rule',
-        'hr_holidays',
+        'hr_holidays_extension',
         # 'hr_holidays_extension'
     ],
     'data': [
diff --git a/custom/leaves_workflow_notification/views/hr_holidays_view.xml b/custom/leaves_workflow_notification/views/hr_holidays_view.xml
index 3793368..cbfe140 100644
--- a/custom/leaves_workflow_notification/views/hr_holidays_view.xml
+++ b/custom/leaves_workflow_notification/views/hr_holidays_view.xml
@@ -5,9 +5,9 @@
         <record id="view_leave_request_form_notification" model="ir.ui.view">
             <field name="name">hr.holidays.view.form.inherit</field>
             <field name="model">hr.holidays</field>
-            <field name="inherit_id" ref="hr_holidays.edit_holiday_new"/>
+            <field name="inherit_id" ref="hr_holidays_extension.hr_holidays_inherit_for_add_reason"/>
             <field name="arch" type="xml">
-                <xpath expr="//field[@name='department_id']" position="after">
+                <xpath expr="//field[@name='ex_leave']" position="after">
                     <field name="skip_notifications"
                            groups="hr.group_hr_user"
                            attrs="{'invisible': [('type', '=', 'add')]}"/>
diff --git a/custom/login_lockout/models/login_attempt.py b/custom/login_lockout/models/login_attempt.py
index 3e5cf93..586eab8 100644
--- a/custom/login_lockout/models/login_attempt.py
+++ b/custom/login_lockout/models/login_attempt.py
@@ -1,5 +1,6 @@
 from odoo import api, fields, models
 import datetime
+from odoo.tools import DEFAULT_SERVER_DATETIME_FORMAT as DTF
 
 
 class login_attempt(models.Model):
@@ -19,7 +20,7 @@ class login_attempt(models.Model):
         if remote_address:
             now = datetime.datetime.now()
             login_attempt_vals = {
-                'login_datetime': now.strftime("%Y-%m-%d %H:%M:%S"),
+                'login_datetime': now.strftime(DTF),
                 'remote_address': remote_address,
                 'failed_user_id': failed_user_id,
             }
@@ -39,10 +40,9 @@ class login_attempt(models.Model):
         # datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
         search_clause = [('remote_address', '=', remote_address),
                          ('login_datetime', '<=',
-                          now.strftime("%Y-%m-%d %H:%M:%S")),
+                          now.strftime(DTF)),
                          ('login_datetime', '>=',
-                          now_minus_max_attempts_period.strftime(
-                              "%Y-%m-%d %H:%M:%S"))
+                          now_minus_max_attempts_period.strftime(DTF))
                          ]
         login_attempt_ids = self.search(search_clause, order='id desc',
                                         limit=max_attempts_num)
diff --git a/custom/one_install_all/__manifest__.py b/custom/one_install_all/__manifest__.py
index 70b278b..7c75dc9 100644
--- a/custom/one_install_all/__manifest__.py
+++ b/custom/one_install_all/__manifest__.py
@@ -9,7 +9,7 @@
                 'country_nationality',
                 'email_validation',
                 'emp_self_services',
-                'groups_rules',
+                'hr_admin',
                 'hr_contract_custom',
                 'hr_contract_init',
                 'hr_department_sequence',
@@ -24,7 +24,7 @@
                 'hr_policy_ot',
                 'hr_policy_presence',
                 'hr_public_holidays',
-                'hr_security',
+                'hr_admin',
                 'hr_skill',
                 'hr_language',
                 'hr_payroll_register',
diff --git a/custom/purchase_config/__manifest__.py b/custom/purchase_config/__manifest__.py
index 5a7f8e8..a668af6 100755
--- a/custom/purchase_config/__manifest__.py
+++ b/custom/purchase_config/__manifest__.py
@@ -9,7 +9,9 @@
     'name': 'Purchase Configuration',
     'version': '1.1',
     'category': 'Purchase Management',
-    'depends': ['purchase', 'base_action_rule', 'stock', 'groups_rules'],
+    'depends': ['purchase', 'base_action_rule', 'stock',
+                'hr_admin'
+                ],
     'author': 'Bista Solutions',
     'website': 'http://bistasolutions.com',
     'description': """
diff --git a/custom/purchase_config/models/purchase.py b/custom/purchase_config/models/purchase.py
index d61c874..6c5aadd 100755
--- a/custom/purchase_config/models/purchase.py
+++ b/custom/purchase_config/models/purchase.py
@@ -66,6 +66,7 @@ class purchase_order(models.Model):
                 return super(purchase_order, self).button_draft()
         super(purchase_order, self).button_draft()
 
+
     @api.multi
     def button_confirm(self):
         for order in self:
@@ -86,3 +87,14 @@ class purchase_order(models.Model):
             po_company_number = 'PO' + str(date.today().year) + str(pr)
             order.write({'po_company_number': po_company_number})
         return True
+
+    # @api.model
+    # def _prepare_picking(self):
+    #     res = super(purchase_order, self)._prepare_picking()
+    #     if res and res.get('origin'):
+    #         pr = self.env['ir.sequence']. \
+    #             next_by_code('purchase.order.company.number')
+    #         po_company_number = 'PO' + str(date.today().year) + str(pr)
+    #         self.write({'po_company_number': po_company_number})
+    #         res.update({'origin': po_company_number})
+    #     return res
diff --git a/custom/purchase_config/views/purchase_view.xml b/custom/purchase_config/views/purchase_view.xml
index b3414d7..386ffe9 100755
--- a/custom/purchase_config/views/purchase_view.xml
+++ b/custom/purchase_config/views/purchase_view.xml
@@ -59,7 +59,7 @@
 
                 <xpath expr="//button[@name='button_draft']" position="replace"/>
                 <xpath expr="//button[@name='button_cancel']" position="before">
-                    <button name="button_draft" states="sent,bid,confirmed,budget_confirmed,purchase" string="Set to Draft" type="object" groups="groups_rules.group_vp"/>
+                    <button name="button_draft" states="sent,bid,confirmed,budget_confirmed,purchase" string="Set to Draft" type="object" groups="hr_admin.group_hr_admin"/>
                 </xpath>
 
                 <!--<xpath expr="//button[@name='button_cancel']" position="attributes">-->
diff --git a/custom/purchase_order_report/report/po_parser.py b/custom/purchase_order_report/report/po_parser.py
index 3bae573..9a8d8d1 100755
--- a/custom/purchase_order_report/report/po_parser.py
+++ b/custom/purchase_order_report/report/po_parser.py
@@ -3,6 +3,7 @@ from num2words import num2words
 from odoo.report import report_sxw
 from odoo import models, api
 from odoo.api import Environment
+from odoo.tools import DEFAULT_SERVER_DATE_FORMAT as OE_DFORMAT
 
 
 class PurchaseOrderReportParser(report_sxw.rml_parse):
@@ -11,7 +12,7 @@ class PurchaseOrderReportParser(report_sxw.rml_parse):
             cr, uid, name, context=context)
         self.localcontext.update({
             'get_order_total': self._get_order_total,
-            'today': datetime.strftime(datetime.now(), '%Y-%m-%d'),
+            'today': datetime.strftime(datetime.now(), OE_DFORMAT),
             'get_payment_status': self.get_payment_status,
             'get_related_invoice': self.get_related_invoice,
             'get_invoice_related_payment': self.get_invoice_related_payment,
diff --git a/custom/purchase_order_report/report_register.xml b/custom/purchase_order_report/report_register.xml
index 61f2737..03668a7 100644
--- a/custom/purchase_order_report/report_register.xml
+++ b/custom/purchase_order_report/report_register.xml
@@ -5,7 +5,7 @@
         <!-- Report Register -->
         <report id="purchase_payment_status_report_reg"
                 model="purchase.order"
-                string="PO Payment status Report"
+                string="Purchase Order(Payments)"
                 name="purchase_order_report.purchase_payment_report_template"
                 file="purchase_order_report.purchase_payment_report_template"
                 report_type="qweb-pdf" />
diff --git a/custom/purchase_requisition_config/__manifest__.py b/custom/purchase_requisition_config/__manifest__.py
index c1b0278..4407088 100755
--- a/custom/purchase_requisition_config/__manifest__.py
+++ b/custom/purchase_requisition_config/__manifest__.py
@@ -13,7 +13,7 @@
         'purchase_requisition',
         'base_action_rule',
         'account',
-        'groups_rules',
+        'hr_admin',
         'ceo_group',
         'purchase_config',
         'purchase',
diff --git a/custom/purchase_requisition_config/security/ir_security.xml b/custom/purchase_requisition_config/security/ir_security.xml
index aa67cba..534fb88 100755
--- a/custom/purchase_requisition_config/security/ir_security.xml
+++ b/custom/purchase_requisition_config/security/ir_security.xml
@@ -81,7 +81,7 @@
             <field name="model_id" ref="purchase_requisition.model_purchase_requisition" />
             <field name="domain_force">['|',('create_uid','=',user.id),'|',('employee_ids.parent_id.user_id.id','=',user.id),('employee_ids.department_id.id','child_of', [user.employee_ids[0].department_id.id])]
             </field>
-            <field name="groups" eval="[(4,ref('groups_rules.group_vp'))]" />
+            <field name="groups" eval="[(4,ref('hr_admin.group_hr_admin'))]" />
             <field name="perm_read" eval="True" />
             <field name="perm_write" eval="True" />
             <field name="perm_create" eval="True" />
@@ -94,7 +94,7 @@
             <field name="model_id" ref="purchase_requisition.model_purchase_requisition" />
             <field name="domain_force">['|',('create_uid','=',user.id),('employee_ids.parent_id.user_id.id','=',user.id)]
             </field>
-            <field name="groups" eval="[(4,ref('groups_rules.group_employee_manager'))]" />
+            <field name="groups" eval="[(4,ref('hr_admin.group_hr_admin'))]" />
             <field name="perm_read" eval="True" />
             <field name="perm_write" eval="True" />
             <field name="perm_create" eval="True" />
diff --git a/custom/purchase_requisition_config/views/purchase_requisition_view.xml b/custom/purchase_requisition_config/views/purchase_requisition_view.xml
index cc2df97..67147ab 100755
--- a/custom/purchase_requisition_config/views/purchase_requisition_view.xml
+++ b/custom/purchase_requisition_config/views/purchase_requisition_view.xml
@@ -70,9 +70,9 @@
                         <button name="to_manager" states="draft" string="Send to manager"
                                 class="oe_highlight" type="object"/>
                         <button name="to_vp" states="vp" string="VP Approval"
-                                class="oe_highlight" groups="groups_rules.group_vp" type="object"/>
+                                class="oe_highlight" groups="hr_admin.group_hr_admin" type="object"/>
                         <button name="manager_appr" states="tomanager_app" string="Manager Approval"
-                                class="oe_highlight" groups="groups_rules.group_employee_manager" type="object"/>
+                                class="oe_highlight" groups="hr_admin.group_hr_admin" type="object"/>
                         <button name="budget_appr" states="budget" string="Budget Approval"
                                 class="oe_highlight" groups="purchase_config.group_budget_manager" type="object"/>
                         <button name="send_notify" states="budget" type="object" string="Notify"
@@ -87,14 +87,14 @@
                                 groups="purchase.group_purchase_user" />
                         <button name="to_draft_state"
                                 states="tomanager_app,vp" string="Return"
-                                groups="groups_rules.group_employee_manager" type="object"/>
+                                groups="hr_admin.group_hr_admin" type="object"/>
 
                         <button name="to_draft_state" states="budget" string="Return"
                                 groups="account.group_account_user" type="object"/>
                         <button name="to_draft_state" states="purchase_app" string="Return"
                                 groups="purchase.group_purchase_user" type="object"/>
                         <button name="to_draft_state" states="vp" string="Return"
-                                groups="groups_rules.group_vp" type="object"/>
+                                groups="hr_admin.group_hr_admin" type="object"/>
                         <button name="to_draft_state" states="ceo" string="Return"
                                 groups="ceo_group.group_ceo" type="object"/>
 
